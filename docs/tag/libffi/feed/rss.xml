<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - libffi</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Sun, 03 Nov 2013 10:27:00 +0100</lastBuildDate><item><title>The mix of libffi with other changes</title><link>https://blog.siphos.be/2013/11/the-mix-of-libffi-with-other-changes/</link><description>&lt;p&gt;I &lt;a href="http://blog.siphos.be/2013/04/securely-handling-libffi/"&gt;once again&lt;/a&gt;
came across libffi. Not only does the libffi approach fight with SELinux
alone, it also triggers the TPE (Trusted Path Execution) protections in
grSecurity. And when I tried to reinstall Portage, Portage seemed to
create some sort of runtime environment in a temporary directory as
well, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 03 Nov 2013 10:27:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-11-03:/2013/11/the-mix-of-libffi-with-other-changes/</guid><category>Security</category><category>Gentoo</category><category>hardened</category><category>libffi</category><category>portage</category><category>selinux</category></item><item><title>Securely handling libffi</title><link>https://blog.siphos.be/2013/04/securely-handling-libffi/</link><description>&lt;p&gt;I've recently came across &lt;a href="http://sourceware.org/libffi/"&gt;libffi&lt;/a&gt; again.
No, not because it was mentioned during the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; online meeting, but
because my &lt;code&gt;/var/tmp&lt;/code&gt; wasn't mounted correctly, and &lt;strong&gt;emerge&lt;/strong&gt; (actually
python) uses libffi. Most users won't notice this, because libffi works
behind the scenes. But when it fails, it fails bad …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 28 Apr 2013 03:50:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-04-28:/2013/04/securely-handling-libffi/</guid><category>Security</category><category>libffi</category><category>selinux</category><category>strace</category></item></channel></rss>