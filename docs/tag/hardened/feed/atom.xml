<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Simplicity is a form of art... - hardened</title><link href="https://blog.siphos.be/" rel="alternate"></link><link href="https://blog.siphos.be/tag/hardened/feed/atom.xml" rel="self"></link><id>https://blog.siphos.be/</id><updated>2017-08-22T19:04:00+02:00</updated><entry><title>Switch to Gentoo sources</title><link href="https://blog.siphos.be/2017/08/switch-to-gentoo-sources/" rel="alternate"></link><published>2017-08-22T19:04:00+02:00</published><updated>2017-08-22T19:04:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2017-08-22:/2017/08/switch-to-gentoo-sources/</id><summary type="html">&lt;p&gt;You've might already read it on the Gentoo news site, the &lt;a href="https://www.gentoo.org/news/2017/08/19/hardened-sources-removal.html"&gt;Hardened Linux kernel sources
are removed from the tree&lt;/a&gt; due to the &lt;a href="http://grsecurity.net/"&gt;grsecurity&lt;/a&gt; change where the grsecurity
Linux kernel patches are no longer provided for free. The decision was made due to
supportability and maintainability reasons.&lt;/p&gt;
&lt;p&gt;That doesn't mean that users who want to stick with the grsecurity related hardening
features are left alone. &lt;a href="https://blogs.gentoo.org/ago/2017/08/21/sys-kernel-grsecurity-sources-available/#utm_source=feed&amp;amp;utm_medium=feed&amp;amp;utm_campaign=feed"&gt;Agostino Sarubbo has started providing sys-kernel/grsecurity-sources&lt;/a&gt;
for the users who want to stick with it, as it is based on &lt;a href="https://github.com/minipli/linux-unofficial_grsec"&gt;minipli's unofficial patchset&lt;/a&gt;.
I seriously hope that the patchset will continue to be maintained and, who knows, even evolve further.&lt;/p&gt;
&lt;p&gt;Personally though, I'm switching to the Gentoo sources, and stick with SELinux as one of the
protection measures. And with that, I might even start using my NVidia graphics card a bit more, 
as that one hasn't been touched in several years (I have an Optimus-capable setup with both an
Intel integrated graphics card and an NVidia one, but all attempts to use nouveau for the one game
I like to play - minecraft - didn't work out that well).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;You've might already read it on the Gentoo news site, the &lt;a href="https://www.gentoo.org/news/2017/08/19/hardened-sources-removal.html"&gt;Hardened Linux kernel sources
are removed from the tree&lt;/a&gt; due to the &lt;a href="http://grsecurity.net/"&gt;grsecurity&lt;/a&gt; change where the grsecurity
Linux kernel patches are no longer provided for free. The decision was made due to
supportability and maintainability reasons.&lt;/p&gt;
&lt;p&gt;That doesn't mean that users who want to stick with the grsecurity related hardening
features are left alone. &lt;a href="https://blogs.gentoo.org/ago/2017/08/21/sys-kernel-grsecurity-sources-available/#utm_source=feed&amp;amp;utm_medium=feed&amp;amp;utm_campaign=feed"&gt;Agostino Sarubbo has started providing sys-kernel/grsecurity-sources&lt;/a&gt;
for the users who want to stick with it, as it is based on &lt;a href="https://github.com/minipli/linux-unofficial_grsec"&gt;minipli's unofficial patchset&lt;/a&gt;.
I seriously hope that the patchset will continue to be maintained and, who knows, even evolve further.&lt;/p&gt;
&lt;p&gt;Personally though, I'm switching to the Gentoo sources, and stick with SELinux as one of the
protection measures. And with that, I might even start using my NVidia graphics card a bit more, 
as that one hasn't been touched in several years (I have an Optimus-capable setup with both an
Intel integrated graphics card and an NVidia one, but all attempts to use nouveau for the one game
I like to play - minecraft - didn't work out that well).&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;How secure is Gentoo sources with SELinux?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is hard to just say that one kernel tree or another is safe(r) or not. Security is not something
one can get with a simple check-list. It is a matter of properly configuring services and systems,
patching it when needed, limiting expoosure and what not.&lt;/p&gt;
&lt;p&gt;A huge advantage of grsecurity was that it had very insightful and advanced protection measures
(many of them focusing on memory-related attacks), and prevented unwanted behavior from applications
(and users) in a very fine-grained manner. With SELinux, I can still prevent some unwanted behavior,
but it is important to know that SELinux and grsecurity's kernel hardening features are orthogonal
to each other. It is only the grsecurity RBAC model that is somewhat in competition with SELinux.&lt;/p&gt;
&lt;p&gt;SELinux is able to define and manage behavior between types. However, within a single type, many
actions are not governed at all. SELinux can manage which types (domains) are able to invoke which
system calls, but once a call is allowed, SELinux doesn't do any additional controls anymore.&lt;/p&gt;
&lt;p&gt;Loosing protection controls from grsecurity, as a security activist, is not something I like. But
on the other hand, I need to consider the wide SELinux using audience in Gentoo, who is most likely
going to switch to the gentoo sources as well (at least the majority of them).&lt;/p&gt;
&lt;p&gt;Gentoo sources is not insecure by itself, as are many other kernel sources. A huge advantage is that
the gentoo sources are well maintained, so any kernel vulnerability that gets reported and fixed will
receive the proper fix in the Gentoo sources quickly as well (and if you think it can go even faster,
consider &lt;a href="https://wiki.gentoo.org/wiki/Project:Security/Padawan_Process"&gt;becoming a Gentoo security padawan&lt;/a&gt;. And with SELinux enabled, some additional security
controls can be implemented (the efficacy of it depends on the quality of the policy).&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project"&gt;Kernel Self Protection Project&lt;/a&gt; also aims to improve the Linux kernel security, and immediately
through upstreamed and accepted patches. This means that the protection measures, once in the kernel,
should remain inside (awkward regressions notwithstanding). I truly hope that the KSPP moves forward.
In the mean time, read up on the &lt;a href="https://www.kernel.org/doc/html/latest/security/self-protection.html"&gt;Kernel Self-Protection&lt;/a&gt; document to learn more about how to harden
the Linux kernel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So that's it, just one less security control?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For now, there is no immediate substitute. But that doesn't mean that there is nothing one can do
to increase the secure state of a Linux desktop, workstation or even IoT device. Although remotely
executable exploits do pop up and exist, many vulnerabilities in the Linux kernel are mainly exploitable
through a local access pattern.&lt;/p&gt;
&lt;p&gt;That means that vulnerabilities often can only be exploited through a local invocation (or through chaining
by using other vulnerabilities - often in completely different applications or services - in order to
execute the local malware). Hence, hardening of the entire system is extremely important.&lt;/p&gt;
&lt;p&gt;Previously, I had an account with multiple SELinux roles assigned to it. Depending on what I wanted to
do, I transitioned to the right role (either through the &lt;code&gt;newrole&lt;/code&gt; command, or through &lt;code&gt;sudo&lt;/code&gt; which
has integrated SELinux support). With the switch to the gentoo sources, I decided to make it a bit
harder for malware on my system to work: i start using separate Linux accounts depending on the purpose
(which I call persona).&lt;/p&gt;
&lt;p&gt;Developing SELinux policies is now done on a separate account, managing remote systems through another
account (although my servers use multi-factor authentication so there was already some additional safeguard
in place there), handling my side-work with another account, playing games with another account, etc.&lt;/p&gt;
&lt;p&gt;It isn't that I don't trust SELinux for this (as each domain is well isolated and controlled). But SELinux
cannot prevent vulnerabilities within applications if the action/result of a succesfully exploited
vulnerability does not change the expected behavior of the application versus the other resources
on the system (and even there, the fine-grained approach of policies might not even be sufficiently
fine-grained, as SELinux uses labels, and many resources have the same label assigned).&lt;/p&gt;
&lt;p&gt;Suppose some malware is able to capture me giving in my password, or is trying to phish for it. By
using separate accounts (with separate passphrazes of course) the impact is reduced a bit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other things on the plate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The change to different accounts was one thing I wanted to establish before switching to a new kernel
tree. There are other aspects that I want to investigate in the near future as well though.&lt;/p&gt;
&lt;p&gt;First of all, I'm probably going to enable &lt;a href="https://github.com/Yubico/pam-u2f"&gt;U2F authentication&lt;/a&gt; on my workstation as well for
all interactive accounts. It has been on my list for quite some time, and quickly going through the
publicly available fora doesn't reveal any major challenges to do so. Build the PAM module, update
the PAM service configurations and you're done. Hopefully. ;-)&lt;/p&gt;
&lt;p&gt;Next, I'm going to play around a bit with &lt;a href="https://wiki.gentoo.org/wiki/AddressSanitizer"&gt;AddressSanitizer&lt;/a&gt;. ASAN was incompatible with grsecurity,
but now that that's out of the way, there's no reason not to investigate it further. I am not going
to enable it for the kernel though (as some KSPP implemented measures are incompatible with ASAN as well),
and probably not for my complete workstation yet (even though it is sufficiently powerful to handle the major
performance impact).&lt;/p&gt;
&lt;p&gt;I'm going to put some more focus on &lt;a href="https://wiki.gentoo.org/wiki/Integrity_Measurement_Architecture"&gt;Integrity Measurement Architecture support&lt;/a&gt;, although my main protection
measure with IMA - the TPM or Trusted Platform Module - has been fried (don't ask) so I can't use it anymore.
Perhaps I'm going to buy a very lightweight/small system with a TPM on it to continue development. We'll see.&lt;/p&gt;
&lt;p&gt;My current knowledge of &lt;a href="https://en.wikipedia.org/wiki/Seccomp"&gt;seccomp&lt;/a&gt; is fairly theoretical (with a few hands-on tutorials, but that's it). It
has been on my TODO list for some time to look in more depth to it. Perhaps this is the right time.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="hardened"></category><category term="grsecurity"></category><category term="selinux"></category></entry><entry><title>Moving closer to 2.4 stabilization</title><link href="https://blog.siphos.be/2015/04/moving-closer-to-2-4-stabilization/" rel="alternate"></link><published>2015-04-27T19:18:00+02:00</published><updated>2015-04-27T19:18:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2015-04-27:/2015/04/moving-closer-to-2-4-stabilization/</id><summary type="html">&lt;p&gt;The &lt;a href="https://github.com/SELinuxProject/selinux/wiki"&gt;SELinux userspace&lt;/a&gt;
project has released version 2.4 in february this year, after release
candidates have been tested for half a year. After its release, we at
the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened&lt;/a&gt;
project have been working hard to integrate it within Gentoo. This
effort has been made a bit more difficult …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="https://github.com/SELinuxProject/selinux/wiki"&gt;SELinux userspace&lt;/a&gt;
project has released version 2.4 in february this year, after release
candidates have been tested for half a year. After its release, we at
the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened&lt;/a&gt;
project have been working hard to integrate it within Gentoo. This
effort has been made a bit more difficult due to the migration of the
policy store from one location to another while at the same time
switching to HLL- and CIL based builds.&lt;/p&gt;
&lt;p&gt;Lately, 2.4 itself has been pretty stable, and we're focusing on the
proper migration from 2.3 to 2.4. The SELinux policy has been adjusted
to allow the migrations to work, and a few final fixes are being tested
so that we can safely transition our stable users from 2.3 to 2.4.
Hopefully we'll be able to stabilize the userspace this month or
beginning of next month.&lt;/p&gt;</content><category term="Gentoo"></category><category term="2.4"></category><category term="Gentoo"></category><category term="hardened"></category><category term="selinux"></category><category term="userspace"></category></entry><entry><title>Gentoo Hardened august meeting</title><link href="https://blog.siphos.be/2014/08/gentoo-hardened-august-meeting/" rel="alternate"></link><published>2014-08-29T16:43:00+02:00</published><updated>2014-08-29T16:43:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-08-29:/2014/08/gentoo-hardened-august-meeting/</id><summary type="html">&lt;p&gt;Another month has passed, so we had another online meeting to discuss
the progress within Gentoo Hardened.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead elections&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The yearly lead elections within Gentoo Hardened were up again. Zorry
(Magnus Granberg) was re-elected as project lead so doesn't need to
update his LinkedIn profile yet ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;blueness (Anthony G …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so we had another online meeting to discuss
the progress within Gentoo Hardened.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead elections&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The yearly lead elections within Gentoo Hardened were up again. Zorry
(Magnus Granberg) was re-elected as project lead so doesn't need to
update his LinkedIn profile yet ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;blueness (Anthony G. Basile) has been working on the uclibc stages for
some time. Due to the configurable nature of these setups, many
&lt;code&gt;/etc/portage&lt;/code&gt; files were provided as part of the stages, which
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=519686"&gt;shouldn't&lt;/a&gt; happen. Work
is on the way to update this accordingly.&lt;/p&gt;
&lt;p&gt;For the musl setup, blueness is also rebuilding the stages to use a
symbolic link to the dynamic linker (&lt;code&gt;/lib/ld-linux-arch.so&lt;/code&gt;) as
recommended by the musl maintainers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsecurity with PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=520198"&gt;bug&lt;/a&gt; has been
submitted which shows that large binary files (in the bug, a chrome
binary with debug information is shown to be more than 2 Gb in size)
cannot be pax-mark'ed, with &lt;code&gt;paxctl&lt;/code&gt; informing the user that the file is
too big. The problem is when the PAX marks are in ELF (as the
application mmaps the binary) - users of extended attributes based PaX
markings do not have this problem. blueness is working on making things
a bit more intelligent, and to fix this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have been making a few changes to the SELinux setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The live ebuilds (those with version 9999 which use the repository
    policy rather than snapshots of the policies) are now being used as
    "master" in case of releases: the ebuilds can just be copied to the
    right version to support the releases. The release script inside the
    repository is adjusted to reflect this as well.&lt;/li&gt;
&lt;li&gt;The SELinux eclass now supports two variables, &lt;code&gt;SELINUX_GIT_REPO&lt;/code&gt;
    and &lt;code&gt;SELINUX_GIT_BRANCH&lt;/code&gt;, which allows users to use their own
    repository, and developers to work in specific branches together. By
    setting the right value in the users' &lt;code&gt;make.conf&lt;/code&gt; switching policy
    repositories or branches is now a breeze.&lt;/li&gt;
&lt;li&gt;Another change in the SELinux eclass is that, after the installation
    of SELinux policies, we will check the reverse dependencies of the
    policy package and relabel the files of these packages. This allows
    us to only have &lt;code&gt;RDEPEND&lt;/code&gt; dependencies towards the SELinux policy
    packages (if the application itself does not otherwise link with
    &lt;em&gt;libselinux&lt;/em&gt;), making the dependency tree within the package manager
    more correct. We still need to update these packages to drop the
    &lt;code&gt;DEPEND&lt;/code&gt; dependency, which is something we will focus on in the next
    few months.&lt;/li&gt;
&lt;li&gt;In order to support improved cooperation between SELinux developers
    in the Gentoo Hardened team - perfinion (Jason Zaman) is in the
    queue for becoming a new developer in our mids - a &lt;a href="https://wiki.gentoo.org/wiki/Project:SELinux/CodingStyle"&gt;coding style for
    SELinux
    policies&lt;/a&gt;
    is being drafted up. This is of course based on the coding style of
    the reference policy, but with some Gentoo specific improvements and
    more clarifications.&lt;/li&gt;
&lt;li&gt;perfinion has been working on improving the SELinux support in
    OpenRC (release 0.13 and higher), making some of the additions that
    we had to make in the past - such as the &lt;code&gt;selinux_gentoo&lt;/code&gt; init
    script - obsolete.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The meeting also discussed a few bugs in more detail, but if you really
want to know, just hang on and wait for the IRC logs ;-) Other usual
sections (system integrity and profiles) did not have any notable topics
to describe.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Some changes under the hood</title><link href="https://blog.siphos.be/2014/08/some-changes-under-the-hood/" rel="alternate"></link><published>2014-08-09T21:45:00+02:00</published><updated>2014-08-09T21:45:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-08-09:/2014/08/some-changes-under-the-hood/</id><summary type="html">&lt;p&gt;In between conferences, technical writing jobs and traveling, we did a
few changes under the hood for SELinux in Gentoo.&lt;/p&gt;
&lt;p&gt;First of all, new policies are bumped and also stabilized (2.20130411-r3
is now stable, 2.20130411-r5 is \~arch). These have a few updates
(mergers from upstream), and r5 also …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In between conferences, technical writing jobs and traveling, we did a
few changes under the hood for SELinux in Gentoo.&lt;/p&gt;
&lt;p&gt;First of all, new policies are bumped and also stabilized (2.20130411-r3
is now stable, 2.20130411-r5 is \~arch). These have a few updates
(mergers from upstream), and r5 also has preliminary support for
&lt;a href="http://www.freedesktop.org/software/systemd/man/tmpfiles.d.html"&gt;tmpfiles&lt;/a&gt;
(at least the OpenRC implementation of it), which is made part of the
&lt;a href="http://packages.gentoo.org/package/sec-policy/selinux-base-policy"&gt;selinux-base-policy&lt;/a&gt;
package.&lt;/p&gt;
&lt;p&gt;The ebuilds to support new policy releases now are relatively simple
copies of the live ebuilds (which always contain the latest policies) so
that bumping (either by me or other developers) is easy enough. There's
also a release script in our policy repository which tags the right git
commit (the point at which the release is made), creates the necessary
patches, uploads them, etc.&lt;/p&gt;
&lt;p&gt;One of the changes made is to "drop" the &lt;code&gt;BASEPOL&lt;/code&gt; variable. In the
past, &lt;code&gt;BASEPOL&lt;/code&gt; was a variable inside the ebuilds that pointed to the
right patchset (and base policy) as we initially supported policy
modules of different base releases. However, that was a mistake and we
quickly moved to bumping all policies with every releaes, but kept the
&lt;code&gt;BASEPOL&lt;/code&gt; variable in it. Now, &lt;code&gt;BASEPOL&lt;/code&gt; is "just" the &lt;code&gt;${PVR}&lt;/code&gt; value of
the ebuild so no longer needs to be provided. In the future, I'll
probably remove &lt;code&gt;BASEPOL&lt;/code&gt; from the internal eclass and the
&lt;code&gt;selinux-base*&lt;/code&gt; packages as well.&lt;/p&gt;
&lt;p&gt;A more important change to the eclass is support for the
&lt;code&gt;SELINUX_GIT_REPO&lt;/code&gt; and &lt;code&gt;SELINUX_GIT_BRANCH&lt;/code&gt; variables (for live ebuilds,
i.e. those with the 9999 version). If set, then they pull from the
mentioned repository (and branch) instead of the default
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;hardened-refpolicy.git&lt;/a&gt;
repository. This allows for developers to do some testing on a different
branch easily, or for other users to use their own policy repository
while still enjoying the SELinux integration support in Gentoo through
the &lt;code&gt;sec-policy/*&lt;/code&gt; packages.&lt;/p&gt;
&lt;p&gt;Finally, I wrote up a first attempt at our &lt;a href="https://wiki.gentoo.org/wiki/Project:SELinux/CodingStyle"&gt;coding
style&lt;/a&gt;,
heavily based on the coding style from the reference policy of course
(as our policy is still following this upstream project). This should
allow the team to work better together and to decide on namings
autonomously (instead of hours of discussing and settling for something
as silly as an interface or boolean name ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="eclass"></category><category term="Gentoo"></category><category term="git"></category><category term="hardened"></category><category term="refpolicy"></category><category term="selinux"></category></entry><entry><title>Gentoo Hardened July meeting</title><link href="https://blog.siphos.be/2014/08/gentoo-hardened-july-meeting/" rel="alternate"></link><published>2014-08-01T21:48:00+02:00</published><updated>2014-08-01T21:48:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-08-01:/2014/08/gentoo-hardened-july-meeting/</id><summary type="html">&lt;p&gt;I failed to show up myself (I fell asleep - kids are fun, but deplete
your energy source quickly), but that shouldn't prevent me from making a
nice write-up of the meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 gives some issues with kernel compilations and other components.
Lately, breakage has been reported with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I failed to show up myself (I fell asleep - kids are fun, but deplete
your energy source quickly), but that shouldn't prevent me from making a
nice write-up of the meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 gives some issues with kernel compilations and other components.
Lately, breakage has been reported with GCC 4.9.1 compiling MySQL or
with debugging symbols. So for hardened, we'll wait this one out until
the bugs are fixed.&lt;/p&gt;
&lt;p&gt;For GCC 4.10, the
&lt;a href="https://gcc.gnu.org/ml/gcc-patches/2014-07/msg02231.html"&gt;--enable-default-pie&lt;/a&gt;
patch has been sent upstream. If that is accepted, the SSP one will be
sent as well.&lt;/p&gt;
&lt;p&gt;In uclibc land, stages are being developed for PPC. This is the final
architecture that is often used in embedded worlds that needed support
for it in Gentoo, and that's now being finalized. Go blueness!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;libpcre&lt;/code&gt; upgrade broke relabeling operations on SELinux enabled
systems. A fix for this has been made part of libselinux, but a little
too late, so some users will be affected by the problem. It's easily
worked around (removing the &lt;code&gt;*.bin&lt;/code&gt; files in the &lt;code&gt;contexts/files/&lt;/code&gt;
directory of the SELinux configuration) and hopefully will never occur
again.&lt;/p&gt;
&lt;p&gt;The 2.3 userland has finally been stabilized (we had a few dependencies
that we were waiting for - and we were a dependency ourselves for other
packages as well).&lt;/p&gt;
&lt;p&gt;Finally, some &lt;a href="http://article.gmane.org/gmane.linux.gentoo.hardened/6266"&gt;thought
discussion&lt;/a&gt;
is being done (not that there's much feedback on it, but every
documented step is a good step imo) on the SELinux policy within Gentoo
(and the principles that we'll follow that are behind it).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsecurity / PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Due to some security issues, the Linux kernel sources have been
stabilized more rapidly than usual, which left little time for broad
validation and regression testing. Updates and fixes have been applied
since and new stabilizations occurred. Hopefully we're now at the right,
stable set again.&lt;/p&gt;
&lt;p&gt;The C-based &lt;code&gt;install-xattr&lt;/code&gt; application (which is performance-wise a big
improvement over the Python-based one) is working well in "lab
environments" (some developers are using it exclusively). It is included
in the Portage repository
^(if\ I\ understand\ the\ chat\ excerpts\ correctly)^ but as such
not available for broader usage yet.&lt;/p&gt;
&lt;p&gt;An update against &lt;code&gt;elfix&lt;/code&gt; is made as well as there was a dependency
mismatch when building with &lt;code&gt;USE=-ptpax&lt;/code&gt;. This will be corrected in
elfix-0.9.&lt;/p&gt;
&lt;p&gt;Finally, blueness is also working on a GLEP (Gentoo Linux Enhancement
Proposal) to export VDB information (especially &lt;code&gt;NEEDED.ELF.2&lt;/code&gt;) as this
is important for ELF/library graph information (as used by revdep-pax,
migrate-pax, etc.). Although Portage already does this, this is not part
of the PMS and as such other package managers might not do this (such as
Paludis).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Updates on the profiles has been made to properly include multilib
related variables and other metadata. For some profiles, this went as
easy as expected (nice stacking), but other profiles have inheritance
troubles making it much harder to include the necessary information.
Although some talks have arised on the gentoo-dev mailinglist about
refactoring how Gentoo handles profiles, there hasn't been done much
more than just talking :-( But I'm sure we haven't heard the last of
this yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness has added information on &lt;code&gt;EMULTRAMP&lt;/code&gt; in the kernel
configuration, especially noting to the user that it is needed for
Python support in Gentoo Hardened. It is also in the &lt;a href="https://wiki.gentoo.org/wiki/Hardened/PaX_Quickstart"&gt;PaX
Quickstart&lt;/a&gt;
document, although this document is becoming a very large one and users
might overlook it.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Gentoo Hardened, June 2014</title><link href="https://blog.siphos.be/2014/06/gentoo-hardened-june-2014/" rel="alternate"></link><published>2014-06-15T21:28:00+02:00</published><updated>2014-06-15T21:28:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-06-15:/2014/06/gentoo-hardened-june-2014/</id><summary type="html">&lt;p&gt;Friday the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project had its
monthly online meeting to talk about the progress within the various
tools, responsibilities and subprojects.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;toolchain&lt;/strong&gt; part, Zorry mentioned that GCC 4.9 and 4.8.3 will
have SSP enabled by default. The hardened profiles will still have a
different …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Friday the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project had its
monthly online meeting to talk about the progress within the various
tools, responsibilities and subprojects.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;toolchain&lt;/strong&gt; part, Zorry mentioned that GCC 4.9 and 4.8.3 will
have SSP enabled by default. The hardened profiles will still have a
different SSP setting than the default (so yes, there will still be
differences between the two) but this will help in securing the Gentoo
default installations.&lt;/p&gt;
&lt;p&gt;Zorry is also working on upstreaming the PIE patches for GCC 4.10.&lt;/p&gt;
&lt;p&gt;Next to the regular toolchain, blueness also mentioned his intentions to
launch a &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened_musl"&gt;Hardened
musl&lt;/a&gt; subproject
which will focus on the musl C library (rather than glibc or uclibc) and
hardening.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;kernel&lt;/strong&gt; side, two recent kernel vulnerabilities in the vanilla
kernel Linux (pty race and privilege escalation through futex code)
painted the discussions on IRC recently. Some versions of the hardened
kernels are still available in the tree, but the more recent
(non-vulnerable) kernels have proven not to be as stable as we'd hoped.&lt;/p&gt;
&lt;p&gt;The pty race vulnerability is possibly not applicable to hardened
kernels thanks to grSecurity, due to its protection to access the kernel
symbols.&lt;/p&gt;
&lt;p&gt;The latest kernels should not be used with KSTACKOVERFLOW on production
systems though; there are some issues reported with virtio network
interface support (on the guests) and ZFS.&lt;/p&gt;
&lt;p&gt;Also, on the &lt;strong&gt;Pax&lt;/strong&gt; support, the &lt;code&gt;install-xattr&lt;/code&gt; saga continues. The
new wrapper that blueness worked in dismissed some code to keep the
&lt;code&gt;PWD&lt;/code&gt; so the &lt;code&gt;$S&lt;/code&gt; directory knowledge was "lost". This is now fixed. All
that is left is to have the wrapper included and stabilized.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;SELinux&lt;/strong&gt; side, it was the usual set of progress. Policy
stabilization and user land application and library stabilization. The
latter is waiting a bit because of the multilib support that's now being
integrated in the ebuilds as well (and thus has a larger set of
dependencies to go through) but no show-stoppers there. Also, the
&lt;a href="https://wiki.gentoo.org/wiki/SELinux"&gt;SELinux documentation portal&lt;/a&gt; on
the wiki was briefly mentioned.&lt;/p&gt;
&lt;p&gt;Also, the &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;policycoreutils
vulnerability&lt;/a&gt;
has been &lt;a href="http://blog.siphos.be/2014/05/dropping-sesandbox-support/"&gt;worked
around&lt;/a&gt; so it
is no longer applicable to us.&lt;/p&gt;
&lt;p&gt;On the hardened &lt;strong&gt;profiles&lt;/strong&gt;, we had a nice discussion on enabling
capabilities support (and move towards capabilities instead of setuid
binaries), which klondike will try to tackle during the summer holidays.&lt;/p&gt;
&lt;p&gt;As I didn't take notes during the meeting, this post might miss a few
(and I forgot to enable logging as well) but as Zorry sends out the
meeting logs anyway later, you can read up there ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Dropping sesandbox support</title><link href="https://blog.siphos.be/2014/05/dropping-sesandbox-support/" rel="alternate"></link><published>2014-05-09T21:03:00+02:00</published><updated>2014-05-09T21:03:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-05-09:/2014/05/dropping-sesandbox-support/</id><summary type="html">&lt;p&gt;A &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;vulnerability in
seunshare&lt;/a&gt;,
part of &lt;code&gt;policycoreutils&lt;/code&gt;, came to light recently (through &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=509896"&gt;bug
509896&lt;/a&gt;). The issue is
within &lt;code&gt;libcap-ng&lt;/code&gt; actually, but the specific situation in which the
vulnerability can be exploited is only available in &lt;code&gt;seunshare&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, &lt;code&gt;seunshare&lt;/code&gt; is not built by default on Gentoo. You need to define
&lt;code&gt;USE …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;vulnerability in
seunshare&lt;/a&gt;,
part of &lt;code&gt;policycoreutils&lt;/code&gt;, came to light recently (through &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=509896"&gt;bug
509896&lt;/a&gt;). The issue is
within &lt;code&gt;libcap-ng&lt;/code&gt; actually, but the specific situation in which the
vulnerability can be exploited is only available in &lt;code&gt;seunshare&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, &lt;code&gt;seunshare&lt;/code&gt; is not built by default on Gentoo. You need to define
&lt;code&gt;USE="sesandbox"&lt;/code&gt;, which I implemented as an optional build because I
see no need for the &lt;code&gt;seunshare&lt;/code&gt; command and the &lt;em&gt;SELinux sandbox
(sesandbox)&lt;/em&gt; support. Upstream (Fedora/RedHat) calls it &lt;em&gt;sandbox&lt;/em&gt;, which
Gentoo translates to &lt;em&gt;sesandbox&lt;/em&gt; as it collides with the Gentoo sandbox
support otherwise. But I digress.&lt;/p&gt;
&lt;p&gt;The build of the SELinux sandbox support is optional, mostly because we
do not have a direct reason to support it. There are no Gentoo users
that I'm aware of that use it. It is used to start an application in a
chroot-like environment, based on Linux namespaces and a specific
SELinux policy called &lt;code&gt;sandbox_t&lt;/code&gt;. The idea isn't that bad, but I rather
focus on proper application confinement and full system enforcement
support (rather than specific services). The SELinux sandbox makes a bit
more sense when the system supports unconfined domains (and users are in
the &lt;code&gt;unconfined_t&lt;/code&gt; domain), but Gentoo focuses on strict policy support.&lt;/p&gt;
&lt;p&gt;Anyway, this isn't the first vulnerability in &lt;code&gt;seunshare&lt;/code&gt;. In 2011,
another privilege escalation vulnerability was found in the application
(see &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=374897"&gt;bug 374897&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;But having a vulnerability in the application (or its interaction with
&lt;code&gt;libcap-ng&lt;/code&gt;) doesn't mean an exploitable vulnerability. Most users will
not even have &lt;code&gt;seunshare&lt;/code&gt;, and those that do have it will not be able to
call it if you are running with SELinux in &lt;em&gt;strict&lt;/em&gt; or have
&lt;code&gt;USE="-unconfined"&lt;/code&gt; set for the other policies. If &lt;code&gt;USE="unconfined"&lt;/code&gt; is
set and you run &lt;em&gt;mcs&lt;/em&gt;, &lt;em&gt;targeted&lt;/em&gt; or &lt;em&gt;mls&lt;/em&gt; (which isn't default either,
the default is &lt;em&gt;strict&lt;/em&gt;) then if your users are still mapped to the
regular user domains (&lt;code&gt;user_t&lt;/code&gt;, &lt;code&gt;staff_t&lt;/code&gt; or even &lt;code&gt;sysadm_t&lt;/code&gt;) then
&lt;code&gt;seunshare&lt;/code&gt; doesn't work as the SELinux policy prevents its behavior
before the vulnerability is triggered.&lt;/p&gt;
&lt;p&gt;Assuming you &lt;em&gt;do&lt;/em&gt; have a &lt;em&gt;targeted&lt;/em&gt; policy with users mapped to
&lt;code&gt;unconfined_t&lt;/code&gt; and you have built &lt;code&gt;policycoreutils&lt;/code&gt; with
&lt;code&gt;USE="sesandbox"&lt;/code&gt; or you run in SELinux in permissive mode, then please
tell me if you can trigger the exploit. On my systems, &lt;code&gt;seunshare&lt;/code&gt; fails
with the message that it can't drop its privileges and thus exits
(instead of executing the exploit code as it suggested by the reports).&lt;/p&gt;
&lt;p&gt;Since I mentioned that most user don't use SELinux sandbox, and because
I can't even get it to work (regardless of the vulnerability), I decided
to drop support for it from the builds. That also allows me to more
quickly introduce the new userspace utilities as I don't need to
refactor the code to switch from &lt;code&gt;sandbox&lt;/code&gt; to &lt;code&gt;sesandbox&lt;/code&gt; anymore.&lt;/p&gt;
&lt;p&gt;So, &lt;code&gt;policycoreutils-2.2.5-r4&lt;/code&gt; and &lt;code&gt;policycoreutils-2.3_rc1-r1&lt;/code&gt; are now
available which do not build &lt;code&gt;seunshare&lt;/code&gt; anymore. And now I can focus on
providing the full &lt;em&gt;2.3&lt;/em&gt; userspace that has been announced today.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="policycoreutils"></category><category term="selinux"></category><category term="seunshare"></category><category term="vulnerability"></category></entry><entry><title>Online hardened meeting of March</title><link href="https://blog.siphos.be/2014/03/online-hardened-meeting-of-march/" rel="alternate"></link><published>2014-03-27T23:44:00+01:00</published><updated>2014-03-27T23:44:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2014-03-27:/2014/03/online-hardened-meeting-of-march/</id><summary type="html">&lt;p&gt;I'm back from the depths of the unknown, so time to pick up my usual
write-up of the online Gentoo Hardened meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 is being worked on, and might be released by end of April (based
on the amount of open bugs). You can find the &lt;a href="http://gcc.gnu.org/gcc-4.9/changes.html"&gt;changes …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm back from the depths of the unknown, so time to pick up my usual
write-up of the online Gentoo Hardened meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 is being worked on, and might be released by end of April (based
on the amount of open bugs). You can find the &lt;a href="http://gcc.gnu.org/gcc-4.9/changes.html"&gt;changes
online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Speaking of GCC, pipacs asked if it is possible in the upcoming 4.8.2
ebuilds to disable the SSP protection for development purposes (such as
when you're developing GCC plugins that do similar protection measures
like SSP, but you don't want those to collide with each other). Recent
discussion on Gentoo development mailinglist had a consensus that the
SSP protection measures (&lt;code&gt;-fstack-protector&lt;/code&gt;) can be enabled by default,
but of course if people are developing new GCC plugins which might
interfere with SSP, disabling it is needed. One can use
&lt;code&gt;-fno-stack-protector&lt;/code&gt; for this, or build stuff with &lt;code&gt;-D__KERNEL__&lt;/code&gt; (as
for kernel builds the default SSP handling is disabled anyway, allowing
for kernel-specific implementations).&lt;/p&gt;
&lt;p&gt;Other than those, there is no direct method to make SSP generally
unavailable.&lt;/p&gt;
&lt;p&gt;Blueness is also working on &lt;a href="http://www.musl-libc.org/"&gt;musc-libc&lt;/a&gt; on
Gentoo, which would give a strong incentive for hardened embedded
devices. For desktops, well, don't hold your breath just yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel grSec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It looks like kernel 3.13 will be Ubuntu's LTS kernel choice, which also
makes it the kernel version that grSecurity will put the long term
support for in. And with Linux 3.14 almost out, the grsec patches for it
are ready as well. Of the previous LTS kernels, 3.2 will probably finish
seeing grsec support somewhere this year.&lt;/p&gt;
&lt;p&gt;The C wrapper (called &lt;strong&gt;install-xattr&lt;/strong&gt;) used to preserve xattr
information during Portage builds has not been integrated in Portage
yet, but the development should be finished.&lt;/p&gt;
&lt;p&gt;During the chat session, we also discussed the
&lt;a href="https://lwn.net/Articles/274859/"&gt;gold&lt;/a&gt;
&lt;a href="https://wiki.gentoo.org/wiki/Gold"&gt;linker&lt;/a&gt; and how it might be used by
more and more packages (so not only by users that explicitly ask for
it). udev version 210 onwards is one example, but some others exist. But
other than its existence there's not much to say right here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The
&lt;a href="http://oss.tresys.com/projects/refpolicy/wiki/DownloadRelease"&gt;20140311&lt;/a&gt;
release of the reference policy is now in the Portage tree.&lt;/p&gt;
&lt;p&gt;Also, prometheanfire caught a vulnerability
(&lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-1874"&gt;CVE-2014-1874&lt;/a&gt;)
in SELinux which has been fixed in the latest kernels.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I made a few updates to the &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/"&gt;gentoo hardening
guide&lt;/a&gt; in
XCCDF/OVAL format. Nothing major, and I still need to add in a lot of
other best practices (as well as automate the tests through OVAL), but I
do intend to update the files (at least the gentoo one and ssh as
OpenSSH 6 is now readily available) regularly in the next few weeks.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few minor changes have been made to &lt;code&gt;hardened/uclibc&lt;/code&gt; to support
multilib, but other than that nothing has been done (nor needed to be
done) to our profiles.&lt;/p&gt;
&lt;p&gt;That's it for this months hardened meeting write-up. See you next time!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>December hardened meeting</title><link href="https://blog.siphos.be/2013/12/december-hardened-meeting/" rel="alternate"></link><published>2013-12-20T10:20:00+01:00</published><updated>2013-12-20T10:20:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-12-20:/2013/12/december-hardened-meeting/</id><summary type="html">&lt;p&gt;Yesterday evening (UTC, that is) the members of the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project filled
the #gentoo-hardened IRC channel again - it was time for another online
follow-up meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few patches on the toolchain need to be created to mark SSP as
default, but this is just a minor workload.&lt;/p&gt;
&lt;p&gt;And …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday evening (UTC, that is) the members of the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project filled
the #gentoo-hardened IRC channel again - it was time for another online
follow-up meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few patches on the toolchain need to be created to mark SSP as
default, but this is just a minor workload.&lt;/p&gt;
&lt;p&gt;And on the &lt;a href="http://code.google.com/p/address-sanitizer/"&gt;ASAN (Address
Sanitizer)&lt;/a&gt; debacle;
well... still the same. Doesn't work with PaX. I think there is a
standstill on this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel, grsecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is not clear yet what the next LTS (Long Term Stable) kernel will be
that the &lt;a href="https://grsecurity.net/"&gt;grSecurity&lt;/a&gt; team will support. This
depends on the Ubuntu LTS support, and as it is not clear which kernel
that distribution will use for LTS, the grSecurity team can also not say
what kernel it will be. (So please stop asking ;-)&lt;/p&gt;
&lt;p&gt;grsecurity 3.0 is out, with the following commit message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;commit 4f48151d49f2697c3e2e108a50513a8d61fb150d
Author: Brad Spengler 
Date:   Sun Nov 24 17:47:14 2013 -0500

    Version bumped to 3.0 (we&amp;#39;d been on 2.9.1 for way too long and numerous
    features have been added since then)

    Introduce new atomic RBAC reload method, developed as part of sponsorship
    by EIG

    This is accompanied by an updated 3.0 gradm which will use the new reload
    method when -R is passed to gradm.  The old method will still be available
    via gradm -r (which is what a 2.9.1 gradm will continue to use).

    The new RBAC reload method is atomic in the sense that at no point in the
    reload process will the system not be covered by a coherent full policy.
    In contrast to previous reload behavior, it also preserves inherited subjects
    and special roles.

    The old RBAC reload method has also been made atomic.  Both methods have
    been updated to perform role_allowed_ip checks only against the IP tagged
    to the task at the time its role was first applied or changed.  This resolves
    long-standing usability problems with the use of role_allowed_ip and matches
    the policies created by learning.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The new version requires the use of &lt;code&gt;&amp;gt;=gradm-3.0&lt;/code&gt;. Some hardened-sources
packages already contain the 3.0 patchset (currently in testing). In a
few days, a final hardened-sources with a 2.9.1 patchset will be
stabilized; after that, only 3.0 patchset sources will be used.&lt;/p&gt;
&lt;p&gt;Another open issue (for a while) is the &lt;code&gt;install.py&lt;/code&gt; wrapper used to
properly pax-mark binaries during package building (instead of
post-merge changes). Although it works functionally well, it has serious
performance regressions when hundreds of files need to be merged and
marked. For each file, the Python interpreter is launched again, making
this a very time-consuming effort. Blueness is currently working on a
C-based wrapper which should load much faster.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The live repository of the Gentoo Hardened policies is well up to date
with the latest evolutions of the reference policy. If you want to use
these, use the &lt;code&gt;-9999&lt;/code&gt; ebuilds for the SELinux policy packages. This can
be accomplished with the following line in
&lt;path&gt;package.accept_keywords&lt;/path&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sec-policy/* **
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recently, revision 5 of the SELinux policies has been pushed to the tree
(currently in testing). This one also contains a few required changes to
the policy for the new userspace utilities which are also now available
in the tree. An important update on the new userspace utilities is that
they contain many of the patches we needed in Gentoo and of course the
necessary updates, patches and improvements all-round. Once the SELinux
policies are stabilized, the userspace utilities will be too.&lt;/p&gt;
&lt;p&gt;After a few successful runs with SELinux on ARM devices, we will most
likely be tagging our SELinux packages (policies and userspace
utilities) as &lt;code&gt;~arm&lt;/code&gt;. Documentation will need to be updated on this as
well, not only to cater for the additional keyword, but also because of
one (perhaps a few) changes needed, like fixing the SELinux binary
policy (as most ARM systems come with a lower kernel version).&lt;/p&gt;
&lt;p&gt;SELinux support on ZFS also seems to work well, with the last patches in
(thanks to prometheanfire).&lt;/p&gt;
&lt;p&gt;As a final aspect, the SELinux eclass in Gentoo Linux now also supports
fetching the latest policy sources from git through HTTP (instead of
git/ssh).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Not much to discuss here; IMA/EVM and kernel signing all work well.&lt;/p&gt;
&lt;p&gt;In the next few days/weeks, I will be working on a &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/gentoo.html"&gt;Gentoo Security
Benchmark&lt;/a&gt;
as a sort-of follow-up (improvement) of the current &lt;a href="http://www.gentoo.org/doc/en/security/"&gt;Gentoo Security
Handbook&lt;/a&gt;, now using SCAP
methods.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There has been discussion about supporting a &lt;a href="http://www.gentoo.org/doc/en/security/"&gt;hardened desktop
profile&lt;/a&gt; in Gentoo again. This
does come with the nasty surprise that these profiles don't play well
together, so a solution needs to be brought in place. This could be a
"hardened desktop" profile separate from the gentoo desktop one (and as
such manually synchronized), or an improved approach on profile
stacking.&lt;/p&gt;
&lt;p&gt;One idea was to support stacking with a maximum depth, allowing to use
changes made by a profile without inheriting the changes that that
profile inherited to a certain extend.&lt;/p&gt;
&lt;p&gt;Another idea is to use a more dependency-based syntax (similar to OpenRC
dependency system for init scripts), which not only allows for proper
stacking and the necessary flexibility, but also improves readability:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;before {
  hardened/linux/amd64
}
after {
  default/linux/amd64
}
depends {
  targets/desktop/gnome
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next few months will be interesting to see how this will evolve ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All our documents are on the &lt;a href="https://wiki.gentoo.org"&gt;wiki&lt;/a&gt;, so if you
notice gaps or see possibilities for improvement - by all means, do
them.&lt;/p&gt;
&lt;p&gt;All in all a good session. Thanks for the good work guys!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>Gentoo SELinux policy release script</title><link href="https://blog.siphos.be/2013/12/gentoo-selinux-policy-release-script/" rel="alternate"></link><published>2013-12-11T18:37:00+01:00</published><updated>2013-12-11T18:37:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-12-11:/2013/12/gentoo-selinux-policy-release-script/</id><summary type="html">&lt;p&gt;A few months ago, I wrote a small script that aids in the creation of
new SELinux policy packages. The script is on the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;repository&lt;/a&gt;
itself, in the &lt;code&gt;gentoo/&lt;/code&gt; subdirectory, and is called
&lt;code&gt;release-prepare.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The reason for the script is that there are a number of steps to
perform …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few months ago, I wrote a small script that aids in the creation of
new SELinux policy packages. The script is on the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;repository&lt;/a&gt;
itself, in the &lt;code&gt;gentoo/&lt;/code&gt; subdirectory, and is called
&lt;code&gt;release-prepare.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The reason for the script is that there are a number of steps to
perform, one of which (tagging the release) I forgot to do too often. So
today I made a new release of the policy packages (2.20130424-r4) with
the script, and decided to blog about it as other developers in the
hardened team might one day be asked to make a release when I'm not
available.&lt;/p&gt;
&lt;p&gt;When the script is called, it spits out the usual help information.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sh release-prepare.sh -h
Usage: release-prepare.sh

Example: release-prepare.sh 2.20130424-r2 2.20130424-r3

The script will copy the ebuilds of the  towards the
 and update the string occurrences of that version
(mostly for the BASEPOL variable).

The following environment variables must be declared correctly for the script
to function properly:
  - GENTOOX86 should point to the gentoo-x86 checkout
    E.g. export GENTOOX86=&amp;quot;/home/user/dev/gentoo-x86&amp;quot;
  - HARDENEDREFPOL should point to the hardened-refpolicy.git checkout
    E.g. export HARDENEDREFPOL=&amp;quot;/home/user/dev/hardened-refpolicy&amp;quot;
  - REFPOLRELEASE should point to the current latest /release/ of the reference
    policy (so NOT to a checkout), extracted somewhere on the file system.
    E.g. export REFPOLRELEASE=&amp;quot;/home/user/local/refpolicy-20130424&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So first, we need to export three environment variables needed by the
script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GENTOOX86&lt;/code&gt; points to the CVS checkout of the Portage tree. It is
    used to create new ebuilds.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HARDENEDREFPOL&lt;/code&gt; is the git checkout of the policy repository. This
    one is used to read the changes from to generate a patch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REFPOLRELEASE&lt;/code&gt; is an extracted &lt;code&gt;refpolicy-20130424.tar.gz&lt;/code&gt; (the
    upstream release of the reference policy). This extracted location
    is needed to generate the patch (the difference between our
    repository and the upstream release).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After setting the variables, the script does its magic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sh release-prepare.sh 2.20130424-r3 2.20130424-r4
Creating patch 0001-full-patch-against-stable-release.patch... done
Creating patch bundle for 2.20130424-r4... done
Copying patch bundle into /usr/portage/distfiles and dev.g.o... done
Removing old patchbundle references in Manifest (in case of rebuild)... done
Creating new ebuilds based on old version... done
Marking ebuilds as ~arch... done
Creating tag 2.20130424-r4 in our repository... done
The release has now been prepared.

Please go do the following to finish up:
- In /home/swift/dev/gentoo-x86/sec-policy go &amp;quot;cvs add&amp;quot; all the new ebuilds
- In /home/swift/dev/gentoo-x86/sec-policy run &amp;quot;repoman manifest&amp;quot; and &amp;quot;repoman full&amp;quot;

Then, before finally committing - do a run yourself, ensuring that the right
version is deployed of course:
- &amp;quot;emerge -1 sec-policy/selinux-aide
sec-policy/selinux-alsa
...
Only then do a &amp;#39;repoman commit -m &amp;#39;Release of 2.20130424-r4&amp;#39;&amp;#39;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script performs the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It creates the patch with the difference between the main refpolicy
    release and our repository. Our repository closely follows the
    upstream release, but still contains quite a few changes that have
    not been upstreamed yet (due to history loss of the changes, or the
    changes are very gentoo-specific, or the changes still need to
    be improved). In the past, we maintained all the patches separately,
    but this meant that the deployment of the policy ebuilds took too
    long (around 100 patches being applied takes a while, and took more
    than 80% of the total deployment time on a regular server system).
    By using a single patch file, the deployment time is
    reduced drastically.&lt;/li&gt;
&lt;li&gt;It then compresses this patch file and stores it in
    &lt;code&gt;/usr/portage/distfiles&lt;/code&gt; (so that later &lt;code&gt;repoman manifest&lt;/code&gt; can take
    the file into account) as well as on my dev.gentoo.org location
    (where it is referenced). If other developers create a release, they
    will need to change this location (and the pointer in the ebuilds).&lt;/li&gt;
&lt;li&gt;Previous file references in the &lt;code&gt;Manifest&lt;/code&gt; files are removed, so
    that &lt;code&gt;repoman&lt;/code&gt; does not think the digest can be skipped.&lt;/li&gt;
&lt;li&gt;New ebuilds are created, copied from the previous version. In these
    ebuilds, the &lt;code&gt;KEYWORDS&lt;/code&gt; variable is updated to only contain
    &lt;code&gt;~arch&lt;/code&gt; keywords.&lt;/li&gt;
&lt;li&gt;A release tag is created in the git repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then the script tells the user to add the new files to the repository,
run &lt;code&gt;repoman manifest&lt;/code&gt; and &lt;code&gt;repoman full&lt;/code&gt; to verify the quality of the
ebuilds and generate the necessary digests. Then, and also after
testing, the created ebuilds can be committed to the repository.&lt;/p&gt;
&lt;p&gt;The last few steps have explicitly not been automated so the developer
has the chance to update the ebuilds (in case more than just the policy
contents has changed between releases) or do dry runs without affecting
the &lt;code&gt;gentoo-x86&lt;/code&gt; repository.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="policy"></category><category term="release"></category><category term="selinux"></category></entry><entry><title>November online hardened meeting</title><link href="https://blog.siphos.be/2013/12/november-online-hardened-meeting/" rel="alternate"></link><published>2013-12-11T12:12:00+01:00</published><updated>2013-12-11T12:12:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-12-11:/2013/12/november-online-hardened-meeting/</id><summary type="html">&lt;p&gt;Later than usual, as I wasn't able to make the meeting myself (thus had
to wait for the meeting logs in order to draft up this summary), so here
it is. The next meeting is scheduled for next week, btw ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The 4.8.2 ebuild for GCC is available …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Later than usual, as I wasn't able to make the meeting myself (thus had
to wait for the meeting logs in order to draft up this summary), so here
it is. The next meeting is scheduled for next week, btw ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The 4.8.2 ebuild for GCC is available in the tree, currently still
masked.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The grSecurity project has made the patches for the 3.12 kernel
available; a hardened 3.12 kernel is available in the
&lt;code&gt;hardened-development&lt;/code&gt; overlay.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matthew is working on &lt;a href="https://github.com/zfsonlinux/zfs/pull/1835"&gt;ZFSonLinux and
SELinux&lt;/a&gt; support.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matthew and Steev have been working on SELinux and ARM support. It seems
to work, but kernel versions matter greatly. We might want to open up
ARM keywords.&lt;/p&gt;
&lt;p&gt;That's about it. As blueness wasn't there as well, the topics were
discussed quite fast. The full logs can be found &lt;a href="http://thread.gmane.org/gmane.linux.gentoo.hardened/6117"&gt;on the gentoo-hardened
mailinglist&lt;/a&gt;.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>The mix of libffi with other changes</title><link href="https://blog.siphos.be/2013/11/the-mix-of-libffi-with-other-changes/" rel="alternate"></link><published>2013-11-03T10:27:00+01:00</published><updated>2013-11-03T10:27:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-11-03:/2013/11/the-mix-of-libffi-with-other-changes/</id><summary type="html">&lt;p&gt;I &lt;a href="http://blog.siphos.be/2013/04/securely-handling-libffi/"&gt;once again&lt;/a&gt;
came across libffi. Not only does the libffi approach fight with SELinux
alone, it also triggers the TPE (Trusted Path Execution) protections in
grSecurity. And when I tried to reinstall Portage, Portage seemed to
create some sort of runtime environment in a temporary directory as
well, and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I &lt;a href="http://blog.siphos.be/2013/04/securely-handling-libffi/"&gt;once again&lt;/a&gt;
came across libffi. Not only does the libffi approach fight with SELinux
alone, it also triggers the TPE (Trusted Path Execution) protections in
grSecurity. And when I tried to reinstall Portage, Portage seemed to
create some sort of runtime environment in a temporary directory as
well, and SELinux wasn't up to allowing that either.&lt;/p&gt;
&lt;p&gt;Let's first talk about a quick workaround for the libffi-with-TPE issue.
Because libffi wants to create executable files in a world-writable
directory and then execute that file (try finding the potential security
issue here) TPE is prohibiting the execution. The easiest workaround is
to add the &lt;code&gt;portage&lt;/code&gt; Linux user, as well as the Linux accounts that you
use to run emerge with (even just things like &lt;strong&gt;emerge --info&lt;/strong&gt;) in the
&lt;code&gt;wheel&lt;/code&gt; group. This group is exempt from TPE protections (unless you
configured a different group in your kernel for this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# zgrep CONFIG_GRKERNSEC_TPE_TRUSTED_GID /proc/config.gz
CONFIG_GRKERNSEC_TPE_TRUSTED_GID=10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we also need to allow the &lt;code&gt;portage_t&lt;/code&gt; domain to execute files
labeled with &lt;code&gt;portage_tmpfs_t&lt;/code&gt;. You can do this by creating your own
SELinux policy module with the following content (or use selocal):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;can_exec(portage_t, portage_tmpfs_t)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works around the libffi issue for now. A better solution still has
to be implemented (as discussed in the previous post).&lt;/p&gt;
&lt;p&gt;With regards to the portage installation failing, you'll notice this
quickly when you get an error like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# emerge -1 portage
Calculating dependencies  ... done!
Traceback (most recent call last):
  File &amp;quot;/usr/bin/emerge&amp;quot;, line 50, in &amp;lt;module&amp;gt;
    retval = emerge_main()
  File &amp;quot;/usr/lib64/portage/pym/_emerge/main.py&amp;quot;, line 1031, in emerge_main
    return run_action(emerge_config)
  File &amp;quot;/usr/lib64/portage/pym/_emerge/actions.py&amp;quot;, line 4062, in run_action
    emerge_config.args, spinner)
  File &amp;quot;/usr/lib64/portage/pym/_emerge/actions.py&amp;quot;, line 453, in action_build
    retval = mergetask.merge()
  File &amp;quot;/usr/lib64/portage/pym/_emerge/Scheduler.py&amp;quot;, line 946, in merge
    rval = self._handle_self_update()
  File &amp;quot;/usr/lib64/portage/pym/_emerge/Scheduler.py&amp;quot;, line 316, in _handle_self_update
    _prepare_self_update(self.settings)
  File &amp;quot;/usr/lib64/portage/pym/portage/package/ebuild/doebuild.py&amp;quot;, line 2326, in _prepare_self_update
    shutil.copytree(orig_bin_path, portage._bin_path, symlinks=True)
  File &amp;quot;/usr/lib64/portage/pym/portage/__init__.py&amp;quot;, line 259, in __call__
    rval = self._func(*wrapped_args, **wrapped_kwargs)
  File &amp;quot;/usr/lib64/python3.3/shutil.py&amp;quot;, line 343, in copytree
    raise Error(errors)
shutil.Error: [(b&amp;#39;/usr/lib64/portage/bin/ebuild-helpers/prepalldocs&amp;#39;, 
b&amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/prepalldocs&amp;#39;, 
&amp;quot;[Errno 13] Permission denied: &amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/prepalldocs&amp;#39;&amp;quot;), 
(b&amp;#39;/usr/lib64/portage/bin/ebuild-helpers/prepinfo&amp;#39;, 
b&amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/prepinfo&amp;#39;, 
&amp;quot;[Errno 13] Permission denied: &amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/prepinfo&amp;#39;&amp;quot;), 
(b&amp;#39;/usr/lib64/portage/bin/ebuild-helpers/newlib.so&amp;#39;, 
b&amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/newlib.so&amp;#39;, 
&amp;quot;[Errno 13] Permission denied: &amp;#39;/var/tmp/portage/._portage_reinstall_.osj370/bin/ebuild-helpers/newlib.so&amp;#39;&amp;quot;), 
[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the errors go on and on and on.&lt;/p&gt;
&lt;p&gt;I've been able to get it working again by allowing the following SELinux
permissions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;allow portage_t portage_tmp_t:dir relabel_dir_perms;
allow portage_t portage_tmp_t:lnk_file relabel_lnk_file_perms;
allow portage_t bin_t:dir relabel_dir_perms;
allow portage_t bin_t:file relabel_file_perms;
allow portage_t bin_t:lnk_file relabel_lnk_file_perms;
allow portage_t portage_exec_t:file relabel_file_perms;
allow portage_t portage_fetch_exec_t:file relabel_file_perms;
allow portage_t lib_t:dir relabel_dir_perms;
allow portage_t lib_t:file relabel_file_perms;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can somewhat shorten this by combining types (but this doesn't work
with selocal for now):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;allow portage_t { portage_tmp_t bin_t lib_t}:dir relabel_dir_perms;
allow portage_t { portage_tmp_t bin_t }:lnk_file relabel_lnk_file_perms;
allow portage_t { bin_t portage_exec_t portage_fetch_exec_t lib_t}:file relabel_file_perms;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At the end of the emerge process (when the new portage is installed) you
might want to reset the labels of all files provided by the portage
package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# rlpkg portage
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These changes have not been passed into the policy yet as I first need
to find out why exactly they are needed, and as you can see from &lt;a href="http://dev.gentoo.org/devaway/"&gt;the
gentoo devaway&lt;/a&gt; page, time is not on my
side to do this. I'll try to free up some time in the next few days to
handle this as well as the &lt;a href="http://userspace.selinuxproject.org/trac/wiki/Releases"&gt;SELinux userspace
release&lt;/a&gt; but no
promises here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; I found why - it is the &lt;code&gt;_prepare_self_update&lt;/code&gt; in the
&lt;code&gt;doebuild.py&lt;/code&gt; script. It creates temporary copies of the Portage
binaries and Portage python libraries, which is why we need to support
relabel operations on the files. Support for this is now in the policy
repository.&lt;/p&gt;
&lt;/p&gt;</content><category term="Security"></category><category term="Gentoo"></category><category term="hardened"></category><category term="libffi"></category><category term="portage"></category><category term="selinux"></category></entry><entry><title>Gentoo Hardened meeting 201310</title><link href="https://blog.siphos.be/2013/10/gentoo-hardened-meeting-201310/" rel="alternate"></link><published>2013-10-24T23:25:00+02:00</published><updated>2013-10-24T23:25:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-10-24:/2013/10/gentoo-hardened-meeting-201310/</id><summary type="html">&lt;p&gt;We gathered online again to talk about the progress, changes and other
stuff related to the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;New Developer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We welcomed Zero_Chaos as a new addition to our team. Big welcome, with
the usual IRC kick in between, ensued.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.x is unmasked and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We gathered online again to talk about the progress, changes and other
stuff related to the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;New Developer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We welcomed Zero_Chaos as a new addition to our team. Big welcome, with
the usual IRC kick in between, ensued.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.x is unmasked and ready for testing. The ASAN problem however is
not resolved and it doesn't look like upstream wants to provide the fix
for this. As a result, if you want to use ASAN, you will need to disable
UDEREF in the kernel.&lt;/p&gt;
&lt;p&gt;A difficult problem here is that, if a user forgets to disable UDEREF,
then building with ASAN will fail. If he disabled UDEREF and uses ASAN,
then booting into a UDEREF enabled kernel will fail. If he starts
building with ASAN on UDEREF kernels, things will break. Its ugly, and
unless the ASAN code is changed to support other technologies using the
address space layout information, it will remain mutually exclusive.&lt;/p&gt;
&lt;p&gt;For now, we'll properly document the situation.&lt;/p&gt;
&lt;p&gt;GCC 4.9 will end its stage1 development phase on November 21st.&lt;/p&gt;
&lt;p&gt;The uclibc stages are currently built with GCC-4.7.3-r1, except for the
MIPS architectures which use GCC 4.8.1-r1.&lt;br&gt;
The stages are built once every two months, give or take.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel grSec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Standard maintenance, such as keeping up with upstream changes, has
taken place. The XATTR problems with the &lt;strong&gt;install&lt;/strong&gt; binary/phase has
not been resolved yet due to time constraints. First focus will be on
writing the C-based wrapper to see if this significantly speeds things
up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;USE=pax_kernel&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There is ambiguity of the meaning or use of the &lt;code&gt;pax_kernel&lt;/code&gt; USE flag.
It seems to be used for multiple, exclusive things, like limiting builds
on PaX kernels or limiting run-time behavior on PaX kernels. To build
Gentoo images, developers need to set &lt;code&gt;pax_kernel&lt;/code&gt; on some packages and
disable it on others in order for the image to build properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;@blueness&amp;gt; USE=pax_kernel in the case of userland should apply patches etc, that fix the code
            so that it won&amp;#39;t trip pax protection eg mprotect
&amp;lt;@blueness&amp;gt; in the case of kernel modules, it can&amp;#39;t mean that obviously!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One of the mentioned problems is that some ebuilds only enable pax
markings when &lt;code&gt;pax_kernel&lt;/code&gt; is set. However, that shouldn't be done
conditionally. PaX markings can be done even without a PaX kernel.&lt;/p&gt;
&lt;p&gt;Zero_Chaos (new developers always have the necessary energy) will try
to update ebuilds where applicable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux and System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing worth mentioning here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profile&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many users were using hardened profiles on the desktop. In the past, we
had the desktop/hardened profiles removed (referring users to the
regular hardened profiles and asking them to update their system with
the USE flags (and other settings) they want for their desktop.
Apparently, this is giving some problems for some users, so the idea is
to reinstate the desktop/hardened profiles where the hardened settings
overrule the desktop settings.&lt;/p&gt;
&lt;p&gt;However, we should take care of tackling the issues we had in the past
(which is the reason why we removed the profiles in the first place). It
is recommended that we discuss this outside the IRC meeting to make sure
we don't reintroduce the issues again while using a flexible approach.&lt;/p&gt;
&lt;p&gt;That's it. A big thanks to the developers, contributors and thousands of
users!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>Aaaand we're back - hardened monthly meeting</title><link href="https://blog.siphos.be/2013/09/aaaand-were-back-hardened-monthly-meeting/" rel="alternate"></link><published>2013-09-26T22:22:00+02:00</published><updated>2013-09-26T22:22:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-09-26:/2013/09/aaaand-were-back-hardened-monthly-meeting/</id><summary type="html">&lt;p&gt;It almost feels like we had our monthly online meeting just a week ago.
Below a small write-up of the highlights. If you want to know the gory
details, just wait a few hours/days until the IRC logs are sent out ;-)
Now remember, the project does more than what …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It almost feels like we had our monthly online meeting just a week ago.
Below a small write-up of the highlights. If you want to know the gory
details, just wait a few hours/days until the IRC logs are sent out ;-)
Now remember, the project does more than what the highlights tell you -
there is lots of maintenance done "under the hood", allowing everyone to
keep using the various
&lt;a href="https://wiki.gentoo.org/wiki/Hardened/Introduction_to_Hardened_Gentoo"&gt;technologies&lt;/a&gt;
supported through our project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As per a discussion on the Gentoo development mailinglist, GCC 4.8 will
most likely have SSP enabled as default. Gentoo Hardened will still
enable full SSP (&lt;code&gt;-fstack-protector-all&lt;/code&gt;) whereas Gentoo by default will
probably work with &lt;code&gt;-fstack-protector&lt;/code&gt;). We will also still provide GCC
specifications that disable stack protection completely (the
&lt;code&gt;hardened-nossp&lt;/code&gt; specs) for when developers or users need it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness informed us about one issue with XATTR_PAX implementation,
being the &lt;code&gt;install.py&lt;/code&gt; wrapper that we need in order to set the right
attributes as early as possible. The problem is that it is very slow (as
it is invoked over and over again, so the overhead of it being an
interpreted script becomes huge). A solution for this still has to be
defined.&lt;/p&gt;
&lt;p&gt;Some ideas are to use a compiled version, but other possible solutions
such as hooking into Portage directly or using lists have been suggested
as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing big - standard maintenance stuff, such as pushing our own
patches upstream for others to benefit (and hopefully have the master
projects include the patches so we don't need to maintain them
ourselves). Also, revision 3 of the 2.20130424 policies are now in the
tree (\~arch'ed for now).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Within Gentoo, we have a couple of SCAP scanners/software available,
such as open-scap and ovaldi. Recently, openscap-9999 is made available
(allowing users to directly use the latest openscap release) which is
used to validate and evaluate security benchmarks I am developing for
Gentoo and related services.&lt;/p&gt;
&lt;p&gt;Next to the SCAP-related developments, a
&lt;a href="https://wiki.gentoo.org/wiki/Signed_kernel_module_support"&gt;guide&lt;/a&gt; has
been put on the Gentoo wiki about using signed kernel modules.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The hardened profiles have been updated to use EAPI-5 so we can benefit
from its features, such as improved multilib support.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As I mentioned before, I'm working a bit on a &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/"&gt;Gentoo Security
Benchmark&lt;/a&gt; that
can be used with SCAP software. The sources are in the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-docs.git;a=tree;f=xml/SCAP;hb=HEAD"&gt;hardened-docs&lt;/a&gt;
repository for now.&lt;/p&gt;
&lt;p&gt;Also, most/all hardened documentation is moved from the
(developer-editable only) &lt;code&gt;Project:&lt;/code&gt; namespace to the general one,
allowing users and contributors to help us with the documents as well.&lt;/p&gt;</content><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Gentoo Hardened progress report</title><link href="https://blog.siphos.be/2013/08/gentoo-hardened-progress-report/" rel="alternate"></link><published>2013-08-29T20:27:00+02:00</published><updated>2013-08-29T20:27:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-08-29:/2013/08/gentoo-hardened-progress-report/</id><summary type="html">&lt;p&gt;Today, we had our monthly online meeting to discuss the progress amongst
the various Gentoo Hardened projects. As usual, here is a small
write-up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead election&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As every year, we also reviewed the current project leads. No surprises
here, everybody is happy with the current leads so they are re-elected …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, we had our monthly online meeting to discuss the progress amongst
the various Gentoo Hardened projects. As usual, here is a small
write-up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead election&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As every year, we also reviewed the current project leads. No surprises
here, everybody is happy with the current leads so they are re-elected
for another term. We did have two candidates for the lead position, but
even the other candidate vote for Zorry - so we had a unanimous vote ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC version 4.8.1 will be unmasked pretty soon, and the &lt;code&gt;hardenedno*&lt;/code&gt;
specs on it will work. However, there is still no progress on the asan
(Address Sanitizer) support together with UDEREF. As mentioned in a
previous post, UDEREF "reduces" the address space a bit which doesn't
play well with asan. Still, it isn't inevitable, since PowerPC also has
a reduced address space and so does Windows. So perhaps we can use the
same model for UDEREF enabled kernels? We'll send the suggestion and the
already-existing fixes upstream and hope for the best.&lt;/p&gt;
&lt;p&gt;In GCC 4.8.1, the &lt;code&gt;-fstack-check&lt;/code&gt; option might be enabled by default,
but the question is for which architectures and platforms. We know a few
packages, such as &lt;em&gt;ffmpeg&lt;/em&gt; and &lt;em&gt;libav&lt;/em&gt; have problems with it. In those
cases, the ebuild will be modified to use &lt;code&gt;-fno-stack-check&lt;/code&gt; (if
hardened). We opt to enable it for all as we don't really expect much
(if any) breakage that can't be dealt with swiftly.&lt;/p&gt;
&lt;p&gt;Support for hardened uClibc is still going steadily. Blueness is heating
his room a bit with it, seeing that mips32r2 takes about 2 weeks to
build hardened and vanilla stages - he is using an Ubiquity router
station for this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and Grsecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Due to some boot freezes, as explained in bugs
&lt;a href="https://bugs.gentoo.org/482010"&gt;482010&lt;/a&gt; and
&lt;a href="https://bugs.gentoo.org/481790"&gt;481790&lt;/a&gt;, we don't have a stable 3.10.x
kernel yet. However, most of the issues should be resolved and we're
waiting for confirmation, so we can be looking at a stable 3.10.x kernel
soon.&lt;/p&gt;
&lt;p&gt;The 3.10 kernel will probably not be a long-term support kernel for PaX
and Grsecurity - such LTS kernel will be picked next year, most likely
the same kernel version that Ubuntu LTS settles on.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A small update on &lt;code&gt;policycoreutils&lt;/code&gt; has been made that updates &lt;strong&gt;rlpkg&lt;/strong&gt;
and &lt;strong&gt;selocal&lt;/strong&gt;. Other than that, our policies are in nice shape. A new
revision will be pushed to the tree soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the Integrity side, recent kernels support custom IMA policies
(again) so our documentation is accurate again. Next to IMA/EVM, I'll be
working on documentation for cryptographically signed kernel module
support soon as well as SCAP-based security baselines for Gentoo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness added a MUSL-based Gentoo profile (&lt;code&gt;hardened/linux/musl&lt;/code&gt;). Musl
is an even more slim libc and its profile is extremely experimental for
now. The profile structure is still a bit off though, a reorganization
will be suggested soon so that the profile inheritance is clear and
predictable, starting off with a non-hardened one
(&lt;code&gt;default/linux/{uclibc,musl}&lt;/code&gt;) and then a hardened specific one that
inherits from the default.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened
project&lt;/a&gt; now has its main
project page on the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt;, and all
(most) documentation is moved to there as well for the Gentoo Hardened
subprojects.&lt;/p&gt;
&lt;p&gt;I also explained to the folks that I have authored a book on SELinux
System Administration (for Packt Publishing), which was why I was less
active the last few months. However, that is now done so I'm back on
track. More information about the book follows later on my blog ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And as usual, klondike has been tweeting the entire meeting through our
&lt;code&gt;@GentooHardened&lt;/code&gt; twitter account ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="minutes"></category><category term="progress_report"></category><category term="report"></category></entry><entry><title>And now, 31 days later...</title><link href="https://blog.siphos.be/2013/08/and-now-31-days-later/" rel="alternate"></link><published>2013-08-01T22:43:00+02:00</published><updated>2013-08-01T22:43:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-08-01:/2013/08/and-now-31-days-later/</id><summary type="html">&lt;p&gt;... the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo Hardened&lt;/a&gt; team
had its monthly online meeting again ;-)&lt;/p&gt;
&lt;p&gt;On the agenda were the usual suspects, such as the &lt;em&gt;toolchain&lt;/em&gt;. In this
category, Zorry mentioned that he has a fix for GCC 4.8.1 for the
&lt;code&gt;hardenedno*&lt;/code&gt; and vanilla &lt;code&gt;gcc-config&lt;/code&gt; options which will be added to
the tree …&lt;/p&gt;</summary><content type="html">&lt;p&gt;... the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo Hardened&lt;/a&gt; team
had its monthly online meeting again ;-)&lt;/p&gt;
&lt;p&gt;On the agenda were the usual suspects, such as the &lt;em&gt;toolchain&lt;/em&gt;. In this
category, Zorry mentioned that he has a fix for GCC 4.8.1 for the
&lt;code&gt;hardenedno*&lt;/code&gt; and vanilla &lt;code&gt;gcc-config&lt;/code&gt; options which will be added to
the tree after some more testing. The problem is that with GCC 4.8,
certain settings need to be set sooner than before (in the code path),
which is what the fix focuses on. The ASAN issue is still unresolved,
but otherwise GCC 4.8 is working fine.&lt;/p&gt;
&lt;p&gt;On &lt;em&gt;SELinux&lt;/em&gt;, the policycoreutils package has been bumped to include
support for &lt;code&gt;mcstrans&lt;/code&gt;, a translation daemon that visualizes humanly
readable strings instead of the standard sensitivity/category sets in
case of MCS/MLS policies.&lt;/p&gt;
&lt;p&gt;Regarding documentation, the wiki team (most notably a3li) is working
hard to support project pages on the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo
Wiki&lt;/a&gt;. Once we can, we will be moving our
project page with all related documentation to the wiki, allowing for
easier documentation development and a more modern look. To support
this, an XML-to-wiki stylesheet is available that translates ProjectXML
and GuideXML to the wiki language.&lt;/p&gt;
&lt;p&gt;During the meeting, we also mentioned the stabilization policy (or at
least, no-longer-stabilization) of the vanilla sources (plain kernel.org
Linux kernel sources). This doesn't immediately effect the hardened
project, but is important to know nonetheless, especially for users of
hardened technologies that are in the main kernel already (like SELinux
or IMA/EVM) as they have to be aware to either use the latest
(regardless of the keywords in use) or switch to gentoo-sources or
(preferably) hardened-sources.&lt;/p&gt;
&lt;p&gt;For uclibc support, the stages will be provided every 2 months rather
than every month as this is a resource-intensive process that isn't
fully automated yet (except for amd64 and x86 which are automated).&lt;/p&gt;
&lt;p&gt;Finally, on PaX and grSecurity support, the XATTR patch for tmpfs is now
in the kernel, and the problem about loosing PaX markings during
installation is fixed as Portage (2.1.12.9 and higher) now preserves the
flags during installation (a wrapper on &lt;code&gt;install&lt;/code&gt; is used that preserves
&lt;code&gt;usr.pax.flags&lt;/code&gt;).&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="irc"></category><category term="irl"></category><category term="meeting"></category><category term="minutes"></category><category term="pax"></category><category term="project"></category><category term="selinux"></category><category term="toolchain"></category></entry><entry><title>Rebuilding SELinux contexts with sefcontext_compile</title><link href="https://blog.siphos.be/2013/07/rebuilding-selinux-contexts-with-sefcontext_compile/" rel="alternate"></link><published>2013-07-08T20:55:00+02:00</published><updated>2013-07-08T20:55:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-07-08:/2013/07/rebuilding-selinux-contexts-with-sefcontext_compile/</id><summary type="html">&lt;p&gt;A recent update of &lt;em&gt;libpcre&lt;/em&gt; caused the binary precompiled regular
expression files of SELinux to become outdated (and even blatantly
wrong). The details are in bug &lt;a href="https://bugs.gentoo.org/471718"&gt;471718&lt;/a&gt;
but that doesn't help the users that are already facing the problem, nor
have we found a good place to put the fix …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A recent update of &lt;em&gt;libpcre&lt;/em&gt; caused the binary precompiled regular
expression files of SELinux to become outdated (and even blatantly
wrong). The details are in bug &lt;a href="https://bugs.gentoo.org/471718"&gt;471718&lt;/a&gt;
but that doesn't help the users that are already facing the problem, nor
have we found a good place to put the fix in.&lt;/p&gt;
&lt;p&gt;Anyway, if you are facing issues with SELinux labeling (having files
being labeled as &lt;em&gt;portage_tmp_t&lt;/em&gt; instead of the proper label), check
with &lt;strong&gt;matchpathcon&lt;/strong&gt; if the label is correct. If &lt;strong&gt;matchpathcon&lt;/strong&gt; sais
that the label should be &lt;code&gt;&amp;lt;&amp;lt;none&amp;gt;&amp;gt;&lt;/code&gt; then you need to rebuild the SELinux
context files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# cd /etc/selinux/strict/contexts/files
# for n in *.bin; do sefcontext_compile ${n%%.bin}; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;sefcontext_compile&lt;/strong&gt; command will rebuild the SELinux context
files. When that has been done, &lt;strong&gt;matchpathcon&lt;/strong&gt; should show the right
context again, and Portage will relabel files correctly. Until then, you
will need to relabel the packages that have been built since (and
including) the &lt;em&gt;libpcre&lt;/em&gt; build.&lt;/p&gt;
&lt;p&gt;If someone has a good suggestion where to put these rebuilds in, please
do drop a note in the bug. Although the proper one might be &lt;em&gt;libpcre&lt;/em&gt;
itself, I'd rather not put too much SELinux logic in the ebuild unless
it is pretty safeguarded...&lt;/p&gt;
&lt;p&gt;In any case, it has also been documented in the &lt;a href="https://wiki.gentoo.org/wiki/SELinux/FAQ#File_labels_do_not_seem_to_be_set_anymore.2C_and_matchpathcon_sais_.3C.3Cnone.3E.3E"&gt;Gentoo SELinux
FAQ&lt;/a&gt;
on the Gentoo wiki.&lt;/p&gt;</content><category term="SELinux"></category><category term="hardened"></category><category term="pcre"></category><category term="selinux"></category></entry><entry><title>Hardening is our business... new monthly report ;-)</title><link href="https://blog.siphos.be/2013/06/hardening-is-our-business-new-monthly-report/" rel="alternate"></link><published>2013-06-27T23:03:00+02:00</published><updated>2013-06-27T23:03:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-06-27:/2013/06/hardening-is-our-business-new-monthly-report/</id><summary type="html">&lt;p&gt;We're back with another report on the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; project. Please excuse
my brevity, as you've noticed I'm not that active (yet) due to work on
an external project - I'll be back mid-July though. I promise.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Toolchain&lt;/em&gt; side, GCC 4.8.1 is in the tree and has …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We're back with another report on the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; project. Please excuse
my brevity, as you've noticed I'm not that active (yet) due to work on
an external project - I'll be back mid-July though. I promise.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Toolchain&lt;/em&gt; side, GCC 4.8.1 is in the tree and has the GCC plugin
header fix. Also, for IA64 and ARM, the necessary PIE patches are
available as well to make this work on those architectures too.&lt;/p&gt;
&lt;p&gt;For uclibc, blueness is continuing the necessary support for everything
so far. He has also added mips64 n32 uclibc because new router boards
use this.&lt;/p&gt;
&lt;p&gt;In his time, blueness is also playing with a uclibc-powered desktop and
another C library called &lt;a href="http://www.musl-libc.org/"&gt;musl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Kernel&lt;/em&gt;, &lt;em&gt;grSecurity&lt;/em&gt; and &lt;em&gt;PaX&lt;/em&gt; side, we are having troubles
with the 3.8+ kernels and UEFI machines when the machines have ltitle
memory available (for instance when it is limited with &lt;code&gt;mem=&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The PaX extended attribute support is still on-going, mainly because we
need to have support for the &lt;code&gt;user.pax&lt;/code&gt; attributes in common tools like
&lt;strong&gt;install&lt;/strong&gt;, which is heavily used in Gentoo's ebuilds. The merge phase,
where the data is moved from the image location to the root, has been
supporting xattr moves for a while thanks to zmedico and arfrever, but
other installation phases still needed to be fixed or worked around. We
tried with a common patch on this, but there was little interest in this
approach, so we settled with a wrapper around &lt;strong&gt;install&lt;/strong&gt; inside of
Portage. This will be soon released and we again have full end-to-end
xattr pax flag support.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;SELinux&lt;/em&gt; support, the latest userland and policy releases have
been stabilized in the Gentoo tree.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Profiles&lt;/em&gt;, blueness added a musl subprofile for testing of the
musl C library.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="progress"></category></entry><entry><title>Gentoo Hardened spring notes</title><link href="https://blog.siphos.be/2013/05/gentoo-hardened-spring-notes/" rel="alternate"></link><published>2013-05-16T22:54:00+02:00</published><updated>2013-05-16T22:54:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-05-16:/2013/05/gentoo-hardened-spring-notes/</id><summary type="html">&lt;p&gt;We got back together on the &lt;code&gt;#gentoo-hardened&lt;/code&gt; chat channel to discuss
the progress of &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt;, so it's time for
another write-up of what was said.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.1 will be out soon, although nothing major has occurred with it
since the last meeting. There is a plugin …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We got back together on the &lt;code&gt;#gentoo-hardened&lt;/code&gt; chat channel to discuss
the progress of &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt;, so it's time for
another write-up of what was said.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.1 will be out soon, although nothing major has occurred with it
since the last meeting. There is a plugin header install problem in 4.8
and its not certain that the (trivial) fix is in 4.8.1, but it certainly
is inside Gentoo's release.&lt;/p&gt;
&lt;p&gt;Blueness is also (still, and hopefully for a long time ;-) maintaining
the uclibc hardened related toolchain aspects.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The further progress on the XATTR_PAX migration was put on a lower
level the past few weeks due to busy, busy... very busy weeks (but this
was announced and known in advance). We still need to do XATTR copying
in &lt;em&gt;install&lt;/em&gt; for packages that do pax markings before &lt;em&gt;src_install()&lt;/em&gt;
and include the &lt;code&gt;user.pax&lt;/code&gt; XATTR patch in the gentoo-sources kernel.
This will silence the errors for non-hardened users and fix the loss of
XATTR markings for those packages that do pax-mark before install.&lt;/p&gt;
&lt;p&gt;The set then needs to be documented further and tested on vanilla and
hardened systems.&lt;/p&gt;
&lt;p&gt;Zorry asked if a separate script can be provided for those ebuilds that
directly call &lt;strong&gt;paxctl&lt;/strong&gt;. These ebuilds might want to switch to the
eclass, but if they need to call &lt;strong&gt;paxctl&lt;/strong&gt; or similar directly (for
instance because the result is immediately used for further building), a
separate script or tool should be made available. Blueness will look
into this.&lt;/p&gt;
&lt;p&gt;On &lt;code&gt;hardened-sources&lt;/code&gt;, we are now with stable 2.6.32-r160, 3.2.42-r1 and
3.8.6 due to some vulnerabilities in earlier versions (in networking
code). There is still some bug (nfs-related) that is fixed in 3.2.44 so
that part might need a bump as well soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The
&lt;a href="http://blog.siphos.be/2013/04/introducing-selocal-for-small-selinux-policy-enhancements/"&gt;selocal&lt;/a&gt;
command is now available for Gentoo SELinux users, allowing them to
easily enhance the policy without having to maintain their own SELinux
policy modules (the script is a wrapper that does all that).&lt;/p&gt;
&lt;p&gt;The setools package now also uses the &lt;a href="http://blog.siphos.be/2013/04/sloting-the-old-swig-1/"&gt;SLOT'ed
swig&lt;/a&gt;, so no more
dependency breakage.&lt;/p&gt;
&lt;p&gt;On SELinux userspace and policy, both have seen a new release last
month, and both are already in the Gentoo portage tree.&lt;/p&gt;
&lt;p&gt;Finally, the SELinux policy ebuilds now also call
&lt;a href="http://blog.siphos.be/2013/05/overriding-the-default-selinux-policies/"&gt;epatch_user&lt;/a&gt;
so users can customize the policies even further without having to copy
ebuilds to their overlay.&lt;/p&gt;
&lt;p&gt;Now that &lt;strong&gt;tar&lt;/strong&gt; supports XATTR well, we might want to look into SELinux
stages again. Jmbsvicetto did some work on that, but the builds failed
during stage1. We'll look into that later.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing much to say, we're waiting a bit until the patches proposed by
the IMA team are merged in the main kernel.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Two no-multilib fixes have been applied to the
&lt;code&gt;hardened/amd64/no-multilib&lt;/code&gt; profiles. One was a QA issue and quickly
resolved, the other is due to the profile stacking within Gentoo
profiles, where we missed a profile and thus were missing a few masks
defined in that (missed) profile. But including the profile creates a
lot of duplicates again, so we are going to copy the masks across until
the duplicates are resolved in the other profiles.&lt;/p&gt;
&lt;p&gt;Blueness will also clean up the experimental &lt;code&gt;13.0&lt;/code&gt; directory since all
hardened profiles now follow 13.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The latest changes on SELinux have been added to the Gentoo SELinux
handbook. Also, I've been slowly (but surely) adding topics to the
&lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials"&gt;SELinux tutorials
listing&lt;/a&gt; on the Gentoo
wiki.&lt;/p&gt;
&lt;p&gt;The grSecurity 2 document is very much out of date, blueness hopes to
put some time in fixing that soon.&lt;/p&gt;
&lt;p&gt;So that's about it for the short write-up. Zorry will surely post the
log later on the appropriate channels. Good work done (again) by all
team members!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="monthly"></category><category term="online"></category></entry><entry><title>Highlevel assessment of Cdorked and Gentoo Hardened/SELinux</title><link href="https://blog.siphos.be/2013/05/highlevel-assessment-of-cdorked-and-gentoo-hardenedselinux/" rel="alternate"></link><published>2013-05-14T03:50:00+02:00</published><updated>2013-05-14T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-05-14:/2013/05/highlevel-assessment-of-cdorked-and-gentoo-hardenedselinux/</id><summary type="html">&lt;p&gt;With all the
&lt;a href="http://www.welivesecurity.com/2013/05/07/linuxcdorked-malware-lighttpd-and-nginx-web-servers-also-affected/"&gt;reports&lt;/a&gt;
surrounding
&lt;a href="https://threatpost.com/attack-using-backdoored-apache-binaries-to-lead-to-blackhole-kit/"&gt;Cdorked&lt;/a&gt;,
I took a look at if SELinux and/or other Gentoo Hardened technologies
could reduce the likelihood that this infection occurs on your system.&lt;/p&gt;
&lt;p&gt;First of all, we don't know yet how the malware gets installed on the
server. We do know that the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With all the
&lt;a href="http://www.welivesecurity.com/2013/05/07/linuxcdorked-malware-lighttpd-and-nginx-web-servers-also-affected/"&gt;reports&lt;/a&gt;
surrounding
&lt;a href="https://threatpost.com/attack-using-backdoored-apache-binaries-to-lead-to-blackhole-kit/"&gt;Cdorked&lt;/a&gt;,
I took a look at if SELinux and/or other Gentoo Hardened technologies
could reduce the likelihood that this infection occurs on your system.&lt;/p&gt;
&lt;p&gt;First of all, we don't know yet how the malware gets installed on the
server. We do know that the Apache binaries themselves are modified, so
the first thing to look at is to see if this risk can be reduced. Of
course, using an intrusion detection system like
&lt;a href="https://wiki.gentoo.org/wiki/AIDE"&gt;AIDE&lt;/a&gt; helps, but even with Gentoo's
&lt;strong&gt;qcheck&lt;/strong&gt; command you can test the integrity of the files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# qcheck www-servers/apache
Checking www-servers/apache-2.2.24 ...
  * 424 out of 424 files are good
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the binary is modified, this would result in something equivalent to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Checking www-servers/apache-2.2.24 ...
 MD5-DIGEST: /usr/sbin/apache2
  * 423 out of 424 files are good
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I don't know if the modified binary would otherwise work just fine, I
have not been able to find exact details on the infected binary to (in a
sandbox environment of course) analyze this further. Also, because we
don't know how they are installed, it is not easy to know if binaries
that you built yourself are equally likely to be modified/substituted or
if the attack checks checksums of the binaries against a known list.&lt;/p&gt;
&lt;p&gt;Assuming that it would run, then the infecting malware would need to set
the proper SELinux context on the file (if it overwrites the existing
binary, then the context is retained, otherwise it gets the default
context of &lt;code&gt;bin_t&lt;/code&gt;). If the context is wrong, then starting Apache
results in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apache2: Syntax error on line 61 of /etc/apache2/httpd.conf: Cannot load /usr/lib64/apache2/modules/mod_actions.so into server: /usr/lib64/apache2/modules/mod_actions.so: cannot open shared object file: Permission denied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is because the modified binary stays in the calling domain context
(&lt;code&gt;initrc_t&lt;/code&gt;). If you use a targeted policy, then this will not present
itself as &lt;code&gt;initrc_t&lt;/code&gt; is an unconfined domain. But with strict policies,
&lt;code&gt;initrc_t&lt;/code&gt; is not allowed to read &lt;code&gt;httpd_modules_t&lt;/code&gt;. Even worse, the
remainder of SELinux protections don't apply anymore, since with
unconfined domains, all bets are off. That is why Gentoo focuses this
hard on using a strict policy.&lt;/p&gt;
&lt;p&gt;So, what if the binary runs in the proper domain? Well then, from the
articles I read, the malware can do a reverse connect. That means that
the domain will attempt to connect to an IP address provided by the
attacker (in a specifically crafted URL). For SELinux, this means that
the &lt;em&gt;name_connect&lt;/em&gt; permission is checked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# sesearch -s httpd_t -c tcp_socket -p name_connect -ACTS
Found 20 semantic av rules:
   allow nsswitch_domain dns_port_t : tcp_socket { name_connect } ; 
DT allow httpd_t port_type : tcp_socket { name_connect } ; [ httpd_can_network_connect ]
DT allow httpd_t ftp_port_t : tcp_socket { name_connect } ; [ httpd_can_network_relay ]
DT allow httpd_t smtp_port_t : tcp_socket { name_connect } ; [ httpd_can_sendmail ]
DT allow httpd_t postgresql_port_t : tcp_socket { name_connect } ; [ httpd_can_network_connect_db ]
DT allow httpd_t oracledb_port_t : tcp_socket { name_connect } ; [ httpd_can_network_connect_db ]
DT allow httpd_t squid_port_t : tcp_socket { name_connect } ; [ httpd_can_network_relay ]
DT allow httpd_t mssql_port_t : tcp_socket { name_connect } ; [ httpd_can_network_connect_db ]
DT allow httpd_t kerberos_port_t : tcp_socket { name_connect } ; [ allow_kerberos ]
DT allow nsswitch_domain ldap_port_t : tcp_socket { name_connect } ; [ authlogin_nsswitch_use_ldap ]
DT allow httpd_t http_cache_port_t : tcp_socket { name_connect } ; [ httpd_can_network_relay ]
DT allow httpd_t http_port_t : tcp_socket { name_connect } ; [ httpd_can_network_relay ]
DT allow httpd_t http_port_t : tcp_socket { name_connect } ; [ httpd_graceful_shutdown ]
DT allow httpd_t mysqld_port_t : tcp_socket { name_connect } ; [ httpd_can_network_connect_db ]
DT allow httpd_t ocsp_port_t : tcp_socket { name_connect } ; [ allow_kerberos ]
DT allow nsswitch_domain kerberos_port_t : tcp_socket { name_connect } ; [ allow_kerberos ]
DT allow httpd_t pop_port_t : tcp_socket { name_connect } ; [ httpd_can_sendmail ]
DT allow nsswitch_domain ocsp_port_t : tcp_socket { name_connect } ; [ allow_kerberos ]
DT allow httpd_t gds_db_port_t : tcp_socket { name_connect } ; [ httpd_can_network_connect_db ]
DT allow httpd_t gopher_port_t : tcp_socket { name_connect } ; [ httpd_can_network_relay ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So by default, the Apache (&lt;code&gt;httpd_t&lt;/code&gt;) domain is allowed to connect to
DNS port (to resolve hostnames). All other &lt;em&gt;name_connect&lt;/em&gt; calls depend
on SELinux booleans (mentioned after it) that are by default disabled
(at least on Gentoo). Disabling hostname resolving is not really
feasible, so if the attacker uses a DNS port as port that the malware
needs to connect to, SELinux will not deny it (unless you use additional
networking constraints).&lt;/p&gt;
&lt;p&gt;Now, the reverse connect is an interesting feature of the malware, but
not the main one. The main focus of the malware is to redirect customers
to particular sites that can trick the user in downloading additional
(client) malware. Because this is done internally within Apache, SELinux
cannot deal with this. As a user, make sure you configure your browser
not to trust non-local iframes and such (always do this, not just
because there is a possible threat right now). The configuration of
Cdorked is a shared memory segment of Apache itself. Of course, since
Apache uses shared memory, the malware embedded within will also have
access to the shared memory. However, if this shared memory would need
to be accessed by third party applications (the malware seems to grant
read/write rights on everybody to this segment) SELinux will prevent
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# sesearch -t httpd_t -c shm -ACTS
Found 2 semantic av rules:
   allow unconfined_domain_type domain : shm { create destroy getattr setattr read write associate unix_read unix_write lock } ; 
   allow httpd_t httpd_t : shm { create destroy getattr setattr read write associate unix_read unix_write lock } ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Only unconfined domains and the &lt;code&gt;httpd_t&lt;/code&gt; domain itself have access to
&lt;code&gt;httpd_t&lt;/code&gt; labeled shared memory.&lt;/p&gt;
&lt;p&gt;So what about IMA/EVM? Well, those will not help here since IMA checks
for integrity of files that were modified &lt;em&gt;offline&lt;/em&gt;. As the modification
of the Apache binaries is most likely done online, IMA would just accept
this.&lt;/p&gt;
&lt;p&gt;For now, it seems that a good system integrity approach is the most
effective until we know more about how the malware-infected binary is
written to the system in the first place (as this is better protected by
MAC controls like SELinux).&lt;/p&gt;</content><category term="Security"></category><category term="apache"></category><category term="cdorked"></category><category term="Gentoo"></category><category term="hardened"></category><category term="ima"></category><category term="selinux"></category></entry><entry><title>Another Gentoo Hardened month has passed</title><link href="https://blog.siphos.be/2013/04/another-gentoo-hardened-month-has-passed/" rel="alternate"></link><published>2013-04-18T23:36:00+02:00</published><updated>2013-04-18T23:36:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-04-18:/2013/04/another-gentoo-hardened-month-has-passed/</id><summary type="html">&lt;p&gt;Another month has passed, so time to mention again what we have all been
doing lately ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Version 4.8 of GCC is available in the tree, but currently masked. The
package contains a fix needed to build hardened-sources, and a fix for
the asan (address sanitizer).
&lt;a href="http://www.internetnews.com/blog/skerner/open-source-gcc-4.8-compiler-including-address-sanitizer-security.html"&gt;asan&lt;/a&gt;
support in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so time to mention again what we have all been
doing lately ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Version 4.8 of GCC is available in the tree, but currently masked. The
package contains a fix needed to build hardened-sources, and a fix for
the asan (address sanitizer).
&lt;a href="http://www.internetnews.com/blog/skerner/open-source-gcc-4.8-compiler-including-address-sanitizer-security.html"&gt;asan&lt;/a&gt;
support in GCC 4.8 might be seen as an improvement security-wise, but it
is yet unclear if it is an integral part of GCC or could be disabled
with a configure flag. Apparently, asan "makes building gcc 4.8 crazy".
Seeing that it comes from Google, and building Google Chromium is also
crazy, I start seeing a pattern here.&lt;/p&gt;
&lt;p&gt;Anyway, it turns out that PaX/grSec and asan do not get along yet (ASAN
assumes/uses hardcoded userland address space size values, which breaks
when UDEREF is set as it pitches a bit from the size):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ERROR: AddressSanitizer failed to allocate 0x20000001000 (2199023259648) bytes at address 0x0ffffffff000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Given that this is hardcoded in the resulting binaries, it isn't
sufficient to change the size value from 47 bits to 46 bits as hardened
systems can very well boot a kernel with and another kernel without
UDEREF, causing the binaries to fail on the other kernel. Instead, a
proper method would be to dynamically check the size of a userland
address.&lt;/p&gt;
&lt;p&gt;However, GCC 4.8 also brings along some nice enhancements and features.
uclibc profiles work just fine with GCC 4.8, including armv7a and
mips/mipsel. The latter is especially nice to hear, since mips used to
require significant effort with previous GCCs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;More recent kernels have now been stabilized to stay close to the
grSecurity/PaX upstream developments. The most recent stable kernel now
is hardened-sources-3.8.3. Others still available are hardened-sources
versions 3.2.40-r1 and 2.6.32-r156.&lt;/p&gt;
&lt;p&gt;The support for XATTR_PAX is still progressing, but a few issues have
come up. One is that non-hardened systems are seeing warnings about
&lt;strong&gt;pax-mark&lt;/strong&gt; not being able to set the XATTR_PAX on tmpfs since vanilla
kernels do not have the patch to support &lt;code&gt;user.*&lt;/code&gt; extended attribute
namespaces for tmpfs. A second issue is that the &lt;strong&gt;install&lt;/strong&gt;
application, as provided by &lt;code&gt;coreutils&lt;/code&gt;, does not copy extended
attributes. This has impact on ebuilds where pax markings are done
before the install phase of a package. But only doing pax markings after
the install phase isn't sufficient either, since sometimes we need the
binaries to be marked already for test phases or even in the compile
phase. So this is still something on the near horizon.&lt;/p&gt;
&lt;p&gt;Most likely the necessary tools will be patched to include extended
attributes on copy operations. However, we need to take care only to
copy over those attributes that make sense: &lt;code&gt;user.pax&lt;/code&gt; does, but
security ones like &lt;code&gt;security.evm&lt;/code&gt; and &lt;code&gt;security.selinux&lt;/code&gt; shouldn't as
those are either recomputed when needed, or governed through policy. The
idea is that USE="pax_kernel" will enable the above on &lt;code&gt;coreutils&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The SELinux support in Gentoo has seen a fair share of updates on the
userland utilities (like policycoreutils, setools, libselinux and such).
Most of these have already made the stable tree or are close to be
bumped to stable. The SELinux policy also has been updated a lot: most
changes can be tracked through bugzilla, looking for the
&lt;code&gt;sec-policy r13&lt;/code&gt; whiteboard. The changes can be applied to the system
immediately if you use the live ebuilds (like &lt;code&gt;selinux-base-9999&lt;/code&gt;), but
I'm planning on releasing revision 13 of our policy set soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some of the "early adopter" problems we've noticed on Gentoo Hardened
have been integrated in the repositories upstream and are slowly
progressing towards the main Linux kernel tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All hardened profiles have been moved to the 13.0 base. Some people
frowned when they noticed that the uclibc profiles do not inherit from
any architecture-related profile. This is however with reason: the
architecture profiles are (amongst other reasons) focusing on the glibc
specifics of the architecture. Since the profile intended here is for
uclibc, those changes are not needed (nor wanted). Hence, these are
collapsed in a single profile.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For SELinux, the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml"&gt;SELinux
handbook&lt;/a&gt;
now includes information about USE="unconfined" as well as the
&lt;code&gt;selinux_gentoo&lt;/code&gt; init script as provided by &lt;code&gt;policycoreutils&lt;/code&gt;. Users who
are already running with SELinux enabled can just look at the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=7"&gt;Change
History&lt;/a&gt;
to see which changes affect them.&lt;/p&gt;
&lt;p&gt;A set of &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials"&gt;tutorials&lt;/a&gt;
(which I've blogged about earlier as well) have been put online at the
&lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt;. Next to the SELinux tutorials,
an article pertaining to &lt;a href="https://wiki.gentoo.org/wiki/AIDE"&gt;AIDE&lt;/a&gt; has
been added as well as it fits nicely within the principles/concepts of
the &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;System
Integrity&lt;/a&gt;
subproject.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you don't do it already, start following
&lt;a href="https://twitter.com/GentooHardened"&gt;@GentooHardened&lt;/a&gt; ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="asan"></category><category term="gcc"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="integrity"></category><category term="irc"></category><category term="meeting"></category><category term="pax"></category><category term="selinux"></category><category term="uderef"></category></entry><entry><title>Not needing run_init for password-less service management</title><link href="https://blog.siphos.be/2013/04/not-needing-run_init-for-password-less-service-management/" rel="alternate"></link><published>2013-04-09T22:14:00+02:00</published><updated>2013-04-09T22:14:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-04-09:/2013/04/not-needing-run_init-for-password-less-service-management/</id><summary type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I decided to &lt;strong&gt;strace&lt;/strong&gt; the two commands and look for the
differences. I found out that there is even a SELinux permission for
being able to use the &lt;em&gt;rootok&lt;/em&gt; setting for passwords! Apparently,
&lt;code&gt;pam_rootok.so&lt;/code&gt; is SELinux-aware and does some additional checks.&lt;/p&gt;
&lt;p&gt;Although I don't know the exact details of it, it looks for the context
before the call (exec) of &lt;strong&gt;run_init&lt;/strong&gt; occurred. Then it checks if this
domain has the right for &lt;em&gt;passwd { rootok }&lt;/em&gt; (unless SELinux is in
permissive, in which case it just continues) and only then it allows the
"rootok" to succeed.&lt;/p&gt;
&lt;p&gt;Now why doesn't this work without using &lt;strong&gt;run_init&lt;/strong&gt;? I think it has to
do with how we integrate &lt;strong&gt;run_init&lt;/strong&gt; in the scripts, because out of
the trace I found that the previous context was also &lt;em&gt;run_init_t&lt;/em&gt;
(instead of &lt;em&gt;sysadm_t&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;20451 open(&amp;quot;/proc/self/task/20451/attr/current&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)                          = 0
20451 gettid()                          = 20451
20451 open(&amp;quot;/proc/self/task/20451/attr/prev&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Because there already is a transition to &lt;em&gt;run_init_t&lt;/em&gt; upon calling the
scripts, the underlying call to &lt;strong&gt;runscripts&lt;/strong&gt; causes the "previous"
attribute to be set to &lt;em&gt;run_init_t&lt;/em&gt; as well, and only then is
&lt;strong&gt;run_init&lt;/strong&gt; called (which then causes the PAM functions to be called).
But by prepending the commands with &lt;strong&gt;run_init&lt;/strong&gt; (which quickly causes
the PAM functions to be called) the previous context is &lt;em&gt;sysadm_t&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I tested on a system with the following policy update, and this succeeds
nicely.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;policy_module(localruninit, 1.0)

gen_require(`
  class passwd { passwd chfn chsh rootok };
  type run_init_t;
&amp;#39;)

allow run_init_t self:passwd rootok;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I'll probably add this in Gentoo's policy.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="pam"></category><category term="rootok"></category><category term="run_init"></category><category term="selinux"></category></entry><entry><title>SELinux tutorial series</title><link href="https://blog.siphos.be/2013/03/selinux-tutorial-series/" rel="alternate"></link><published>2013-03-15T00:34:00+01:00</published><updated>2013-03-15T00:34:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-03-15:/2013/03/selinux-tutorial-series/</id><summary type="html">&lt;p&gt;As we get a growing number of SELinux users within Gentoo Hardened and
because the SELinux usage at the firm I work at is most likely going to
grow as well, I decided to join the bunch of documents on SELinux that
are "out there" and start a series of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As we get a growing number of SELinux users within Gentoo Hardened and
because the SELinux usage at the firm I work at is most likely going to
grow as well, I decided to join the bunch of documents on SELinux that
are "out there" and start a series of my own. After all, too much
documentation probably doesn't hurt, and SELinux definitely deserves a
lot of documentation.&lt;/p&gt;
&lt;p&gt;I decided to use the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt; for this
endeavour instead of a GuideXML approach (which is the format used for
Gentoo documentation on the main site). The set of tutorials that I
already wrote can be found under the
&lt;a href="https://wiki.gentoo.org/wiki/SELinux"&gt;SELinux&lt;/a&gt; : &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials"&gt;Gentoo Hardened
SELinux Tutorials&lt;/a&gt;
location. Although of course meant to support the Gentoo Hardened
SELinux users, I'm hoping to keep the initial set of tutorial articles
deliberately distribution-independent so I can refer to them at work as
well.&lt;/p&gt;
&lt;p&gt;For now (this is a week's work, so don't expect this amount of tutorials
to double in the next few days) I wrote about the security context of a
process, how SELinux controls file and directory accesses, where to find
SELinux permission denial details, controlling file contexts yourself
and how a process gets into a certain context.&lt;/p&gt;
&lt;p&gt;I hope I can keep the articles in good shape and with a gradual step-up
in complexity. That does mean that most articles are not complete (for
instance, when talking about domain transitions, I don't talk about
constraints that might prohibit them, or about the role and type
mismatches (invalid context) that you might get, etc.) and that those
details will follow in later articles. Hopefully that allows users to
learn step by step.&lt;/p&gt;
&lt;p&gt;At the end of each tutorial, you will find a "What you need to remember"
section. This is a very short overview of what was said in the tutorial
and that you will need to know in future articles. If you ever read a
tutorial article, then this section might be sufficient for you to
remember again what it was about - no need to reread the entire article.&lt;/p&gt;
&lt;p&gt;Consider it an attempt at a &lt;code&gt;tl;dr&lt;/code&gt; for articles ;-) Enjoy your reading,
and if you have any remarks, don't hesitate to contribute on the wiki or
talk through the "Talk" pages.&lt;/p&gt;</content><category term="SELinux"></category><category term="articles"></category><category term="documentation"></category><category term="Gentoo"></category><category term="hardened"></category><category term="selinux"></category><category term="tutorials"></category><category term="wiki"></category></entry><entry><title>Gentoo Hardened progress meeting of march 2013</title><link href="https://blog.siphos.be/2013/03/gentoo-hardened-progress-meeting-of-march-2013/" rel="alternate"></link><published>2013-03-07T22:46:00+01:00</published><updated>2013-03-07T22:46:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-03-07:/2013/03/gentoo-hardened-progress-meeting-of-march-2013/</id><summary type="html">&lt;p&gt;Another month has passed, so time for a new progress meeting...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GCC v4.7 has been unmasked, allowing a large set of users to test out
the new GCC. It is also expected that GCC 4.8-rc1 will hit the tree next
week. In the hardened-dev overlay, hardened support …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so time for a new progress meeting...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GCC v4.7 has been unmasked, allowing a large set of users to test out
the new GCC. It is also expected that GCC 4.8-rc1 will hit the tree next
week. In the hardened-dev overlay, hardened support for x86, amd64 and
arm has been added (SPEC updates) and the remainder of architectures
will be added by the end of the week.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kernel and grSecurity/PaX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kernel 3.7.5 had a security issue (local root privilege escalation) so
3.7.5-r1 which held a fix for this was stabilized quickly. However,
other (non-security) problems have been reported, such as one with
dovecot, regarding the VSIZE memory size. This should be fixed in the
3.8 series, so these are candidate for a faster stabilization. This
faster stabilization is never fun, as it increases the likelihood that
we miss other things, but they are needed as the vulnerability in the
previous stable kernel was too severe.&lt;/p&gt;
&lt;p&gt;Regarding XATTR_PAX, we are getting pretty close to the migration. The
eclass is ready and will be announced for review on the appropriate
mailinglists later this week. A small problem still remains on
Paludis-using systems (Paludis does not record NEEDED.ELF.2 information
- linkage information - so it is hard to get all the linkage information
on a system). A different revdep-pax and migrate-pax toolset will be
built that detects the necessary linkage information, but much slower
than on a Portage-running system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SELinux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The 11th revision of the policies are now stable, and work is on the way
for the 12th revision which will hit the tree soon. Some work is on the
way for setools and policycoreutils (one due to a new release - setools
- and the other one due to a build failure if PAM is not set). Both
packages will hit the hardened-dev overlay soon.&lt;/p&gt;
&lt;p&gt;A new "edition" of the selinuxnode virtual image has been pushed to the
mirror system, providing a SELinux-enabled (enforcing) Gentoo Hardened
system with grSecurity and PaX, as well as IMA and EVM enabled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Profiles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The 13.0 profiles have been running fine for a while at a few of our
developer systems. No changes have been needed (yet) so things are
looking good.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System Integrity&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The necessary userland utilities have been moved to the main tree. The
documentation for IMA/EVM has been updated as well to reflec the current
state of IMA/EVM within Gentoo Hardened. IMA, even with the custom
policies, seems to be working well. EVM on the other hand has some
issues, so you might need to run with EVM=fix for now. Debugging on this
issue is on the way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of the user oriented documentation (integrity and SELinux) have
been moved to the Gentoo Wiki for easier user contributions and
simplified management. Other documents will follow soon.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="kernel"></category><category term="pax"></category><category term="profiles"></category><category term="selinux"></category><category term="toolchain"></category></entry><entry><title>Uploading selinuxnode test VM</title><link href="https://blog.siphos.be/2013/02/uploading-selinuxnode-test-vm/" rel="alternate"></link><published>2013-02-25T03:05:00+01:00</published><updated>2013-02-25T03:05:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-02-25:/2013/02/uploading-selinuxnode-test-vm/</id><summary type="html">&lt;p&gt;At the time of writing (but I'll delay the publication of this post a
few hours), I'm uploading a new SELinux-enabled KVM guest image. This is
not an update on the previous image though (it's a reinstalled system -
after all, I use VMs for testing, so it makes sense to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the time of writing (but I'll delay the publication of this post a
few hours), I'm uploading a new SELinux-enabled KVM guest image. This is
not an update on the previous image though (it's a reinstalled system -
after all, I use VMs for testing, so it makes sense to reinstall from
time to time to check if the installation instructions are still
accurate). However, the focus remains the same:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A minimal Gentoo Linux installation for amd64 (x86_64) as guest
    within a KVM hypervisor. The image is about 190 Mb in size
    compressed, and 1.6 Gb in size uncompressed. The file format is
    Qemu's QCOW2 so expect the image to grow as you work with it. The
    file systems are, in total, sized to about 50 Gb.&lt;/li&gt;
&lt;li&gt;The installation has SELinux enabled (strict policy, enforcing
    mode), various grSecurity settings enabled (including PaX and TPE),
    but now also includes IMA (Integrity Measurement Architecture) and
    EVM (Extended Verification Module) although EVM is by default
    started in fix mode.&lt;/li&gt;
&lt;li&gt;The image will not start any network-facing daemons by default
    (unlike the previous image) for security reasons (if I let this
    image stay around this long as I did with the previous, it's prone
    to have some vulnerabilities in the future, although I'm hoping I
    can update the image more frequently). This includes SSH, so you'll
    need access to the image console first after which you can configure
    the network and start SSH (&lt;strong&gt;run_init rc-service sshd start&lt;/strong&gt; does
    the trick).&lt;/li&gt;
&lt;li&gt;A couple of default accounts are created, and the image will display
    those accounts and their passwords on the screen (it is a test/play
    VM, not a production VM).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are still a few minor issues with it, that I hope to fix by the
next upload:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=457812"&gt;Bug 457812&lt;/a&gt; is
    still applicable to the image, so you'll notice lots of SELinux
    denials on the mknod capability. They seem to be cosmetic though.&lt;/li&gt;
&lt;li&gt;At shutdown, udev somewhere fails with a SELinux initial
    context problem. I thought I had it covered, but I noticed after
    compressing the image that it is still there. I'll fix it - I
    promise ;)&lt;/li&gt;
&lt;li&gt;EVM is enabled in fix mode, because otherwise EVM is &lt;a href="http://sourceforge.net/mailarchive/forum.php?thread_name=1361476641.29360.114.camel%40falcor1&amp;amp;forum_name=linux-ima-user"&gt;prohibiting
    mode
    changes&lt;/a&gt;
    on files in /run. I still have to investigate this further though -
    I had to use the EVM=fix workaround due to time pressure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When uploaded, I'll ask the Gentoo infrastructure team to synchronise
the image with our mirrors so you can enjoy it. It'll be on the
distfiles, under experimental/amd64/qemu-selinux (it has the 20130224
date in the name, so you can see for yourself if the sync has already
occurred or not).&lt;/p&gt;</content><category term="Gentoo"></category><category term="evm"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="ima"></category><category term="kvm"></category><category term="selinux"></category><category term="virtual"></category></entry><entry><title>Working on a new selinuxnode VM</title><link href="https://blog.siphos.be/2013/02/working-on-a-new-selinuxnode-vm/" rel="alternate"></link><published>2013-02-23T14:04:00+01:00</published><updated>2013-02-23T14:04:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-02-23:/2013/02/working-on-a-new-selinuxnode-vm/</id><summary type="html">&lt;p&gt;A long time ago, I made a &lt;a href="http://distfiles.gentoo.org/experimental/amd64/qemu-selinux/"&gt;SELinux enabled
VM&lt;/a&gt; for
people to play with, displaying a minimal Gentoo installation, including
the hardening features it supports (PIE/PIC toolchain, grSecurity, PaX
and SELinux). I'm currently trying to create a new one, which also
includes IMA/EVM, but it looks like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A long time ago, I made a &lt;a href="http://distfiles.gentoo.org/experimental/amd64/qemu-selinux/"&gt;SELinux enabled
VM&lt;/a&gt; for
people to play with, displaying a minimal Gentoo installation, including
the hardening features it supports (PIE/PIC toolchain, grSecurity, PaX
and SELinux). I'm currently trying to create a new one, which also
includes IMA/EVM, but it looks like I still have many things to
investigate further...&lt;/p&gt;
&lt;p&gt;First of all, I notice that many SELinux domains want to use the mknod
capability, even for domains of which I have no idea whatsoever why they
need it. I don't notice any downsides though, and running in permissive
mode doesn't change the domain behavior. But still, I'm reluctant to
mark them dontaudit as long as I'm not 100% sure.&lt;/p&gt;
&lt;p&gt;Second, the gettys (I think it is the getty) result in a "Cannot change
SELinux context: permission denied" error, even though everything is
running in the right SELinux context. I still have to confirm if it
really is the getty process or something else (the last run I had the
impression it was a udev-related process). But there are no denials and
no SELinux errors in the logs.&lt;/p&gt;
&lt;p&gt;Third, during shutdown, many domains have problems accessing their PID
files in /var/run (which is a link to /run). I most likely need to allow
read privileges on all domains that have access to var_run_t towards
the var_t symlinks. It isn't a problem per se (the processes still run
correctly) but ugly as hell, and if you introduce monitoring it'll go
haywire (as no PID files were either found, or were stale).&lt;/p&gt;
&lt;p&gt;Also, EVM is giving me a hard time, not allowing me to change mode and
ownership in files on /var/run. I have received some feedback from the
IMA user list on this so it is still very much a work-in-progress.&lt;/p&gt;
&lt;p&gt;Finally, the first attempt to generate a new VM resulted in a download
of 817 MB (instead of the 158 MB of the previous release), so I still
have to correct my USE flags and doublecheck the installed applications.
Anyway, definitely to be continued. Too bad time is a scarce resource
:-(&lt;/p&gt;</content><category term="Gentoo"></category><category term="evm"></category><category term="Gentoo"></category><category term="hardened"></category><category term="ima"></category><category term="selinux"></category><category term="selinuxnode"></category><category term="vm"></category></entry><entry><title>Gentoo Hardened goes onward (aka project meeting)</title><link href="https://blog.siphos.be/2013/02/gentoo-hardened-goes-onward-aka-project-meeting/" rel="alternate"></link><published>2013-02-07T23:40:00+01:00</published><updated>2013-02-07T23:40:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-02-07:/2013/02/gentoo-hardened-goes-onward-aka-project-meeting/</id><summary type="html">&lt;p&gt;It's been a while again, so time for another Gentoo Hardened online
progress meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is on development stage 4, so the hardened patches will be
worked on next week. Some help on it is needed to test the patches on
ARM, PPC and MIPS though. For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been a while again, so time for another Gentoo Hardened online
progress meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is on development stage 4, so the hardened patches will be
worked on next week. Some help on it is needed to test the patches on
ARM, PPC and MIPS though. For those interested, keep a close eye on the
hardened-dev overlay as those will contain the latest fixes. When GCC
4.9 starts development phase 1, Zorry will again try to upstream the
patches.&lt;/p&gt;
&lt;p&gt;With the coming fixes, we might probably (need to) remove the various
hardenedno* GCC profiles from the hardened Gentoo profiles. This
shouldn't impact too many users as ebuilds add in the correct flags
anyhow (for instance when needing to turn off PIE/PIC).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel, grSecurity and PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The kernel release 3.7.0 that we have stable in our tree has seen a few
setbacks, but no higher version is stable yet (mainly due to the
stabilization period needed). 3.7.4-r1 and 3.7.5 are prime candidates
with good track record,&lt;br&gt;
so we might be stabilizing 3.7.5 in the very near future (next week
probably).&lt;/p&gt;
&lt;p&gt;On the PaX flag migration (you know, from ELF-header based marking to
extended attributes marking), the documentation has seen its necessary
upgrades and the userland utilities have been updated to reflect the use
of xattr markings. The eclass we use for the markings will use the
correct utility based on the environment.&lt;/p&gt;
&lt;p&gt;One issue faced when trying to support both markings is that some
actions (like the "paxctl -Cc" which creates the PT_PAX header if it is
missing) make no sense with the other (as there is no header when using
XATTR_PAX). The eclass will be updated to ignore these flags when
XATTR_PAX is selected.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Revision 10 is stable in the tree, and revision 11 is waiting
stabilization period. A few more changes have been put in the policy
repository already (which are installed when using the live ebuilds) and
will of course be part of&lt;br&gt;
revision 12.&lt;/p&gt;
&lt;p&gt;A change in the userland utilities was also pushed out to allow
permissive domains (so run a single domain in permissive mode instead of
the entire system).&lt;/p&gt;
&lt;p&gt;Finally, the SELinux eclass has been updated to remove SELinux modules
from all defined SELinux module stores if the SELinux policy package is
removed from the system. Before that, the user had to remove the modules
from the store himself manually, but this is error-prone and easily
forgotten, especially for the non-default SELinux policy stores.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All hardened subprofiles are marked as deprecated now (you've seen the
discussions on this on the mailinglist probably on this) so we now have
a sane set of hardened profiles to manage. The subprofiles were used for
things like&lt;br&gt;
"desktop" or "server", whereas users can easily stack their profiles as
they see fit anyhow - so there was little reason for the project to
continue managing those subprofiles.&lt;/p&gt;
&lt;p&gt;Also, now that Gentoo has released its 13.0 profile, we will need to
migrate our profiles to the 13.0 ones as well. So, the idea is to
temporarily support 13.0 in a subprofile, test it thoroughly, and then
remove the subprofile and switch the main one to 13.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The documentation for IMA and EVM is available on the Gentoo Hardened
project site. They currently still refer to the IMA and EVM subsystems
as development-only, but they are available in the stable kernels now.
Especially the default policy that is available in the kernel is pretty
useful. When you want to consider custom policies (for instance with
SELinux integration) you'll need a kernel patch that is already
upstreamed but not applied to the stable kernels yet.&lt;/p&gt;
&lt;p&gt;To support IMA/EVM, a package called ima-evm-utils is available in the
hardened-dev overlay, which will be moved to the main tree soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As mentioned before, the PaX documentation has seen quite a lot of
updates. Other documents that have seen updates are the Hardened FAQ,
Integrity subproject and SELinux documentation although most of them
were small changes.&lt;/p&gt;
&lt;p&gt;Another suggestion given is to clean up the Hardened project page;
however, there has been some talk within Gentoo to move project pages to
the Gentoo wiki. Such a move might make the suggestion easier to handle.
And while on the subject of the wiki, we might want to move user guides
to the wiki already.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bugs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Bug &lt;a href="https://bugs.gentoo.org/443630"&gt;443630&lt;/a&gt; refers to segmentation
faults with libvirt when starting Qemu domains on a SELinux-enabled
host. Sadly, I'm not able to test libvirt myself so either someone with
SELinux and libvirt&lt;br&gt;
expertise can chime in, or we will need to troubleshoot it by bug
(using gdb, strace'ing more, ...) which might take quite some time and
is not user friendly...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Various talks where held at FOSDEM regarding Gentoo Hardened, and a lot
of people attended those talks. Also the round table was quite
effective, with many users interacting with developers all around. For
next year, chances are very high that we'll give a "What has changed
since last year" session and a round table again.&lt;/p&gt;
&lt;p&gt;With many thanks to the usual suspects: Zorry, blueness, prometheanfire,
lejonet, klondike and the several dozen contributors that are going to
kill me for not mentioning their (nick)names.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="kernel"></category><category term="meeting"></category><category term="minutes"></category><category term="online"></category><category term="pax"></category><category term="profiles"></category><category term="selinux"></category></entry></feed>