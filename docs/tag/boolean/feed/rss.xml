<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - boolean</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Fri, 28 Mar 2014 23:38:00 +0100</lastBuildDate><item><title>Querying SELinux policy for boolean information</title><link>https://blog.siphos.be/2014/03/querying-selinux-policy-for-boolean-information/</link><description>&lt;p&gt;Within an SELinux policy, certain access vectors (permissions) can be
conditionally granted based on the value of a &lt;em&gt;SELinux boolean&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To find the list of SELinux booleans that are available on your system,
you can use the &lt;strong&gt;getsebool -a&lt;/strong&gt; method, or &lt;strong&gt;semanage boolean -l&lt;/strong&gt;. The
latter also displays the description …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 28 Mar 2014 23:38:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2014-03-28:/2014/03/querying-selinux-policy-for-boolean-information/</guid><category>SELinux</category><category>boolean</category><category>query</category><category>selinux</category><category>sesearch</category></item><item><title>Using CUSTOM_BUILDOPT in refpolicy for USE flag-alike functionality?</title><link>https://blog.siphos.be/2013/08/using-custom_buildopt-in-refpolicy-for-use-flag-alike-functionality/</link><description>&lt;p&gt;As you are probably aware, Gentoo uses the &lt;a href="http://oss.tresys.com/projects/refpolicy/"&gt;reference
policy&lt;/a&gt; as its base for
SELinux policies. Yes, we do customize it and not everything is already
pushed upstream (for instance, our approach to use &lt;code&gt;xdg_*_home_t&lt;/code&gt;
customizable types to further restrict user application access has been
sent up for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 16 Aug 2013 09:17:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-08-16:/2013/08/using-custom_buildopt-in-refpolicy-for-use-flag-alike-functionality/</guid><category>Gentoo</category><category>boolean</category><category>Gentoo</category><category>policy</category><category>selinux</category><category>use</category><category>useflag</category></item><item><title>A SELinux policy for incron: using booleans</title><link>https://blog.siphos.be/2013/05/a-selinux-policy-for-incron-using-booleans/</link><description>&lt;p&gt;After using a default set of directories to watch, and &lt;a href="http://blog.siphos.be/2013/05/a-selinux-policy-for-incron-marking-types-eligible-for-watching/"&gt;allowing admins
to mark other
types&lt;/a&gt;
as such as well, let's consider another approach for making the policy
more flexible: booleans. The idea now is that a boolean called
&lt;em&gt;incron_notify_non_security_files&lt;/em&gt; enables &lt;strong&gt;incrond&lt;/strong&gt; to be
notified on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 30 May 2013 03:50:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-05-30:/2013/05/a-selinux-policy-for-incron-using-booleans/</guid><category>SELinux</category><category>boolean</category><category>incron</category><category>policy</category><category>selinux</category></item></channel></rss>