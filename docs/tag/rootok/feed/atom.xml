<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Simplicity is a form of art... - rootok</title><link href="https://blog.siphos.be/" rel="alternate"></link><link href="https://blog.siphos.be/tag/rootok/feed/atom.xml" rel="self"></link><id>https://blog.siphos.be/</id><updated>2013-04-09T22:14:00+02:00</updated><entry><title>Not needing run_init for password-less service management</title><link href="https://blog.siphos.be/2013/04/not-needing-run_init-for-password-less-service-management/" rel="alternate"></link><published>2013-04-09T22:14:00+02:00</published><updated>2013-04-09T22:14:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-04-09:/2013/04/not-needing-run_init-for-password-less-service-management/</id><summary type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I decided to &lt;strong&gt;strace&lt;/strong&gt; the two commands and look for the
differences. I found out that there is even a SELinux permission for
being able to use the &lt;em&gt;rootok&lt;/em&gt; setting for passwords! Apparently,
&lt;code&gt;pam_rootok.so&lt;/code&gt; is SELinux-aware and does some additional checks.&lt;/p&gt;
&lt;p&gt;Although I don't know the exact details of it, it looks for the context
before the call (exec) of &lt;strong&gt;run_init&lt;/strong&gt; occurred. Then it checks if this
domain has the right for &lt;em&gt;passwd { rootok }&lt;/em&gt; (unless SELinux is in
permissive, in which case it just continues) and only then it allows the
"rootok" to succeed.&lt;/p&gt;
&lt;p&gt;Now why doesn't this work without using &lt;strong&gt;run_init&lt;/strong&gt;? I think it has to
do with how we integrate &lt;strong&gt;run_init&lt;/strong&gt; in the scripts, because out of
the trace I found that the previous context was also &lt;em&gt;run_init_t&lt;/em&gt;
(instead of &lt;em&gt;sysadm_t&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;20451 open(&amp;quot;/proc/self/task/20451/attr/current&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)                          = 0
20451 gettid()                          = 20451
20451 open(&amp;quot;/proc/self/task/20451/attr/prev&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because there already is a transition to &lt;em&gt;run_init_t&lt;/em&gt; upon calling the
scripts, the underlying call to &lt;strong&gt;runscripts&lt;/strong&gt; causes the "previous"
attribute to be set to &lt;em&gt;run_init_t&lt;/em&gt; as well, and only then is
&lt;strong&gt;run_init&lt;/strong&gt; called (which then causes the PAM functions to be called).
But by prepending the commands with &lt;strong&gt;run_init&lt;/strong&gt; (which quickly causes
the PAM functions to be called) the previous context is &lt;em&gt;sysadm_t&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I tested on a system with the following policy update, and this succeeds
nicely.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;policy_module(localruninit, 1.0)

gen_require(`
  class passwd { passwd chfn chsh rootok };
  type run_init_t;
&amp;#39;)

allow run_init_t self:passwd rootok;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'll probably add this in Gentoo's policy.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="pam"></category><category term="rootok"></category><category term="run_init"></category><category term="selinux"></category></entry></feed>