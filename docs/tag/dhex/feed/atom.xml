<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Simplicity is a form of art... - dhex</title><link href="http://blog.siphos.be/" rel="alternate"></link><link href="http://blog.siphos.be/tag/dhex/feed/atom.xml" rel="self"></link><id>http://blog.siphos.be/</id><updated>2013-06-01T03:50:00+02:00</updated><entry><title>Hacking java bytecode with dhex</title><link href="http://blog.siphos.be/2013/06/hacking-java-bytecode-with-dhex/" rel="alternate"></link><published>2013-06-01T03:50:00+02:00</published><updated>2013-06-01T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:blog.siphos.be,2013-06-01:/2013/06/hacking-java-bytecode-with-dhex/</id><summary type="html">&lt;p&gt;I found myself in a weird situation: a long long time ago, I wrote a
java application that I didn't touch nor ran for a few years. Today, I
found it on a backup and wanted to run it again (its a graphical
application for generating HTML pages). However, it â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I found myself in a weird situation: a long long time ago, I wrote a
java application that I didn't touch nor ran for a few years. Today, I
found it on a backup and wanted to run it again (its a graphical
application for generating HTML pages). However, it failed in a
particular feature. Not with an exception or stack trace, just
functionally. Now, I have the source code at hand, so I look into the
code and find the logical error. Below is a snippet of it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;if (myHandler != null) {
  int i = startValue + maxRange;
  for (int j = endValue; j &amp;gt; i; j--) {
    ... (do some logic)
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It doesn't matter what the code is supposed to do, but from what I can
remember, I shouldn't be adding &lt;code&gt;maxRange&lt;/code&gt; to the &lt;code&gt;i&lt;/code&gt; variable (yet - as
I do that later in the code). But instead of setting up the java
development environment, emerging the IDE etc. I decided to just edit
the class file directly using &lt;strong&gt;dhex&lt;/strong&gt; (a wonderful utility I recently
discovered) because doing things the hard way is sometimes fun as well.
So I ran &lt;strong&gt;javap -c MyClass&lt;/strong&gt; to get some java bytecode information from
the method, which gives me:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   8:   ifnull  116
   11:  iload_2
   12:  iload_3
   13:  iadd
   14:  istore  5
   16:  iload_2
   17:  istore  6
   19:  iload   6
   21:  iload   5
   23:  if_icmpge       106
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I know lines 11 and 12 is about pushing the 2nd and 3rd arguments of the
function (which are &lt;code&gt;startValue&lt;/code&gt; and &lt;code&gt;maxRange&lt;/code&gt;) to the stack to add
them (line 13). To remove the third argument, I can change this opcode
from &lt;code&gt;1d&lt;/code&gt; (iload_3) to &lt;code&gt;03&lt;/code&gt; (iconst_0). This way, zero is added and
the code itself just continues as needed. And for some reason, that
seems to be the only mistake I made then because the application now
works flawlessly.&lt;/p&gt;
&lt;p&gt;Hacking is fun.&lt;/p&gt;</content><category term="Misc"></category><category term="bytecode"></category><category term="dhex"></category><category term="java"></category></entry></feed>