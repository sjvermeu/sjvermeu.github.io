<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - pam</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Mon, 11 Sep 2017 18:25:00 +0200</lastBuildDate><item><title>Authenticating with U2F</title><link>https://blog.siphos.be/2017/09/authenticating-with-u2f/</link><description>&lt;p&gt;In order to further secure access to my workstation, after the &lt;a href="http://blog.siphos.be/2017/08/switch-to-gentoo-sources/"&gt;switch to Gentoo
sources&lt;/a&gt;, I now enabled two-factor authentication through my Yubico U2F
USB device. Well, at least for local access - remote access through SSH requires
both userid/password as well as the correct SSH key, by &lt;a href="https://lwn.net/Articles/544640/"&gt;chaining authentication …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 11 Sep 2017 18:25:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2017-09-11:/2017/09/authenticating-with-u2f/</guid><category>Security</category><category>gentoo</category><category>security</category><category>yubico</category><category>u2f</category><category>pam</category></item><item><title>Why does it access /etc/shadow?</title><link>https://blog.siphos.be/2014/12/why-does-it-access-etcshadow/</link><description>&lt;p&gt;While updating the SELinux policy for the Courier IMAP daemon, I noticed
that it (well, the authdaemon that is part of Courier) wanted to access
&lt;code&gt;/etc/shadow&lt;/code&gt;, which is of course a big no-no. It doesn't take long to
know that this is through the PAM support (more specifically,
&lt;code&gt;pam_unix …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 30 Dec 2014 22:48:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2014-12-30:/2014/12/why-does-it-access-etcshadow/</guid><category>SELinux</category><category>chkpwd</category><category>pam</category><category>selinux</category><category>shadow</category><category>unix_chkpwd</category></item><item><title>Not needing run_init for password-less service management</title><link>https://blog.siphos.be/2013/04/not-needing-run_init-for-password-less-service-management/</link><description>&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 09 Apr 2013 22:14:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-04-09:/2013/04/not-needing-run_init-for-password-less-service-management/</guid><category>Gentoo</category><category>Gentoo</category><category>hardened</category><category>pam</category><category>rootok</category><category>run_init</category><category>selinux</category></item></channel></rss>