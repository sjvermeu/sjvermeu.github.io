<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - openscap</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Tue, 24 Dec 2013 04:25:00 +0100</lastBuildDate><item><title>Doing a content check with OVAL</title><link>https://blog.siphos.be/2013/12/doing-a-content-check-with-oval/</link><description>&lt;p&gt;Let's create an OVAL check to see if &lt;code&gt;/etc/inittab&lt;/code&gt;'s single user
definitions only refer to &lt;code&gt;/sbin/sulogin&lt;/code&gt; or &lt;code&gt;/sbin/rc single&lt;/code&gt;. First,
the skeleton:&lt;/p&gt;
&lt;p&gt;(XML content lost during blog conversion)&lt;/p&gt;
&lt;p&gt;The first thing we notice is that there are several namespaces defined
within OVAL. These namespaces refer to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 24 Dec 2013 04:25:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-12-24:/2013/12/doing-a-content-check-with-oval/</guid><category>openscap</category><category>oval</category><category>scap</category><category>xccdf</category></item><item><title>What is OVAL?</title><link>https://blog.siphos.be/2013/12/what-is-oval/</link><description>&lt;p&gt;Time to discuss &lt;strong&gt;OVAL (Open Vulnerability Assessment Language)&lt;/strong&gt;. In
all the &lt;a href="http://blog.siphos.be/2013/12/running-a-bit-with-the-xccdf-document/"&gt;previous
posts&lt;/a&gt;
I focused the checking of rules (does the system comply with the given
rule) on scripts, through the Script Check Engine supported by openscap.
The advantage of SCE is that most people can quickly provide automated
checks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 22 Dec 2013 04:40:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-12-22:/2013/12/what-is-oval/</guid><category>openscap</category><category>oval</category><category>scap</category><category>sce</category><category>xccdf</category></item><item><title>Remediation through SCAP</title><link>https://blog.siphos.be/2013/12/remediation-through-scap/</link><description>&lt;p&gt;I promised in my &lt;a href="http://blog.siphos.be/2013/12/running-a-bit-with-the-xccdf-document/"&gt;previous
post&lt;/a&gt;
to give some information about remediation.&lt;/p&gt;
&lt;p&gt;Remediation is the process where you fix a system to become compliant
again after finding out there is a violation on the system. The easiest
form of remediation of course is to just notify the administrator and
give …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 20 Dec 2013 04:47:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-12-20:/2013/12/remediation-through-scap/</guid><category>openscap</category><category>remediation</category><category>scap</category><category>xccdf</category></item><item><title>Running a bit with the XCCDF document</title><link>https://blog.siphos.be/2013/12/running-a-bit-with-the-xccdf-document/</link><description>&lt;p&gt;In my &lt;a href="http://blog.siphos.be/2013/12/xccdf-documenting-a-bit-more-than-just-descriptions/"&gt;previous
post&lt;/a&gt;
I introduced automated checking of rules through &lt;em&gt;SCE (Script Check
Engine)&lt;/em&gt;. Let's focus a bit more now on running with an XCCDF document:
how to automatically check the system, read the results and find more
information of those results.&lt;/p&gt;
&lt;p&gt;To provide a usable example, you can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 18 Dec 2013 04:23:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-12-18:/2013/12/running-a-bit-with-the-xccdf-document/</guid><category>openscap</category><category>scap</category><category>sce</category><category>xccdf</category></item><item><title>XCCDF - Documenting a bit more than just descriptions</title><link>https://blog.siphos.be/2013/12/xccdf-documenting-a-bit-more-than-just-descriptions/</link><description>&lt;p&gt;In my &lt;a href="http://blog.siphos.be/2013/12/an-xccdf-skeleton-for-postgresql/"&gt;previous
post&lt;/a&gt; I
made a skeleton XCCDF document. By now, we can create a well documented
"baseline" (best practice) for our subject (say PostgreSQL). But for now
I only talked about &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; whereas XCCDF allows many other tags
as well.&lt;/p&gt;
&lt;p&gt;You can add &lt;em&gt;metadata&lt;/em&gt; information for a particular …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 16 Dec 2013 04:58:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-12-16:/2013/12/xccdf-documenting-a-bit-more-than-just-descriptions/</guid><category>openscap</category><category>scap</category><category>sce</category><category>xccdf</category></item></channel></rss>