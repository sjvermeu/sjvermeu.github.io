<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - ebuild</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Thu, 10 Sep 2015 07:13:00 +0200</lastBuildDate><item><title>Custom CIL SELinux policies in Gentoo</title><link>https://blog.siphos.be/2015/09/custom-cil-selinux-policies-in-gentoo/</link><description>&lt;p&gt;In Gentoo, we have been supporting &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;custom policy packages&lt;/a&gt;
for a while now. Unlike most other distributions, which focus on binary packages,
Gentoo has always supported source-based packages as default (although 
&lt;a href="https://wiki.gentoo.org/wiki/Binary_package_guide"&gt;binary packages&lt;/a&gt; are 
supported as well).&lt;/p&gt;
&lt;p&gt;A recent &lt;a href="https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=8f2aa45db35bbf3a74f8db09ece9edac60e79ee4"&gt;commit&lt;/a&gt;
now also allows CIL files to be used.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 10 Sep 2015 07:13:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-09-10:/2015/09/custom-cil-selinux-policies-in-gentoo/</guid><category>Gentoo</category><category>gentoo</category><category>cil</category><category>selinux</category><category>ebuild</category><category>eclass</category></item><item><title>Maintaining packages and backporting</title><link>https://blog.siphos.be/2015/09/maintaining-packages-and-backporting/</link><description>&lt;p&gt;A few days ago I committed a small update to &lt;code&gt;policycoreutils&lt;/code&gt;, a SELinux related
package that provides most of the management utilities for SELinux systems. The
fix was to get two patches (which are committed upstream) into the existing
release so that our users can benefit from the fixed issues without having to
wait for a new release.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 02 Sep 2015 20:33:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-09-02:/2015/09/maintaining-packages-and-backporting/</guid><category>Gentoo</category><category>gentoo</category><category>ebuild</category><category>patching</category></item><item><title>No more DEPENDs for SELinux policy package dependencies</title><link>https://blog.siphos.be/2014/11/no-more-depends-for-selinux-policy-package-dependencies/</link><description>&lt;p&gt;I just finished updating 102 packages. The change? Removing the
following from the ebuilds:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DEPEND=&amp;quot;selinux? ( sec-policy/selinux-${packagename} )&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the past, we needed this construction in both DEPEND and RDEPEND.
Recently however, the SELinux eclass got updated with some logic to
relabel files after the policy package is deployed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 02 Nov 2014 14:51:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2014-11-02:/2014/11/no-more-depends-for-selinux-policy-package-dependencies/</guid><category>Gentoo</category><category>DEPEND</category><category>ebuild</category><category>Gentoo</category><category>RDEPEND</category><category>selinux</category></item><item><title>Stepping through the build process with ebuild</title><link>https://blog.siphos.be/2014/04/stepping-through-the-build-process-with-ebuild/</link><description>&lt;p&gt;Today I had to verify a patch that I pushed upstream but which was
slightly modified. As I don't use the tool myself (it was a
user-reported issue) I decided to quickly drum up a live ebuild for the
application and install it (as the patch was in the upstream …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 20 Apr 2014 11:59:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2014-04-20:/2014/04/stepping-through-the-build-process-with-ebuild/</guid><category>Gentoo</category><category>ebuild</category><category>phase</category><category>portage</category></item><item><title>Overriding the default SELinux policies</title><link>https://blog.siphos.be/2013/05/overriding-the-default-selinux-policies/</link><description>&lt;p&gt;Extending SELinux policies with additional rules is easy. As SELinux
uses a &lt;em&gt;deny by default&lt;/em&gt; approach, all you need to do is to &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;create a
policy
module&lt;/a&gt;
that contains the additional (allow) rules, load that and you're all
set. But what if you want to remove some rules?&lt;/p&gt;
&lt;p&gt;Well, sadly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 15 May 2013 03:50:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2013-05-15:/2013/05/overriding-the-default-selinux-policies/</guid><category>Gentoo</category><category>ebuild</category><category>epatch_user</category><category>Gentoo</category><category>override</category><category>patch</category><category>policy</category><category>selinux</category></item></channel></rss>