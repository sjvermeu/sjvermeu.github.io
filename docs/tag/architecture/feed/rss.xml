<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - architecture</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Tue, 07 Sep 2021 18:00:00 +0200</lastBuildDate><item><title>Location view of infrastructure</title><link>https://blog.siphos.be/2021/09/location-view-of-infrastructure/</link><description>&lt;p&gt;In this last post on the infrastructure domain, I cover the fifth and final
viewpoint that is important for an infrastructure domain representation, and
that is the &lt;em&gt;location view&lt;/em&gt;. As mentioned in previous posts, the viewpoints I
think are most representative of the infrastructure domain are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/09/process-view-of-infrastructure/"&gt;process view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;service view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;component view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;location view&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like with the component view, the location view is a layered approach. While I
initially wanted to call it the network view, "location" might be a broader
term that matches the content better. Still, it's not a perfect name, but the
name is less important than the content, not?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Location view representation" src="https://blog.siphos.be/images/202109/location-view.png"/&gt;&lt;/p&gt;
&lt;p&gt;Let's go through the layers from bottom to top.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Easiest to represent: geographic location and facilities&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The geographic location is the least IT-specific view out there, as it
represents where everything is in the world. These views are popular not only to
scope projects better (like data center locations) but also to support getting
important infrastructural metrics.&lt;/p&gt;
&lt;p&gt;WAN latency, for instance, is limited by the distance (you can't outsmart
physics), and by knowing the path between two points, you can calculate the
throughput and latency (such as through the &lt;a href="https://wintelguy.com/wanlat.html"&gt;Wintelguy WAN Latency
Estimator&lt;/a&gt;). When designing redundant network
connections between separate locations, you might depend on multiple line
providers. To ensure there are no chokepoints where both providers have their
lines go through the same location, you can ask for the fiber path details to
validate this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A10's DDoS Threat Intelligence
map" src="https://blog.siphos.be/images/202109/a10-ddos-threat-intelligence.jpg"/&gt;
&lt;em&gt;Source: &lt;a href="https://www.a10networks.com/"&gt;A10 Networks&lt;/a&gt;, through their &lt;a href="https://www.a10networks.com/products/network-security-services/threat-intelligence-service/"&gt;DDoS
Threat Intelligence
Service&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Using geographic locations also facilitates understanding by other stakeholders,
even if it has a less technological impact on the case at hand. For instance,
while undergoing active DDoS attacks, a geographic representation of where they
come from helps to get more understanding from management, even though on
network-level you're more interested in the Autonomous System (AS) networks that
are involved. Those are very large groups of networks that cover the main
global-wide routing of data.&lt;/p&gt;
&lt;p&gt;If we drill down from a geographic location, the next view is the
facility-related one. Here, the view focuses on building design and
infrastructure (such as HVAC and power distribution in data rooms or data
centers), as well as the location of individual devices (floor plans, rack
spaces). Facility views help not just with initial network designs where you
want to onboard a new headquarter location, but also with capacity management
within data centers (identifying hotspots), dealing with wireless networks and
their impact on the surroundings, cable management for networks, ensuring the
resilience of infrastructure services and more.&lt;/p&gt;
&lt;p&gt;A decent facility view is very helpful when dealing with operational technology
environments (IoT), and can be dynamically generated. A while ago, I was at a
conference where they showed people's movement based on the data received from
their smartphones. They used the view to see which areas were too crowded (it
was pre-COVID times), as well as to see if there are sudden movements that might
indicate problems or threats.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Foundations for networks: connectivity, underlay, and virtualization&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next three layers in the location view focus on the foundations for a
company's network. They are strongly IT oriented with the main stakeholders
being the telco- and infrastructure related teams and roles. Unlike the higher
level viewpoints, the foundations require more thought in their design as errors
are harder to correct.&lt;/p&gt;
&lt;p&gt;The connectivity focuses on the cabling and other connections made between
devices. This includes backplane-related connectivity, something that is
relevant when using enclosures or pre-engineered systems. Connectivity and
cabling seem rudimentary, but are critical for the proper functioning of a
network. Remember the science report about possible faster-than-light
neutrino's? Well, a &lt;a href="http://blogs.nature.com/news/2012/02/faster-than-light-neutrino-measurement-has-two-possible-errors.html"&gt;faulty connection was partially to
blame&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The network underlay is the network view that network engineers have on their
network. For small environments, the network view from the engineering point of
view might be the same as the view from the application side, but for larger
environments, I often see a distinction between the two. And when that occurs,
the underlay view is less of a concern for application engineers and business
stakeholders (unless of course there are major issues with the underlay design),
but that does not make it less important. People are often not aware of how our
electricity net works, but if it fails, we're all affected. Similarly, if the
network underlay is badly designed, the higher networks will see troubles too.&lt;/p&gt;
&lt;p&gt;The network virtualization stack is a technology component that supports
building virtual networks on top of the underlay environment. So while the
underlay is like the foundation on top of which all networks are hosted, the
virtualization makes this possible. In that sense, it is similar to the
hypervisor level on the component view (and perhaps is less of a location view
than a component one, although network virtualization technologies do require a
common understanding of the full network to function properly).&lt;/p&gt;
&lt;p&gt;Companies use different virtualization technologies and concepts. A simple
network virtualization technology is the VLAN (Virtual LAN), which presents
itself as a single broadcast domain to the participating systems, even though
these systems might not be physically connected to the same switch or switch
environment. It is even possible to stretch VLANs across wide areas.&lt;/p&gt;
&lt;p&gt;But virtualization can go further. Technologies such as Cisco ACI or VMware NSX
don't just focus on the LAN level, but also virtualize the network on the
addressing and routing part. And with Network Functions Virtualization (NFV), we
also include firewalls and traffic control. However, do not consider NFV to just
be the next phase beyond Software Defined Networks (SDN), as NFV and SDN are
different beasts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View from application and system side: topology and protocols&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The highest levels in the location view focus on the network as it is seen by
the business applications and systems that a company hosts.&lt;/p&gt;
&lt;p&gt;The network topology is the view on segregation, segments/subnets, and the
network functions that take part in the overall environment (such as DNS/DHCP/IP
address management, firewall functionality, proxies, and other gateways). This
is the view that is probably going to change the most, as it constantly evolves
based on business demand and IT evolutions. Topology views are not just
one-of-a-kind: depending on the scope you want to address, multiple views might
be needed to convey the message you want to tell.&lt;/p&gt;
&lt;p&gt;One type of view within the topology is the &lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning
view&lt;/a&gt; which I've
covered before, and which is very expressive towards the other stakeholders: it
covers the entire company's environment while abstracting enough of the details
so that it remains understandable.&lt;/p&gt;
&lt;p&gt;If we were to zoom in further on the network topology, you get into the specific
interactions that are made between systems, which are standardized in protocols.
But while the network (and application) protocols are often very standardized,
they are also very challenging to understand.&lt;/p&gt;
&lt;p&gt;The main challenge is that there are so many protocols out there, with so many
options and implementation choices, that you need to be an expert to
troubleshoot issues if they arise. Web applications aren't just disclosed over
the HTTP protocol: you have channel encryption (TLS), might be using WebSockets,
or even the QUIC protocol. And if you think you understand HTTP, do you
understand HTTP/2?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The past few posts (with a few historical ones) make up what I consider being 
the infrastructure domain, and how to structurally approach changes within. Of
course, these are not the only views out there, and based on the project ahead,
different viewpoints might come up. But for a holistic view of the
infrastructure domain, I think these five cover it well.&lt;/p&gt;
&lt;p&gt;Feedback? Comments? Don't hesitate to &lt;a href="mailto:sven.vermeulen@siphos.be"&gt;drop me an
email&lt;/a&gt;, or join the &lt;a href="TODO"&gt;discussion on
Twitter&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 07 Sep 2021 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-07:/2021/09/location-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>location</category><category>network</category><category>virtualization</category><category>protocol</category></item><item><title>Process view of infrastructure</title><link>https://blog.siphos.be/2021/09/process-view-of-infrastructure/</link><description>&lt;p&gt;In my &lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;previous post&lt;/a&gt;,
I started with the five different views that would support a good view of
what infrastructure would be. I believe these views (component, location,
process, service, and zoning) cover the breadth of the domain. The post also
described the component view a bit more and linked to previous posts I made (one
for &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;services&lt;/a&gt;, another for
&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The one I want to tackle here is the most elaborate one, also the most
enterprise-ish, and one that always is a balance on how much time and
effort to put into it (as an architect), as well as hoping that the processes
are sufficiently standardized in a flexible manner so that you don't need
to cover everything again and again in each project.&lt;/p&gt;
&lt;p&gt;So, let's talk about processes...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 01 Sep 2021 11:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-01:/2021/09/process-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>process</category></item><item><title>Component view of infrastructure</title><link>https://blog.siphos.be/2021/08/component-view-of-infrastructure/</link><description>&lt;p&gt;IT architects try to use views and viewpoints to convey the target architecture
to the various stakeholders. Each stakeholder has their own interests in the
architecture and wants to see their requirements fulfilled. A core
role of the architect is to understand these requirements and make sure the
requirements are met, and to balance all the different requirements.&lt;/p&gt;
&lt;p&gt;Architecture languages or meta-models often put significant focus on these
views. Archimate has a large annex on &lt;a href="https://pubs.opengroup.org/architecture/archimate3-doc/apdxc.html#_Toc10045495"&gt;Example
Viewpoints&lt;/a&gt;
just for this purpose. However, unless the organization is widely accustomed to
enterprise architecture views, it is unlikely that the views themselves are the
final product: being able to translate those views into pretty slides and
presentations is still an important task for architects when they need to
present their findings to non-architecture roles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 27 Aug 2021 21:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-08-27:/2021/08/component-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>component</category><category>viewpoint</category></item><item><title>Disaster recovery in the public cloud</title><link>https://blog.siphos.be/2021/07/disaster-recovery-in-the-public-cloud/</link><description>&lt;p&gt;The public cloud is a different beast than an on-premise environment, and that
also reflects itself on how we (should) look at the processes that are
actively steering infrastructure designs and architecture. One of these
is the business continuity, severe incident handling, and the
hopefully-never-to-occur disaster recovery. When building up procedures
for handling disasters (&lt;a href="https://en.wikipedia.org/wiki/Disaster_recovery"&gt;DRP = Disaster Recovery Procedure or Disaster 
Recover Planning&lt;/a&gt;),
it is important to keep in mind what these are about.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 30 Jul 2021 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-30:/2021/07/disaster-recovery-in-the-public-cloud/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>DRP</category></item><item><title>What is the infrastructure domain?</title><link>https://blog.siphos.be/2021/07/what-is-the-infrastructure-domain/</link><description>&lt;p&gt;In my job as domain architect for "infrastructure", I often come across
stakeholders that have no common understanding of what infrastructure means in
an enterprise architecture. Since then, I am trying to figure out a way to
easily explain it - to find a common, generic view on what infrastructure
entails. If successful, I could use this common view to provide context on the
many, many IT projects that are going around.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 19 Jul 2021 15:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-19:/2021/07/what-is-the-infrastructure-domain/</guid><category>Architecture</category><category>architecture</category><category>pattern</category></item><item><title>Organizing service documentation</title><link>https://blog.siphos.be/2021/07/organizing-service-documentation/</link><description>&lt;p&gt;As I mentioned in &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;An IT services overview&lt;/a&gt;
I try to keep track of the architecture and designs of the IT services and
solutions in a way that I feel helps me keep in touch with all the various
services and solutions out there. Similar to how system administrators try to
find a balance while working on documentation (which is often considered a
chore) and using a structure that is sufficiently simple and standard for the
organization to benefit from, architects should try to keep track of
architecturally relevant information as well.&lt;/p&gt;
&lt;p&gt;So in this post, I'm going to explain a bit more on how I approach documenting
service and solution insights for architectural relevance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 08 Jul 2021 09:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-08:/2021/07/organizing-service-documentation/</guid><category>Architecture</category><category>architecture</category><category>documentation</category><category>structure</category><category>wiki</category></item><item><title>Not sure if TOSCA will grow further</title><link>https://blog.siphos.be/2021/06/not-sure-if-TOSCA-will-grow-further/</link><description>&lt;p&gt;TOSCA is an OASIS open standard, and is an abbreviation for &lt;em&gt;Topology and
Orchestration Specification for Cloud Applications&lt;/em&gt;. It provides a
domain-specific language to describe how an application should be deployed
in the cloud (the topology), which and how many resources it needs, as well
as tasks to run when certain events occur (the orchestration). When I
initially came across this standard, I was (and still am) interested
in how far this goes. The promise of declaring an application (and even
bundling the necessary application artefacts) within a single asset and
then using this asset to deploy on whatever cloud is very appealing to
an architect. Especially in organizations that have a multi-cloud
strategy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 30 Jun 2021 14:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-30:/2021/06/not-sure-if-TOSCA-will-grow-further/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>TOSCA</category><category>OASIS</category><category>topology</category><category>orchestration</category><category>infrastructure</category><category>IaC</category><category>NFV</category></item><item><title>Integrating or customizing SaaS within your own cloud environment</title><link>https://blog.siphos.be/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</link><description>&lt;p&gt;Software as a Service (SaaS) solutions are often a quick way to get new
capabilities into an organization’s portfolio. Smaller SaaS solutions are
simple, web-based solutions which barely integrate with the organization’s
other solutions, besides the identity and access management (which is often
handled by federated authentication).&lt;/p&gt;
&lt;p&gt;More complex or intermediate solutions require more integration focus, and
a whole new market of Integration Platform as a Service (iPaaS) solutions
came up to facilitate cross-cloud integrations. But even without the iPaaS
offerings, integrations are often a mandatory part to leverage the benefits
of the newly activated SaaS solution.&lt;/p&gt;
&lt;p&gt;In this post I want to bring some thoughts on the integrations that might be
needed to support customizing a SaaS solution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 23 Jun 2021 15:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-23:/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>SaaS</category><category>integration</category><category>customization</category></item><item><title>An IT services overview</title><link>https://blog.siphos.be/2021/06/an-it-services-overview/</link><description>&lt;p&gt;My current role within the company I work for is “domain architect”, part
of the enterprise architects teams. The domain I am accountable for is 
“infrastructure”, which can be seen as a very broad one. Now, I’ve been
maintaining an overview of our IT services before I reached that role, 
mainly from an elaborate interest in the subject, as well as to optimize
my efficiency further.&lt;/p&gt;
&lt;p&gt;Becoming a domain architect allows me to use the insights I’ve since
gathered to try and give appropriate advice, but also now requires me to
maintain a domain architecture. This structure is going to be the starting
point of it, although it is not the true all and end all of what I would
consider a domain architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 14 Jun 2021 17:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-14:/2021/06/an-it-services-overview/</guid><category>Architecture</category><category>architecture</category><category>overview</category><category>service</category><category>landscape</category><category>catalog</category><category>capability</category></item><item><title>Virtualization vs abstraction</title><link>https://blog.siphos.be/2021/06/virtualization-vs-abstraction/</link><description>&lt;p&gt;When an organization has an extensively large, and heterogeneous
infrastructure, infrastructure architects will attempt to make itless
complex and chaotic by introducing and maintaining a certain degree of
standardization. While many might consider standardization as a
rationalization (standardizing on a single database technology, single
vendor for hardware, etc.), rationalization is only one of the many ways
in which standards can simplify such a degree of complexity.&lt;/p&gt;
&lt;p&gt;In this post, I'd like to point out two other, very common ways to
standardize the IT environment, without really considering a
rationalization: abstraction and virtualization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 03 Jun 2021 10:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-03:/2021/06/virtualization-vs-abstraction/</guid><category>Architecture</category><category>architecture</category><category>virtualization</category><category>abstraction</category></item></channel></rss>