<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Simplicity is a form of art... - Gentoo</title><link href="http://192.168.1.71:8000/" rel="alternate"></link><link href="http://192.168.1.71:8000/feeds/gentoo.atom.xml" rel="self"></link><id>http://192.168.1.71:8000/</id><updated>2017-08-22T19:04:00+02:00</updated><entry><title>Switch to Gentoo sources</title><link href="http://192.168.1.71:8000/2017/08/switch-to-gentoo-sources/" rel="alternate"></link><published>2017-08-22T19:04:00+02:00</published><updated>2017-08-22T19:04:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2017-08-22:/2017/08/switch-to-gentoo-sources/</id><summary type="html">&lt;p&gt;You've might already read it on the Gentoo news site, the &lt;a href="https://www.gentoo.org/news/2017/08/19/hardened-sources-removal.html"&gt;Hardened Linux kernel sources
are removed from the tree&lt;/a&gt; due to the &lt;a href="http://grsecurity.net/"&gt;grsecurity&lt;/a&gt; change where the grsecurity
Linux kernel patches are no longer provided for free. The decision was made due to
supportability and maintainability reasons.&lt;/p&gt;
&lt;p&gt;That doesn't mean that users who want to stick with the grsecurity related hardening
features are left alone. &lt;a href="https://blogs.gentoo.org/ago/2017/08/21/sys-kernel-grsecurity-sources-available/#utm_source=feed&amp;amp;utm_medium=feed&amp;amp;utm_campaign=feed"&gt;Agostino Sarubbo has started providing sys-kernel/grsecurity-sources&lt;/a&gt;
for the users who want to stick with it, as it is based on &lt;a href="https://github.com/minipli/linux-unofficial_grsec"&gt;minipli's unofficial patchset&lt;/a&gt;.
I seriously hope that the patchset will continue to be maintained and, who knows, even evolve further.&lt;/p&gt;
&lt;p&gt;Personally though, I'm switching to the Gentoo sources, and stick with SELinux as one of the
protection measures. And with that, I might even start using my NVidia graphics card a bit more, 
as that one hasn't been touched in several years (I have an Optimus-capable setup with both an
Intel integrated graphics card and an NVidia one, but all attempts to use nouveau for the one game
I like to play - minecraft - didn't work out that well).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;You've might already read it on the Gentoo news site, the &lt;a href="https://www.gentoo.org/news/2017/08/19/hardened-sources-removal.html"&gt;Hardened Linux kernel sources
are removed from the tree&lt;/a&gt; due to the &lt;a href="http://grsecurity.net/"&gt;grsecurity&lt;/a&gt; change where the grsecurity
Linux kernel patches are no longer provided for free. The decision was made due to
supportability and maintainability reasons.&lt;/p&gt;
&lt;p&gt;That doesn't mean that users who want to stick with the grsecurity related hardening
features are left alone. &lt;a href="https://blogs.gentoo.org/ago/2017/08/21/sys-kernel-grsecurity-sources-available/#utm_source=feed&amp;amp;utm_medium=feed&amp;amp;utm_campaign=feed"&gt;Agostino Sarubbo has started providing sys-kernel/grsecurity-sources&lt;/a&gt;
for the users who want to stick with it, as it is based on &lt;a href="https://github.com/minipli/linux-unofficial_grsec"&gt;minipli's unofficial patchset&lt;/a&gt;.
I seriously hope that the patchset will continue to be maintained and, who knows, even evolve further.&lt;/p&gt;
&lt;p&gt;Personally though, I'm switching to the Gentoo sources, and stick with SELinux as one of the
protection measures. And with that, I might even start using my NVidia graphics card a bit more, 
as that one hasn't been touched in several years (I have an Optimus-capable setup with both an
Intel integrated graphics card and an NVidia one, but all attempts to use nouveau for the one game
I like to play - minecraft - didn't work out that well).&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;How secure is Gentoo sources with SELinux?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is hard to just say that one kernel tree or another is safe(r) or not. Security is not something
one can get with a simple check-list. It is a matter of properly configuring services and systems,
patching it when needed, limiting expoosure and what not.&lt;/p&gt;
&lt;p&gt;A huge advantage of grsecurity was that it had very insightful and advanced protection measures
(many of them focusing on memory-related attacks), and prevented unwanted behavior from applications
(and users) in a very fine-grained manner. With SELinux, I can still prevent some unwanted behavior,
but it is important to know that SELinux and grsecurity's kernel hardening features are orthogonal
to each other. It is only the grsecurity RBAC model that is somewhat in competition with SELinux.&lt;/p&gt;
&lt;p&gt;SELinux is able to define and manage behavior between types. However, within a single type, many
actions are not governed at all. SELinux can manage which types (domains) are able to invoke which
system calls, but once a call is allowed, SELinux doesn't do any additional controls anymore.&lt;/p&gt;
&lt;p&gt;Loosing protection controls from grsecurity, as a security activist, is not something I like. But
on the other hand, I need to consider the wide SELinux using audience in Gentoo, who is most likely
going to switch to the gentoo sources as well (at least the majority of them).&lt;/p&gt;
&lt;p&gt;Gentoo sources is not insecure by itself, as are many other kernel sources. A huge advantage is that
the gentoo sources are well maintained, so any kernel vulnerability that gets reported and fixed will
receive the proper fix in the Gentoo sources quickly as well (and if you think it can go even faster,
consider &lt;a href="https://wiki.gentoo.org/wiki/Project:Security/Padawan_Process"&gt;becoming a Gentoo security padawan&lt;/a&gt;. And with SELinux enabled, some additional security
controls can be implemented (the efficacy of it depends on the quality of the policy).&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project"&gt;Kernel Self Protection Project&lt;/a&gt; also aims to improve the Linux kernel security, and immediately
through upstreamed and accepted patches. This means that the protection measures, once in the kernel,
should remain inside (awkward regressions notwithstanding). I truly hope that the KSPP moves forward.
In the mean time, read up on the &lt;a href="https://www.kernel.org/doc/html/latest/security/self-protection.html"&gt;Kernel Self-Protection&lt;/a&gt; document to learn more about how to harden
the Linux kernel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So that's it, just one less security control?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For now, there is no immediate substitute. But that doesn't mean that there is nothing one can do
to increase the secure state of a Linux desktop, workstation or even IoT device. Although remotely
executable exploits do pop up and exist, many vulnerabilities in the Linux kernel are mainly exploitable
through a local access pattern.&lt;/p&gt;
&lt;p&gt;That means that vulnerabilities often can only be exploited through a local invocation (or through chaining
by using other vulnerabilities - often in completely different applications or services - in order to
execute the local malware). Hence, hardening of the entire system is extremely important.&lt;/p&gt;
&lt;p&gt;Previously, I had an account with multiple SELinux roles assigned to it. Depending on what I wanted to
do, I transitioned to the right role (either through the &lt;code&gt;newrole&lt;/code&gt; command, or through &lt;code&gt;sudo&lt;/code&gt; which
has integrated SELinux support). With the switch to the gentoo sources, I decided to make it a bit
harder for malware on my system to work: i start using separate Linux accounts depending on the purpose
(which I call persona).&lt;/p&gt;
&lt;p&gt;Developing SELinux policies is now done on a separate account, managing remote systems through another
account (although my servers use multi-factor authentication so there was already some additional safeguard
in place there), handling my side-work with another account, playing games with another account, etc.&lt;/p&gt;
&lt;p&gt;It isn't that I don't trust SELinux for this (as each domain is well isolated and controlled). But SELinux
cannot prevent vulnerabilities within applications if the action/result of a succesfully exploited
vulnerability does not change the expected behavior of the application versus the other resources
on the system (and even there, the fine-grained approach of policies might not even be sufficiently
fine-grained, as SELinux uses labels, and many resources have the same label assigned).&lt;/p&gt;
&lt;p&gt;Suppose some malware is able to capture me giving in my password, or is trying to phish for it. By
using separate accounts (with separate passphrazes of course) the impact is reduced a bit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other things on the plate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The change to different accounts was one thing I wanted to establish before switching to a new kernel
tree. There are other aspects that I want to investigate in the near future as well though.&lt;/p&gt;
&lt;p&gt;First of all, I'm probably going to enable &lt;a href="https://github.com/Yubico/pam-u2f"&gt;U2F authentication&lt;/a&gt; on my workstation as well for
all interactive accounts. It has been on my list for quite some time, and quickly going through the
publicly available fora doesn't reveal any major challenges to do so. Build the PAM module, update
the PAM service configurations and you're done. Hopefully. ;-)&lt;/p&gt;
&lt;p&gt;Next, I'm going to play around a bit with &lt;a href="https://wiki.gentoo.org/wiki/AddressSanitizer"&gt;AddressSanitizer&lt;/a&gt;. ASAN was incompatible with grsecurity,
but now that that's out of the way, there's no reason not to investigate it further. I am not going
to enable it for the kernel though (as some KSPP implemented measures are incompatible with ASAN as well),
and probably not for my complete workstation yet (even though it is sufficiently powerful to handle the major
performance impact).&lt;/p&gt;
&lt;p&gt;I'm going to put some more focus on &lt;a href="https://wiki.gentoo.org/wiki/Integrity_Measurement_Architecture"&gt;Integrity Measurement Architecture support&lt;/a&gt;, although my main protection
measure with IMA - the TPM or Trusted Platform Module - has been fried (don't ask) so I can't use it anymore.
Perhaps I'm going to buy a very lightweight/small system with a TPM on it to continue development. We'll see.&lt;/p&gt;
&lt;p&gt;My current knowledge of &lt;a href="https://en.wikipedia.org/wiki/Seccomp"&gt;seccomp&lt;/a&gt; is fairly theoretical (with a few hands-on tutorials, but that's it). It
has been on my TODO list for some time to look in more depth to it. Perhaps this is the right time.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="hardened"></category><category term="grsecurity"></category><category term="selinux"></category></entry><entry><title>Handling certificates in Gentoo Linux</title><link href="http://192.168.1.71:8000/2017/03/handling-certificates-in-gentoo-linux/" rel="alternate"></link><published>2017-03-06T22:20:00+01:00</published><updated>2017-03-06T22:20:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2017-03-06:/2017/03/handling-certificates-in-gentoo-linux/</id><summary type="html">&lt;p&gt;I recently created a new article on the Gentoo Wiki titled &lt;a href="https://wiki.gentoo.org/wiki/Certificates"&gt;Certificates&lt;/a&gt;
which talks about how to handle certificate stores on Gentoo Linux. The write-up
of the article (which might still change name later, because it does not handle
&lt;em&gt;everything&lt;/em&gt; about certificates, mostly how to handle certificate stores) was
inspired by the observation that I had to adjust the certificate stores of both
Chromium and Firefox separately, even though they both use NSS.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I recently created a new article on the Gentoo Wiki titled &lt;a href="https://wiki.gentoo.org/wiki/Certificates"&gt;Certificates&lt;/a&gt;
which talks about how to handle certificate stores on Gentoo Linux. The write-up
of the article (which might still change name later, because it does not handle
&lt;em&gt;everything&lt;/em&gt; about certificates, mostly how to handle certificate stores) was
inspired by the observation that I had to adjust the certificate stores of both
Chromium and Firefox separately, even though they both use NSS.&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Certificates?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, when a secure communication is established from a browser to a site (or any
other interaction that uses SSL/TLS, but let's stay with the browser example for now)
part of the exchange is to ensure that the target site is actually the site it claims
to be. Don't want someone else to trick you into giving your e-mail credentials do you?&lt;/p&gt;
&lt;p&gt;To establish this, the certificate presented by the remote site is validated (alongside
other &lt;a href="https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_handshake"&gt;handshake steps&lt;/a&gt;).
A certificate contains a public key, as well as information about what the certificate can
be used for, and who (or what) the certificate represents. In case of a site, the identification
is (or should be) tied to the fully qualified domain name.&lt;/p&gt;
&lt;p&gt;Of course, everyone could create a certificate for accounts.google.com and try to trick you
into leaving your credentials. So, part of the validation of a certificate is to verify that
it is signed by a third party that you trust to only sign certificates that are trustworthy.
And to validate this signature, you hence need the certificate of this third party as well.&lt;/p&gt;
&lt;p&gt;So, what about this certificate? Well, turns out, this one is also often signed by
another certificate, and so on, until you reach the "top" of the certificate tree. This top
certificate is called the "root certificate". And because we still have to establish that this
certificate is trustworthy, we need another way to accomplish this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enter certificate stores&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The root certificates of these trusted third parties (well, let us call them "Certificate Authorities"
from now onward, because they &lt;a href="https://en.wikipedia.org/wiki/DigiNotar"&gt;sometimes will lose your trust&lt;/a&gt;)
need to be reachable by the browser. The location where they are stored in is (often) called
the truststore (a naming that I came across when dealing with Java and which stuck).&lt;/p&gt;
&lt;p&gt;So, what I wanted to accomplish was to remove a particular CA certificate from the certificate
store. I assumed that, because Chromium and Firefox both use NSS as the library to support their
cryptographic uses, they would also both use the store location at &lt;code&gt;~/.pki/nssdb&lt;/code&gt;. That was wrong.&lt;/p&gt;
&lt;p&gt;Another assumption I had was that NSS also uses the &lt;code&gt;/etc/pki/nssdb&lt;/code&gt; location as a system-wide one.
Wrong again (not that NSS doesn't allow this, but it seems that it is very much up to, and often
ignored by, the NSS-implementing applications).&lt;/p&gt;
&lt;p&gt;Oh, and I also assumed that there wouldn't be a hard-coded list in the application. Yup. Wrong again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How NSS tracks root CA&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Basically, NSS has a hard-coded root CA list inside the &lt;code&gt;libnssckbi.so&lt;/code&gt; file. On Gentoo, this
file is provided by the &lt;code&gt;dev-libs/nss&lt;/code&gt; package. Because it is hard-coded, it seemed like there
was little I could do to remove it, yet still through the user interfaces offered by Firefox and
Chromium I was able to remove the trust bits from the certificate.&lt;/p&gt;
&lt;p&gt;Turns out that Firefox (inside &lt;code&gt;~/.mozilla/firefox/*.default&lt;/code&gt;) and Chromium (inside &lt;code&gt;~/.pki/nssdb&lt;/code&gt;)
store the (modified) trust bits for those locations, so that the hardcoded list does not need to
be altered if all I want to do was revoke the trust on a specific CA. And it isn't that this hard-coded
list is a bad list: Mozilla has a &lt;a href="https://www.mozilla.org/en-US/about/governance/policies/security-group/certs/"&gt;CA Certificate Program&lt;/a&gt;
which controls the CAs that are accepted inside this store.&lt;/p&gt;
&lt;p&gt;Still, I find it sad that the system-wide location (at &lt;code&gt;/etc/pki/nssdb&lt;/code&gt;) is not by default used as
well (or I have something wrong on my system that makes it so). On a multi-user system, administrators
who want to have some control over the certificate stores might need to either use login scripts to
manipulate the user certificate stores, or adapt the user files directly currently.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="certificates"></category><category term="nss"></category></entry><entry><title>Custom CIL SELinux policies in Gentoo</title><link href="http://192.168.1.71:8000/2015/09/custom-cil-selinux-policies-in-gentoo/" rel="alternate"></link><published>2015-09-10T07:13:00+02:00</published><updated>2015-09-10T07:13:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-09-10:/2015/09/custom-cil-selinux-policies-in-gentoo/</id><summary type="html">&lt;p&gt;In Gentoo, we have been supporting &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;custom policy packages&lt;/a&gt;
for a while now. Unlike most other distributions, which focus on binary packages,
Gentoo has always supported source-based packages as default (although 
&lt;a href="https://wiki.gentoo.org/wiki/Binary_package_guide"&gt;binary packages&lt;/a&gt; are 
supported as well).&lt;/p&gt;
&lt;p&gt;A recent &lt;a href="https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=8f2aa45db35bbf3a74f8db09ece9edac60e79ee4"&gt;commit&lt;/a&gt;
now also allows CIL files to be used.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In Gentoo, we have been supporting &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;custom policy packages&lt;/a&gt;
for a while now. Unlike most other distributions, which focus on binary packages,
Gentoo has always supported source-based packages as default (although 
&lt;a href="https://wiki.gentoo.org/wiki/Binary_package_guide"&gt;binary packages&lt;/a&gt; are 
supported as well).&lt;/p&gt;
&lt;p&gt;A recent &lt;a href="https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=8f2aa45db35bbf3a74f8db09ece9edac60e79ee4"&gt;commit&lt;/a&gt;
now also allows CIL files to be used.&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Policy ebuilds, how they work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gentoo provides its own SELinux policy, based on the &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Reference_policy"&gt;reference policy&lt;/a&gt;, 
and provides per-module ebuilds (packages). For instance, the SELinux policy for
the &lt;a href="https://packages.gentoo.org/package/app-misc/screen"&gt;screen&lt;/a&gt; package is
provided by the &lt;a href="https://packages.gentoo.org/package/sec-policy/selinux-screen"&gt;sec-policy/selinux-screen&lt;/a&gt;
package.&lt;/p&gt;
&lt;p&gt;The package itself is pretty straight forward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Copyright 1999-2015 Gentoo Foundation&lt;/span&gt;
&lt;span class="c1"&gt;# Distributed under the terms of the GNU General Public License v2&lt;/span&gt;
&lt;span class="c1"&gt;# $Id$&lt;/span&gt;
&lt;span class="nv"&gt;EAPI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;IUSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MODS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;

inherit selinux-policy-2

&lt;span class="nv"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELinux policy for screen&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$PV&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;9999&lt;/span&gt;* &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nv"&gt;KEYWORDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nv"&gt;KEYWORDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~amd64 ~x86&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The real workhorse lays within a &lt;a href="https://devmanual.gentoo.org/eclass-writing/"&gt;Gentoo eclass&lt;/a&gt;,
something that can be seen as a library for ebuilds. It allows consolidation of functions and
activities so that a large set of ebuilds can be simplified. The more ebuilds are standardized,
the more development can be put inside an eclass instead of in the ebuilds. As a result, some
ebuilds are extremely simple, and the SELinux policy ebuilds are a good example of this.&lt;/p&gt;
&lt;p&gt;The eclass for SELinux policy ebuilds is called &lt;a href="https://devmanual.gentoo.org/eclass-reference/selinux-policy-2.eclass/index.html"&gt;selinux-policy-2.eclass&lt;/a&gt;
and holds a number of functionalities. One of these (the one we focus on right now)
is to support custom SELinux policy modules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Custom SELinux policy ebuilds&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Whenever a user has a SELinux policy that is not part of the Gentoo policy repository,
then the user might want to provide these policies through packages still. This has
the advantage that Portage (or whatever package manager is used) is aware of the
policies on the system, and proper dependencies can be built in.&lt;/p&gt;
&lt;p&gt;To use a custom policy, the user needs to create an ebuild which informs the eclass
not only about the module name (through the &lt;code&gt;MODS&lt;/code&gt; variable) but also about the
policy files themselves. These files are put in the &lt;code&gt;files/&lt;/code&gt; location of the ebuild,
and referred to through the &lt;code&gt;POLICY_FILES&lt;/code&gt; variable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Copyright 1999-2015 Gentoo Foundation&lt;/span&gt;
&lt;span class="c1"&gt;# Distributed under the terms of the GNU General Public License v2&lt;/span&gt;
&lt;span class="c1"&gt;# $Id$&lt;/span&gt;
&lt;span class="nv"&gt;EAPI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;IUSE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MODS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oracle&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;POLICY_FILES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oracle.te oracle.if oracle.fc&amp;quot;&lt;/span&gt;

inherit selinux-policy-2

&lt;span class="nv"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELinux policy for screen&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$PV&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;9999&lt;/span&gt;* &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nv"&gt;KEYWORDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nv"&gt;KEYWORDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~amd64 ~x86&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The eclass generally will try to build the policies, converting them into &lt;code&gt;.pp&lt;/code&gt;
files. With CIL, this is no longer needed. Instead, what we do is copy the &lt;code&gt;.cil&lt;/code&gt;
files straight into the location where we place the &lt;code&gt;.pp&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;From that point onwards, managing the &lt;code&gt;.cil&lt;/code&gt; files is similar to &lt;code&gt;.pp&lt;/code&gt; files.
They are loaded with &lt;code&gt;semodule -i&lt;/code&gt; and unloaded with &lt;code&gt;semodule -r&lt;/code&gt; when needed.&lt;/p&gt;
&lt;p&gt;Enabling CIL in our ebuilds is a small improvement (after the heavy workload
to support the 2.4 userspace) which allows Gentoo to stay ahead in the SELinux
world.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="cil"></category><category term="selinux"></category><category term="ebuild"></category><category term="eclass"></category></entry><entry><title>Maintaining packages and backporting</title><link href="http://192.168.1.71:8000/2015/09/maintaining-packages-and-backporting/" rel="alternate"></link><published>2015-09-02T20:33:00+02:00</published><updated>2015-09-02T20:33:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-09-02:/2015/09/maintaining-packages-and-backporting/</id><summary type="html">&lt;p&gt;A few days ago I committed a small update to &lt;code&gt;policycoreutils&lt;/code&gt;, a SELinux related
package that provides most of the management utilities for SELinux systems. The
fix was to get two patches (which are committed upstream) into the existing
release so that our users can benefit from the fixed issues without having to
wait for a new release.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;A few days ago I committed a small update to &lt;code&gt;policycoreutils&lt;/code&gt;, a SELinux related
package that provides most of the management utilities for SELinux systems. The
fix was to get two patches (which are committed upstream) into the existing
release so that our users can benefit from the fixed issues without having to
wait for a new release.&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Getting the patches&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To capture the patches, I used &lt;code&gt;git&lt;/code&gt; together with the commit id:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="go"&gt;~$ git format-patch -n -1 73b7ff41&lt;/span&gt;
&lt;span class="go"&gt;0001-Only-invoke-RPM-on-RPM-enabled-Linux-distributions.patch&lt;/span&gt;
&lt;span class="go"&gt;~$ git format-patch -n -1 4fbc6623&lt;/span&gt;
&lt;span class="go"&gt;0001-Set-self.sename-to-sename-after-calling-semanage_seu.patch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The two generated patch files contain all information about the commit. Thanks
to the &lt;code&gt;epatch&lt;/code&gt; support in the &lt;code&gt;eutils.eclass&lt;/code&gt;, these patch files are
immediately usable within Gentoo's ebuilds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updating the ebuilds&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The SELinux userspace ebuilds in Gentoo all have &lt;a href="http://blog.siphos.be/2015/06/live-selinux-userspace-ebuilds/"&gt;live ebuilds&lt;/a&gt;
available which are immediately usable for releases. The idea with those live
ebuilds is that we can simply copy them and commit in order to make a new release.&lt;/p&gt;
&lt;p&gt;So, in case of the patch backporting, the necessary patch files are first moved
into the &lt;code&gt;files/&lt;/code&gt; subdirectory of the package. Then, the live ebuild is updated
to use the new patches:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gu"&gt;@@ -88,6 +85,8 @@ src_prepare() {&lt;/span&gt;
                epatch &amp;quot;${FILESDIR}/0070-remove-symlink-attempt-fails-with-gentoo-sandbox-approach.patch&amp;quot;
                epatch &amp;quot;${FILESDIR}/0110-build-mcstrans-bug-472912.patch&amp;quot;
                epatch &amp;quot;${FILESDIR}/0120-build-failure-for-mcscolor-for-CONTEXT__CONTAINS.patch&amp;quot;
&lt;span class="gi"&gt;+               epatch &amp;quot;${FILESDIR}/0130-Only-invoke-RPM-on-RPM-enabled-Linux-distributions-bug-534682.patch&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+               epatch &amp;quot;${FILESDIR}/0140-Set-self.sename-to-sename-after-calling-semanage-bug-557370.patch&amp;quot;&lt;/span&gt;
        fi

        # rlpkg is more useful than fixfiles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The patches themselves do not apply for the live ebuilds themselves (they are
ignored there) as we want the live ebuilds to be as close to the upstream
project as possible. But because the ebuilds are immediately usable for
releases, we add the necessary information there first.&lt;/p&gt;
&lt;p&gt;Next, the new release is created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="go"&gt;~$ cp policycoreutils-9999.ebuild policycoreutils-2.4-r2.ebuild&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Testing the changes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The new release is then tested. I have a couple of scripts that I use
for automated testing. So first I update these scripts to also try out
the functionality that was failing before. On existing systems, these
tests should fail:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Running task semanage (Various semanage related operations).
  ...
    Executing step &amp;quot;perm_port_on   : Marking portage_t as a permissive domain                              &amp;quot; -&amp;gt; ok
    Executing step &amp;quot;perm_port_off  : Removing permissive mark from portage_t                               &amp;quot; -&amp;gt; ok
    Executing step &amp;quot;selogin_modify : Modifying a SELinux login definition                                  &amp;quot; -&amp;gt; failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, on a test system where the new package has been installed, the same
testset is executed (together with all other tests) to validate if the problem
is fixed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pushing out the new release&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Finally, with the fixes in and validated, the new release is pushed out (into
~arch first of course) and the bugs are marked as &lt;code&gt;RESOLVED:TEST-REQUEST&lt;/code&gt;. Users
can confirm that it works (which would move it to &lt;code&gt;VERIFIED:TEST-REQUEST&lt;/code&gt;) or
we stabilize it after the regular testing period is over (which moves it to
&lt;code&gt;RESOLVED:FIXED&lt;/code&gt; or &lt;code&gt;VERIFIED:FIXED&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I do still have to get used to Gentoo using git as its repository now. The
&lt;a href="https://wiki.gentoo.org/wiki/Gentoo_git_workflow"&gt;workflow&lt;/a&gt; to use is
documented though. Luckily, because I often get that the &lt;code&gt;git push&lt;/code&gt; fails
(due to changes to the tree since my last pull). So I need to run &lt;code&gt;git
pull --rebase=preserve&lt;/code&gt; followed by &lt;code&gt;repoman full&lt;/code&gt; and then the push again
sufficiently quick after each other).&lt;/p&gt;
&lt;p&gt;This simple flow is easy to get used to. Thanks to the existing foundation
for package maintenance (such as &lt;code&gt;epatch&lt;/code&gt; for patching, live ebuilds that
can be immediately used for releases and the ability to just cherry pick
patches towards our repository) we can serve updates with just a few minutes
of work.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="ebuild"></category><category term="patching"></category></entry><entry><title>Slowly converting from GuideXML to HTML</title><link href="http://192.168.1.71:8000/2015/08/slowly-converting-from-guidexml-to-html/" rel="alternate"></link><published>2015-08-25T11:30:00+02:00</published><updated>2015-08-25T11:30:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-08-25:/2015/08/slowly-converting-from-guidexml-to-html/</id><summary type="html">&lt;p&gt;Gentoo has removed its support of the older GuideXML format in favor of using
the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt; and a new content management system
for the main site (or is it static pages, I don't have the faintest idea to be
honest). I do still have a few GuideXML pages in my development space, which I
am going to move to HTML pretty soon.&lt;/p&gt;
&lt;p&gt;In order to do so, I make use of the &lt;a href="https://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/xsl/guidexml2wiki.xsl?view=log"&gt;guidexml2wiki&lt;/a&gt;
stylesheet I &lt;a href="http://blog.siphos.be/2013/02/transforming-guidexml-to-wiki/"&gt;developed&lt;/a&gt;.
But instead of migrating it to wiki syntax, I want to end with HTML.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Gentoo has removed its support of the older GuideXML format in favor of using
the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt; and a new content management system
for the main site (or is it static pages, I don't have the faintest idea to be
honest). I do still have a few GuideXML pages in my development space, which I
am going to move to HTML pretty soon.&lt;/p&gt;
&lt;p&gt;In order to do so, I make use of the &lt;a href="https://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/xsl/guidexml2wiki.xsl?view=log"&gt;guidexml2wiki&lt;/a&gt;
stylesheet I &lt;a href="http://blog.siphos.be/2013/02/transforming-guidexml-to-wiki/"&gt;developed&lt;/a&gt;.
But instead of migrating it to wiki syntax, I want to end with HTML.&lt;/p&gt;


&lt;p&gt;So what I do is first convert the file from GuideXML to MediaWiki with &lt;code&gt;xsltproc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, I use &lt;code&gt;pandoc&lt;/code&gt; to convert this to restructured text. The idea is that the main
pages on my devpage are now restructured text based. I was hoping to use markdown, but
the conversion from markdown to HTML is not what I hoped it was.&lt;/p&gt;
&lt;p&gt;The restructured text is then converted to HTML using &lt;code&gt;rst2html.py&lt;/code&gt;. In the end,
I use the following function (for conversion, once):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Convert GuideXML to RestructedText and to HTML&lt;/span&gt;
gxml2html&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;%%.xml&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;# Convert to Mediawiki syntax&lt;/span&gt;
  xsltproc ~/dev-cvs/gentoo/xml/htdocs/xsl/guidexml2wiki.xsl &lt;span class="nv"&gt;$1&lt;/span&gt; &amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.mediawiki

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.mediawiki &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;# Convert to restructured text&lt;/span&gt;
    pandoc -f mediawiki -t rst -s -S -o &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.rst &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.mediawiki&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.rst &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;# Use your own stylesheet links (use full https URLs for this)&lt;/span&gt;
    rst2html.py  --stylesheet&lt;span class="o"&gt;=&lt;/span&gt;link-to-bootstrap.min.css,link-to-tyrian.min.css --link-stylesheet &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.rst &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basefile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.html
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Is it perfect? No, but &lt;a href="http://dev.gentoo.org/~swift/snapshots/"&gt;it works&lt;/a&gt;.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="guidexml"></category><category term="xml"></category><category term="xslt"></category><category term="rst"></category><category term="mediawiki"></category><category term="html"></category></entry><entry><title>Finding a good compression utility</title><link href="http://192.168.1.71:8000/2015/08/finding-a-good-compression-utility/" rel="alternate"></link><published>2015-08-13T19:15:00+02:00</published><updated>2015-08-13T19:15:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-08-13:/2015/08/finding-a-good-compression-utility/</id><summary type="html">&lt;p&gt;I recently came across a &lt;a href="http://catchchallenger.first-world.info//wiki/Quick_Benchmark:_Gzip_vs_Bzip2_vs_LZMA_vs_XZ_vs_LZ4_vs_LZO"&gt;wiki page&lt;/a&gt;
written by &lt;a href="http://catchchallenger.first-world.info/wiki/User:Alpha_one_x86"&gt;Herman Brule&lt;/a&gt;
which gives a quick benchmark on a couple of compression methods / algorithms.
It gave me the idea of writing a quick script that tests out a wide number of
compression utilities available in Gentoo (usually through the &lt;code&gt;app-arch&lt;/code&gt;
category), with also a number of options (in case multiple options are
possible).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I recently came across a &lt;a href="http://catchchallenger.first-world.info//wiki/Quick_Benchmark:_Gzip_vs_Bzip2_vs_LZMA_vs_XZ_vs_LZ4_vs_LZO"&gt;wiki page&lt;/a&gt;
written by &lt;a href="http://catchchallenger.first-world.info/wiki/User:Alpha_one_x86"&gt;Herman Brule&lt;/a&gt;
which gives a quick benchmark on a couple of compression methods / algorithms.
It gave me the idea of writing a quick script that tests out a wide number of
compression utilities available in Gentoo (usually through the &lt;code&gt;app-arch&lt;/code&gt;
category), with also a number of options (in case multiple options are
possible).&lt;/p&gt;


&lt;p&gt;The currently supported packages are:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;app-arch/bloscpack      app-arch/bzip2          app-arch/freeze
app-arch/gzip           app-arch/lha            app-arch/lrzip
app-arch/lz4            app-arch/lzip           app-arch/lzma
app-arch/lzop           app-arch/mscompress     app-arch/p7zip
app-arch/pigz           app-arch/pixz           app-arch/plzip
app-arch/pxz            app-arch/rar            app-arch/rzip
app-arch/xar            app-arch/xz-utils       app-arch/zopfli
app-arch/zpaq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script should keep the best compression information: duration, compression
ratio, compression command, as well as the compressed file itself.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finding the "best" compression&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is not my intention to find the most optimal compression, as that would
require heuristic optimizations (which has triggered my interest in seeking
such software, or writing it myself) while trying out various optimization
parameters.&lt;/p&gt;
&lt;p&gt;No, what I want is to find the "best" compression for a given file, with "best"
being either&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;most reduced size (which I call &lt;em&gt;compression delta&lt;/em&gt; in my script)&lt;/li&gt;
&lt;li&gt;best reduction obtained per time unit (which I call the &lt;em&gt;efficiency&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For me personally, I think I would use it for the various raw image files that
I have through the photography hobby. Those image files are difficult to
compress (the Nikon DS3200 I use is an entry-level camera which applies
lossy compression already for its raw files) but their total size is considerable,
and it would allow me to better use the storage I have available both on my
laptop (which is SSD-only) as well as backup server.&lt;/p&gt;
&lt;p&gt;But next to the best compression ratio, the efficiency is also an important
metric as it shows how efficient the algorithm works in a certain time aspect.
If one compression method yields 80% reduction in 5 minutes, and another one
yields 80,5% in 45 minutes, then I might want to prefer the first one even
though that is not the best compression at all.&lt;/p&gt;
&lt;p&gt;Although the script could be used to get the most compression (without
resolving to an optimization algorithm for the compression commands) for 
each file, this is definitely not the use case. A single run can take hours
for files that are compressed in a handful of seconds. But it can show the
best algorithms for a particular file type (for instance, do a few runs on
a couple of raw image files and see which method is most succesful).&lt;/p&gt;
&lt;p&gt;Another use case I'm currently looking into is how much improvement I can
get when multiple files (all raw image files) are first grouped in a single
archive (&lt;code&gt;.tar&lt;/code&gt;). Theoretically, this should improve the compression, but
by how much?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How the script works&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The script does not contain much intelligence. It iterates over a wide set of
compression commands that I tested out, checks the final compressed file size,
and if it is better than a previous one it keeps this compressed file (and
its statistics).&lt;/p&gt;
&lt;p&gt;I tried to group some of the compressions together based on the algorithm used,
but as I don't really know the details of the algorithms (it's based on manual
pages and internet sites) and some of them combine multiple algorithms, it is
more of a high-level selection than anything else.&lt;/p&gt;
&lt;p&gt;The script can also only run the compressions of a single application (which I
use when I'm fine-tuning the parameter runs).&lt;/p&gt;
&lt;p&gt;A run shows something like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Original file (test.nef) size 20958430 bytes
      package name                                                 command      duration                   size compr.Δ effic.:
      ------------                                                 -------      --------                   ---- ------- -------
app-arch/bloscpack                                               blpk -n 4           0.1               20947097 0.00054 0.00416
app-arch/bloscpack                                               blpk -n 8           0.1               20947097 0.00054 0.00492
app-arch/bloscpack                                              blpk -n 16           0.1               20947097 0.00054 0.00492
    app-arch/bzip2                                                   bzip2           2.0               19285616 0.07982 0.03991
    app-arch/bzip2                                                bzip2 -1           2.0               19881886 0.05137 0.02543
    app-arch/bzip2                                                bzip2 -2           1.9               19673083 0.06133 0.03211
...
    app-arch/p7zip                                      7za -tzip -mm=PPMd           5.9               19002882 0.09331 0.01592
    app-arch/p7zip                             7za -tzip -mm=PPMd -mmem=24           5.7               19002882 0.09331 0.01640
    app-arch/p7zip                             7za -tzip -mm=PPMd -mmem=25           6.4               18871933 0.09955 0.01551
    app-arch/p7zip                             7za -tzip -mm=PPMd -mmem=26           7.7               18771632 0.10434 0.01364
    app-arch/p7zip                             7za -tzip -mm=PPMd -mmem=27           9.0               18652402 0.11003 0.01224
    app-arch/p7zip                             7za -tzip -mm=PPMd -mmem=28          10.0               18521291 0.11628 0.01161
    app-arch/p7zip                                       7za -t7z -m0=PPMd           5.7               18999088 0.09349 0.01634
    app-arch/p7zip                                7za -t7z -m0=PPMd:mem=24           5.8               18999088 0.09349 0.01617
    app-arch/p7zip                                7za -t7z -m0=PPMd:mem=25           6.5               18868478 0.09972 0.01534
    app-arch/p7zip                                7za -t7z -m0=PPMd:mem=26           7.5               18770031 0.10442 0.01387
    app-arch/p7zip                                7za -t7z -m0=PPMd:mem=27           8.6               18651294 0.11008 0.01282
    app-arch/p7zip                                7za -t7z -m0=PPMd:mem=28          10.6               18518330 0.11643 0.01100
      app-arch/rar                                                     rar           0.9               20249470 0.03383 0.03980
      app-arch/rar                                                 rar -m0           0.0               20958497 -0.00000        -0.00008
      app-arch/rar                                                 rar -m1           0.2               20243598 0.03411 0.14829
      app-arch/rar                                                 rar -m2           0.8               20252266 0.03369 0.04433
      app-arch/rar                                                 rar -m3           0.8               20249470 0.03383 0.04027
      app-arch/rar                                                 rar -m4           0.9               20248859 0.03386 0.03983
      app-arch/rar                                                 rar -m5           0.8               20248577 0.03387 0.04181
    app-arch/lrzip                                                lrzip -z          13.1               19769417 0.05673 0.00432
     app-arch/zpaq                                                    zpaq           0.2               20970029 -0.00055        -0.00252
The best compression was found with 7za -t7z -m0=PPMd:mem=28.
The compression delta obtained was 0.11643 within 10.58 seconds.
This file is now available as test.nef.7z.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the above example, the test file was around 20 MByte. The best compression
compression command that the script found was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ 7za -t7z -m0=PPMd:mem=28 a test.nef.7z test.nef
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The resulting file (&lt;code&gt;test.nef.7z&lt;/code&gt;) is 18 MByte, a reduction of 11,64%. The
compression command took almost 11 seconds to do its thing, which gave an
efficiency rating of 0,011, which is definitely not a fast one.&lt;/p&gt;
&lt;p&gt;Some other algorithms don't do bad either with a better efficiency. For
instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   app-arch/pbzip2                                                  pbzip2           0.6               19287402 0.07973 0.13071
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this case, the &lt;code&gt;pbzip2&lt;/code&gt; command got almost 8% reduction in less than a
second, which is considerably more efficient than the 11-seconds long &lt;code&gt;7za&lt;/code&gt;
run.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Want to try it out yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I've pushed the script to my &lt;a href="https://github.com/sjvermeu/small.coding/tree/master/sw_comprbest"&gt;github&lt;/a&gt;
location. Do a quick review of the code first (to see that I did not include
anything malicious) and then execute it to see how it works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ sw_comprbest -h
Usage: sw_comprbest --infile=&amp;lt;inputfile&amp;gt; [--family=&amp;lt;family&amp;gt;[,...]] [--command=&amp;lt;cmd&amp;gt;]
       sw_comprbest -i &amp;lt;inputfile&amp;gt; [-f &amp;lt;family&amp;gt;[,...]] [-c &amp;lt;cmd&amp;gt;]

Supported families: blosc bwt deflate lzma ppmd zpaq. These can be provided comma-separated.
Command is an additional filter - only the tests that use this base command are run.

The output shows
  - The package (in Gentoo) that the command belongs to
  - The command run
  - The duration (in seconds)
  - The size (in bytes) of the resulting file
  - The compression delta (percentage) showing how much is reduced (higher is better)
  - The efficiency ratio showing how much reduction (percentage) per second (higher is better)

When the command supports multithreading, we use the number of available cores on the system (as told by /proc/cpuinfo).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For instance, to try it out against a PDF file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ sw_comprbest -i MEA6-Sven_Vermeulen-Research_Summary.pdf
Original file (MEA6-Sven_Vermeulen-Research_Summary.pdf) size 117763 bytes
...
The best compression was found with zopfli --deflate.
The compression delta obtained was 0.00982 within 0.19 seconds.
This file is now available as MEA6-Sven_Vermeulen-Research_Summary.pdf.deflate.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So in this case, the resulting file is hardly better compressed - the PDF
itself is already compressed. Let's try it against the uncompressed PDF:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ pdftk MEA6-Sven_Vermeulen-Research_Summary.pdf output test.pdf uncompress
~$ sw_comprbest -i test.pdf
Original file (test.pdf) size 144670 bytes
...
The best compression was found with lrzip -z.
The compression delta obtained was 0.27739 within 0.18 seconds.
This file is now available as test.pdf.lrz.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is somewhat better:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ ls -l MEA6-Sven_Vermeulen-Research_Summary.pdf* test.pdf*
-rw-r--r--. 1 swift swift 117763 Aug  7 14:32 MEA6-Sven_Vermeulen-Research_Summary.pdf
-rw-r--r--. 1 swift swift 116606 Aug  7 14:32 MEA6-Sven_Vermeulen-Research_Summary.pdf.deflate
-rw-r--r--. 1 swift swift 144670 Aug  7 14:34 test.pdf
-rw-r--r--. 1 swift swift 104540 Aug  7 14:35 test.pdf.lrz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The resulting file is 11,22% reduced from the original one.&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category><category term="compression"></category></entry><entry><title>Live SELinux userspace ebuilds</title><link href="http://192.168.1.71:8000/2015/06/live-selinux-userspace-ebuilds/" rel="alternate"></link><published>2015-06-10T20:07:00+02:00</published><updated>2015-06-10T20:07:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-06-10:/2015/06/live-selinux-userspace-ebuilds/</id><summary type="html">&lt;p&gt;In between courses, I pushed out live ebuilds for the SELinux userspace
applications: libselinux, policycoreutils, libsemanage, libsepol,
sepolgen, checkpolicy and secilc. These live ebuilds (with Gentoo
version 9999) pull in the current development code of the &lt;a href="https://github.com/SELinuxProject/selinux"&gt;SELinux
userspace&lt;/a&gt; so that developers
and contributors can already work with in-progress code developments as
well as see how they work on a Gentoo platform.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In between courses, I pushed out live ebuilds for the SELinux userspace
applications: libselinux, policycoreutils, libsemanage, libsepol,
sepolgen, checkpolicy and secilc. These live ebuilds (with Gentoo
version 9999) pull in the current development code of the &lt;a href="https://github.com/SELinuxProject/selinux"&gt;SELinux
userspace&lt;/a&gt; so that developers
and contributors can already work with in-progress code developments as
well as see how they work on a Gentoo platform.&lt;/p&gt;


&lt;p&gt;That being said, I do not recommend using the live ebuilds for anyone
else except developers and contributors in development zones (definitely
not on production). One of the reasons is that the ebuilds do not apply
Gentoo-specific patches to the ebuilds. I would also like to remove the
Gentoo-specific manipulations that we do, such as small Makefile
adjustments, but let's start with just ignoring the Gentoo patches.&lt;/p&gt;
&lt;p&gt;Dropping the patches makes sure that we track upstream libraries and
userspace closely, and allows developers to try and send out patches to
the SELinux project to fix Gentoo related build problems. But as not all
packages can be deployed successfully on a Gentoo system some patches
need to be applied anyway. For this, users can drop the necessary
patches inside &lt;code&gt;/etc/portage/patches&lt;/code&gt; as all userspace ebuilds use the
&lt;em&gt;epatch_user&lt;/em&gt; method.&lt;/p&gt;
&lt;p&gt;Finally, observant users will notice that "secilc" is also provided.
This is a new package, which is probably going to have an official
release with a new userspace release. It allows for building CIL-based
SELinux policy code, and was one of the drivers for me to create the
live ebuilds as I'm experimenting with the CIL constructions. So expect
more on that later.&lt;/p&gt;</content><category term="Gentoo"></category><category term="cil"></category><category term="Gentoo"></category><category term="selinux"></category><category term="userspace"></category></entry><entry><title>Moving closer to 2.4 stabilization</title><link href="http://192.168.1.71:8000/2015/04/moving-closer-to-2-4-stabilization/" rel="alternate"></link><published>2015-04-27T19:18:00+02:00</published><updated>2015-04-27T19:18:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-04-27:/2015/04/moving-closer-to-2-4-stabilization/</id><summary type="html">&lt;p&gt;The &lt;a href="https://github.com/SELinuxProject/selinux/wiki"&gt;SELinux userspace&lt;/a&gt;
project has released version 2.4 in february this year, after release
candidates have been tested for half a year. After its release, we at
the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened&lt;/a&gt;
project have been working hard to integrate it within Gentoo. This
effort has been made a bit more difficult …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="https://github.com/SELinuxProject/selinux/wiki"&gt;SELinux userspace&lt;/a&gt;
project has released version 2.4 in february this year, after release
candidates have been tested for half a year. After its release, we at
the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened&lt;/a&gt;
project have been working hard to integrate it within Gentoo. This
effort has been made a bit more difficult due to the migration of the
policy store from one location to another while at the same time
switching to HLL- and CIL based builds.&lt;/p&gt;
&lt;p&gt;Lately, 2.4 itself has been pretty stable, and we're focusing on the
proper migration from 2.3 to 2.4. The SELinux policy has been adjusted
to allow the migrations to work, and a few final fixes are being tested
so that we can safely transition our stable users from 2.3 to 2.4.
Hopefully we'll be able to stabilize the userspace this month or
beginning of next month.&lt;/p&gt;</content><category term="Gentoo"></category><category term="2.4"></category><category term="Gentoo"></category><category term="hardened"></category><category term="selinux"></category><category term="userspace"></category></entry><entry><title>Trying out Pelican, part one</title><link href="http://192.168.1.71:8000/2015/03/trying-out-pelican-part-one/" rel="alternate"></link><published>2015-03-06T20:02:00+01:00</published><updated>2015-03-06T20:02:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-03-06:/2015/03/trying-out-pelican-part-one/</id><summary type="html">&lt;p&gt;One of the goals I've set myself to do this year (not as a new year
resolution though, I *really* want to accomplish this ;-) is to move
my blog from Wordpress to a statically built website. And
&lt;a href="http://docs.getpelican.com/en/3.5.0/"&gt;Pelican&lt;/a&gt; looks to be a good
solution to do so. It's based on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the goals I've set myself to do this year (not as a new year
resolution though, I *really* want to accomplish this ;-) is to move
my blog from Wordpress to a statically built website. And
&lt;a href="http://docs.getpelican.com/en/3.5.0/"&gt;Pelican&lt;/a&gt; looks to be a good
solution to do so. It's based on Python, which is readily available and
supported on Gentoo, and is quite readable. Also, it looks to be very
active in development and support. And also: it supports taking data
from an existing Wordpress installation, so that none of the posts are
lost (with some rounding error that's inherit to such migrations of
course).&lt;/p&gt;
&lt;p&gt;Before getting Pelican ready (which is available through Gentoo btw) I
also needed to install &lt;a href="http://johnmacfarlane.net/pandoc/"&gt;pandoc&lt;/a&gt;, and
that became more troublesome than expected. While installing &lt;code&gt;pandoc&lt;/code&gt; I
got hit by its massive amount of dependencies towards &lt;code&gt;dev-haskell/*&lt;/code&gt;
packages, and many of those packages really failed to install. It does
some internal dependency checking and fails, informing me to run
&lt;code&gt;haskell-updater&lt;/code&gt;. Sadly, multiple re-runs of said command did not
resolve the issue. In fact, it wasn't until I hit a &lt;a href="http://forums.gentoo.org/viewtopic-p-7712250.html?sid=7707e62264dadf8bad4b8a1273b19f77"&gt;forum post about
the same
issue&lt;/a&gt;
that a first step to a working solution was found.&lt;/p&gt;
&lt;p&gt;It turns out that the &lt;code&gt;~arch&lt;/code&gt; versions of the haskell packages are
better working. So I enabled &lt;code&gt;dev-haskell/*&lt;/code&gt; in my
&lt;code&gt;package.accept_keywords&lt;/code&gt; file. And then started updating the
packages... which also failed. Then I ran &lt;code&gt;haskell-updater&lt;/code&gt; multiple
times, but that also failed. After a while, I had to run the following
set of commands (in random order) just to get everything to build fine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# emerge -u $(qlist -IC dev-haskell) --keep-going
~# for n in $(qlist -IC dev-haskell); do emerge -u $n; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It took quite some reruns, but it finally got through. I never thought I
had this much Haskell-related packages installed on my system (89
packages here to be exact), as I never intended to do any Haskell
development since I left the university. Still, I finally got &lt;code&gt;pandoc&lt;/code&gt;
to work. So, on to the migration of my Wordpress site... I thought.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a good time to ask for stabilization requests (I'll look into
it myself as well of course) but also to see if you can help out our
arch testing teams to support the stabilization requests on Gentoo! We
need you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I started with the &lt;a href="http://docs.getpelican.com/en/latest/importer.html"&gt;official docs on
importing&lt;/a&gt;. Looks
promising, but it didn't turn out too well for me. Importing was okay,
but then immediately building the site again resulted in issues about
wrong arguments (file names being interpreted as an argument name or
function when an underscore was used) and interpretation of code inside
the posts. Then I found Jason Antman's &lt;a href="http://blog.jasonantman.com/2014/02/converting-wordpress-posts-to-pelican-markdown/"&gt;converting wordpress posts to
pelican
markdown&lt;/a&gt;
post to inform me I had to try using markdown instead of restructured
text. And lo and behold - that's much better.&lt;/p&gt;
&lt;p&gt;The first builds look promising. Of all the posts that I made on
Wordpress, only one gives a build failure. The next thing to investigate
is theming, as well as seeing how good the migration goes (it isn't
because there are no errors otherwise that the migration is successful
of course) so that I know how much manual labor I have to take into
consideration when I finally switch (right now, I'm still running
Wordpress).&lt;/p&gt;</content><category term="Gentoo"></category><category term="blog"></category><category term="Gentoo"></category><category term="haskell"></category><category term="pandoc"></category><category term="pelican"></category><category term="wordpress"></category></entry><entry><title>Have dhcpcd wait before backgrounding</title><link href="http://192.168.1.71:8000/2015/02/have-dhcpcd-wait-before-backgrounding/" rel="alternate"></link><published>2015-02-08T16:50:00+01:00</published><updated>2015-02-08T16:50:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-02-08:/2015/02/have-dhcpcd-wait-before-backgrounding/</id><summary type="html">&lt;p&gt;Many of my systems use DHCP for obtaining IP addresses. Even though they
all receive a static IP address, it allows me to have them moved over
(migrations), use TFTP boot, cloning (in case of quick testing), etc.
But one of the things that was making my efforts somewhat more …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Many of my systems use DHCP for obtaining IP addresses. Even though they
all receive a static IP address, it allows me to have them moved over
(migrations), use TFTP boot, cloning (in case of quick testing), etc.
But one of the things that was making my efforts somewhat more difficult
was that the &lt;code&gt;dhcpcd&lt;/code&gt; service continued (the &lt;code&gt;dhcpcd&lt;/code&gt; daemon immediately
went in the background) even though no IP address was received yet.
Subsequent service scripts that required a working network connection
failed to start then.&lt;/p&gt;
&lt;p&gt;The solution is to configure &lt;code&gt;dhcpcd&lt;/code&gt; to wait for an IP address. This is
done through the &lt;code&gt;-w&lt;/code&gt; option, or the &lt;code&gt;waitip&lt;/code&gt; instruction in the
&lt;code&gt;dhcpcd.conf&lt;/code&gt; file. With that in place, the service script now waits
until an IP address is assigned.&lt;/p&gt;</content><category term="Gentoo"></category><category term="dhcp"></category><category term="dhcpcd"></category><category term="Gentoo"></category></entry><entry><title>Old Gentoo system? Not a problem...</title><link href="http://192.168.1.71:8000/2015/01/old-gentoo-system-not-a-problem/" rel="alternate"></link><published>2015-01-21T23:05:00+01:00</published><updated>2015-01-21T23:05:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2015-01-21:/2015/01/old-gentoo-system-not-a-problem/</id><summary type="html">&lt;p&gt;If you have a very old Gentoo system that you want to upgrade, you might
have some issues with too old software and Portage which can't just
upgrade to a recent state. Although many methods exist to work around
it, one that I have found to be very useful is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you have a very old Gentoo system that you want to upgrade, you might
have some issues with too old software and Portage which can't just
upgrade to a recent state. Although many methods exist to work around
it, one that I have found to be very useful is to have access to old
Portage snapshots. It often allows the administrator to upgrade the
system in stages (say in 6-months blocks), perhaps not the entire world
but at least the system set.&lt;/p&gt;
&lt;p&gt;Finding old snapshots might be difficult though, so at one point I
decided to create &lt;a href="http://dev.gentoo.org/~swift/snapshots/"&gt;a list of old
snapshots&lt;/a&gt;, two months apart,
together with the GPG signature (so people can verify that the snapshot
was not tampered with by me in an attempt to create a Gentoo botnet). I
haven't needed it in a while anymore, but I still try to update the list
every two months, which I just did with the snapshot of January 20th
this year.&lt;/p&gt;
&lt;p&gt;I hope it at least helps a few other admins out there.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="portage"></category><category term="snapshot"></category><category term="tree"></category></entry><entry><title>Gentoo Handbooks almost moved to wiki</title><link href="http://192.168.1.71:8000/2014/12/gentoo-handbooks-almost-moved-to-wiki/" rel="alternate"></link><published>2014-12-12T17:35:00+01:00</published><updated>2014-12-12T17:35:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-12-12:/2014/12/gentoo-handbooks-almost-moved-to-wiki/</id><summary type="html">&lt;p&gt;Content-wise, the move is done. I've done a few checks on the content to
see if the structure still holds, translations are enabled on all pages,
the use of partitions is sufficiently consistent for each architecture,
and so on. The result can be seen on &lt;a href="https://wiki.gentoo.org/wiki/Handbook:Main_Page"&gt;the gentoo handbook main
page …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Content-wise, the move is done. I've done a few checks on the content to
see if the structure still holds, translations are enabled on all pages,
the use of partitions is sufficiently consistent for each architecture,
and so on. The result can be seen on &lt;a href="https://wiki.gentoo.org/wiki/Handbook:Main_Page"&gt;the gentoo handbook main
page&lt;/a&gt;, from which the
various architectural handbooks are linked.&lt;/p&gt;
&lt;p&gt;I sent a &lt;a href="http://thread.gmane.org/gmane.linux.gentoo.project/4141"&gt;sort-of
announcement&lt;/a&gt;
to the gentoo-project mailinglist (which also includes the motivation of
the move). If there are no objections, I will update the current
handbooks to link to the wiki ones, as well as update the links on the
website (and in wiki articles) to point to the wiki.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="handbook"></category><category term="wiki"></category></entry><entry><title>Sometimes I forget how important communication is</title><link href="http://192.168.1.71:8000/2014/12/sometimes-i-forget-how-important-communication-is/" rel="alternate"></link><published>2014-12-10T20:38:00+01:00</published><updated>2014-12-10T20:38:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-12-10:/2014/12/sometimes-i-forget-how-important-communication-is/</id><summary type="html">&lt;p&gt;Free software (and documentation) developers don't always have all the
time they want. Instead, they grab whatever time they have to do what
they believe is the most productive - be it documentation editing,
programming, updating ebuilds, SELinux policy improvements and what not.
But they often don't take the time to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Free software (and documentation) developers don't always have all the
time they want. Instead, they grab whatever time they have to do what
they believe is the most productive - be it documentation editing,
programming, updating ebuilds, SELinux policy improvements and what not.
But they often don't take the time to communicate. And communication is
important.&lt;/p&gt;
&lt;p&gt;For one, communication is needed to reach a larger audience than those
that follow the commit history in whatever repository work is being
done. Yes, there are developers that follow &lt;a href="http://news.gmane.org/gmane.linux.gentoo.cvs"&gt;each
commit&lt;/a&gt;, but development
isn't just done for developers, it is also for end users. And end users
deserve frequent updates and feedback. Be it through blog posts, Google+
posts, tweets or instragrams (well, I'm not sure how to communicate a
software or documentation change through Instagram, but I'm sure people
find lots of creative ways to do so), telling the broader world what has
changed is important.&lt;/p&gt;
&lt;p&gt;Perhaps a (silent or not) user was waiting for this change. Perhaps he
or she is even actually trying to fix things himself/herself but is
struggling with it, and would really benefit (time-wise) from a quick
fix. Without communicating about the change, (s)he does not know that no
further attempts are needed, actually reducing the efficiency in
overall.&lt;/p&gt;
&lt;p&gt;But communication is just one-way. Better is to get feedback as well. In
that sense, communication is just one part of the feedback loop - once
developers receive feedback on what they are doing (or did recently)
they might even improve results faster. With feedback loops, the wisdom
of the crowd (in the positive sense) can be used to improve solutions
beyond what the developer originally intended. And even a simple "cool"
and "I like" is good information for a developer or contributor.&lt;/p&gt;
&lt;p&gt;Still, I often forget to do it - or don't have the time to focus on
communication. And that's bad. So, let me quickly state what things I
forgot to communicate more broadly about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href="http://comments.gmane.org/gmane.linux.gentoo.project/4129"&gt;new
    developer&lt;/a&gt;
    joined the Gentoo ranks: Jason Zaman. Now developers join Gentoo
    more often than just once in a while, but Jason is one of
    my "recruits". In a sense, he became a developer because I was tired
    of pulling his changes in and proxy-committing stuff. Of course,
    that's only half the truth; he is also a very active contributor in
    other areas (and was already a maintainer for a few packages through
    the proxy-maintainer project) and is a tremendous help in the Gentoo
    Hardened project. So welcome onboard Jason (or perfinion as he calls
    himself online).&lt;/li&gt;
&lt;li&gt;I've started with &lt;a href="https://wiki.gentoo.org/wiki/Project:Documentation/HandbookDevelopment"&gt;copying the Gentoo handbook to the
    wiki&lt;/a&gt;.
    This is still an on-going project, but was long overdue. There are
    many reasons why the move to the wiki is interesting. For me
    personally, it is to attract a larger audience to update
    the handbook. Although the document will be restricted for editing
    by developers and trusted contributors only (it does contain the
    installation instructions and is a primary entry point for
    many users) that's still a whole lot more than when just a handful
    (one or two actually) developers update the handbook.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/SELinuxProject/selinux/wiki/Releases"&gt;SELinux
    userspace&lt;/a&gt;
    (2.4 release) is looking more stable; there are no specific
    regressions anymore (upstream is at release candidate 7) although I
    must admit that I have not implemented it on the majority of test
    systems that I maintain. Not due to fears, but mostly because I
    struggle a bit with available time so I can do without testing
    upgrades that are not needed. I do plan on moving towards 2.4 in a
    week or two.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/TresysTechnology/refpolicy/wiki"&gt;reference
    policy&lt;/a&gt; has
    released a new version of the policy. Gentoo quickly followed
    through (Jason did the honors of creating the ebuilds).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, apologies for not communicating sooner, and I promise I'll try to
uplift the communication frequency.&lt;/p&gt;</content><category term="Gentoo"></category><category term="communication"></category><category term="developer"></category><category term="Gentoo"></category><category term="selinux"></category><category term="time"></category></entry><entry><title>No more DEPENDs for SELinux policy package dependencies</title><link href="http://192.168.1.71:8000/2014/11/no-more-depends-for-selinux-policy-package-dependencies/" rel="alternate"></link><published>2014-11-02T14:51:00+01:00</published><updated>2014-11-02T14:51:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-11-02:/2014/11/no-more-depends-for-selinux-policy-package-dependencies/</id><summary type="html">&lt;p&gt;I just finished updating 102 packages. The change? Removing the
following from the ebuilds:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DEPEND=&amp;quot;selinux? ( sec-policy/selinux-${packagename} )&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the past, we needed this construction in both DEPEND and RDEPEND.
Recently however, the SELinux eclass got updated with some logic to
relabel files after the policy package is deployed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just finished updating 102 packages. The change? Removing the
following from the ebuilds:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DEPEND=&amp;quot;selinux? ( sec-policy/selinux-${packagename} )&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the past, we needed this construction in both DEPEND and RDEPEND.
Recently however, the SELinux eclass got updated with some logic to
relabel files after the policy package is deployed. As a result, the
DEPEND variable no longer needs to refer to the SELinux policy package.&lt;/p&gt;
&lt;p&gt;This change also means that for those moving from a regular Gentoo
installation to an SELinux installation will have much less packages to
rebuild. In the past, getting &lt;code&gt;USE="selinux"&lt;/code&gt; (through the SELinux
profiles) would rebuild all packages that have a DEPEND dependency to
the SELinux policy package. No more - only packages that depend on the
SELinux libraries (like &lt;code&gt;libselinux&lt;/code&gt;) or utilities rebuild. The rest
will just pull in the proper policy package.&lt;/p&gt;</content><category term="Gentoo"></category><category term="DEPEND"></category><category term="ebuild"></category><category term="Gentoo"></category><category term="RDEPEND"></category><category term="selinux"></category></entry><entry><title>Migrating to SELinux userspace 2.4 (small warning for users)</title><link href="http://192.168.1.71:8000/2014/10/migrating-to-selinux-userspace-2-4-small-warning-for-users/" rel="alternate"></link><published>2014-10-30T19:44:00+01:00</published><updated>2014-10-30T19:44:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-10-30:/2014/10/migrating-to-selinux-userspace-2-4-small-warning-for-users/</id><summary type="html">&lt;p&gt;In a few moments, SELinux users which have the \~arch KEYWORDS set
(either globally or for the SELinux utilities in particular) will notice
that the SELinux userspace will upgrade to version 2.4 (release
candidate 5 for now). This upgrade comes with a manual step that needs
to be performed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a few moments, SELinux users which have the \~arch KEYWORDS set
(either globally or for the SELinux utilities in particular) will notice
that the SELinux userspace will upgrade to version 2.4 (release
candidate 5 for now). This upgrade comes with a manual step that needs
to be performed after upgrade. The information is mentioned as
post-installation message of the &lt;code&gt;policycoreutils&lt;/code&gt; package, and
basically sais that you need to execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# /usr/libexec/selinux/semanage_migrate_store
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The reason is that the SELinux utilities expect the SELinux policy
module store (and the semanage related files) to be in
&lt;code&gt;/var/lib/selinux&lt;/code&gt; and no longer in &lt;code&gt;/etc/selinux&lt;/code&gt;. Note that this does
not mean that the SELinux policy itself is moved outside of that
location, nor is the basic configuration file (&lt;code&gt;/etc/selinux/config&lt;/code&gt;).
It is what tools such as &lt;strong&gt;semanage&lt;/strong&gt; manage that is moved outside that
location.&lt;/p&gt;
&lt;p&gt;I tried to automate the migration as part of the packages themselves,
but this would require the &lt;code&gt;portage_t&lt;/code&gt; domain to be able to move,
rebuild and load policies, which it can't (and to be honest, shouldn't).
Instead of augmenting the policy or making updates to the migration
script as delivered by the upstream project, we currently decided to
have the migration done manually. It is a one-time migration anyway.&lt;/p&gt;
&lt;p&gt;If for some reason end users forget to do the migration, then that does
not mean that the system breaks or becomes unusable. SELinux still
works, SELinux aware applications still work; the only thing that will
fail are updates on the SELinux configuration through tools like
&lt;strong&gt;semanage&lt;/strong&gt; or &lt;strong&gt;setsebool&lt;/strong&gt; - the latter when you want to persist
boolean changes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# semanage fcontext -l
ValueError: SELinux policy is not managed or store cannot be accessed.

~# setsebool -P allow_ptrace on
Cannot set persistent booleans without managed policy.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you get those errors or warnings, all that is left to do is to do the
migration. Note in the following that there is a warning about 'else'
blocks that are no longer supported: that's okay, as far as I know (and
it was mentioned on the upstream mailinglist as well as not something to
worry about) it does not have any impact.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# /usr/libexec/selinux/semanage_migrate_store
Migrating from /etc/selinux/mcs/modules/active to /var/lib/selinux/mcs/active
Attempting to rebuild policy from /var/lib/selinux
sysnetwork: Warning: &amp;#39;else&amp;#39; blocks in optional statements are unsupported in CIL. Dropping from output.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also add in &lt;code&gt;-c&lt;/code&gt; so that the old policy module store is cleaned
up. You can also rerun the command multiple times:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# /usr/libexec/selinux/semanage_migrate_store -c
warning: Policy type mcs has already been migrated, but modules still exist in the old store. Skipping store.
Attempting to rebuild policy from /var/lib/selinux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can manually clean up the old policy module store like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# rm -rf /etc/selinux/mcs/modules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So... don't worry - the change is small and does not break stuff. And
for those wondering about CIL I'll talk about it in one of my next
posts.&lt;/p&gt;</content><category term="Gentoo"></category><category term="cil"></category><category term="Gentoo"></category><category term="migrate"></category><category term="selinux"></category><category term="semanage"></category><category term="upgrade"></category><category term="userspace"></category></entry><entry><title>Gentoo Hardened august meeting</title><link href="http://192.168.1.71:8000/2014/08/gentoo-hardened-august-meeting/" rel="alternate"></link><published>2014-08-29T16:43:00+02:00</published><updated>2014-08-29T16:43:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-08-29:/2014/08/gentoo-hardened-august-meeting/</id><summary type="html">&lt;p&gt;Another month has passed, so we had another online meeting to discuss
the progress within Gentoo Hardened.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead elections&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The yearly lead elections within Gentoo Hardened were up again. Zorry
(Magnus Granberg) was re-elected as project lead so doesn't need to
update his LinkedIn profile yet ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;blueness (Anthony G …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so we had another online meeting to discuss
the progress within Gentoo Hardened.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead elections&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The yearly lead elections within Gentoo Hardened were up again. Zorry
(Magnus Granberg) was re-elected as project lead so doesn't need to
update his LinkedIn profile yet ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;blueness (Anthony G. Basile) has been working on the uclibc stages for
some time. Due to the configurable nature of these setups, many
&lt;code&gt;/etc/portage&lt;/code&gt; files were provided as part of the stages, which
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=519686"&gt;shouldn't&lt;/a&gt; happen. Work
is on the way to update this accordingly.&lt;/p&gt;
&lt;p&gt;For the musl setup, blueness is also rebuilding the stages to use a
symbolic link to the dynamic linker (&lt;code&gt;/lib/ld-linux-arch.so&lt;/code&gt;) as
recommended by the musl maintainers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsecurity with PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=520198"&gt;bug&lt;/a&gt; has been
submitted which shows that large binary files (in the bug, a chrome
binary with debug information is shown to be more than 2 Gb in size)
cannot be pax-mark'ed, with &lt;code&gt;paxctl&lt;/code&gt; informing the user that the file is
too big. The problem is when the PAX marks are in ELF (as the
application mmaps the binary) - users of extended attributes based PaX
markings do not have this problem. blueness is working on making things
a bit more intelligent, and to fix this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have been making a few changes to the SELinux setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The live ebuilds (those with version 9999 which use the repository
    policy rather than snapshots of the policies) are now being used as
    "master" in case of releases: the ebuilds can just be copied to the
    right version to support the releases. The release script inside the
    repository is adjusted to reflect this as well.&lt;/li&gt;
&lt;li&gt;The SELinux eclass now supports two variables, &lt;code&gt;SELINUX_GIT_REPO&lt;/code&gt;
    and &lt;code&gt;SELINUX_GIT_BRANCH&lt;/code&gt;, which allows users to use their own
    repository, and developers to work in specific branches together. By
    setting the right value in the users' &lt;code&gt;make.conf&lt;/code&gt; switching policy
    repositories or branches is now a breeze.&lt;/li&gt;
&lt;li&gt;Another change in the SELinux eclass is that, after the installation
    of SELinux policies, we will check the reverse dependencies of the
    policy package and relabel the files of these packages. This allows
    us to only have &lt;code&gt;RDEPEND&lt;/code&gt; dependencies towards the SELinux policy
    packages (if the application itself does not otherwise link with
    &lt;em&gt;libselinux&lt;/em&gt;), making the dependency tree within the package manager
    more correct. We still need to update these packages to drop the
    &lt;code&gt;DEPEND&lt;/code&gt; dependency, which is something we will focus on in the next
    few months.&lt;/li&gt;
&lt;li&gt;In order to support improved cooperation between SELinux developers
    in the Gentoo Hardened team - perfinion (Jason Zaman) is in the
    queue for becoming a new developer in our mids - a &lt;a href="https://wiki.gentoo.org/wiki/Project:SELinux/CodingStyle"&gt;coding style for
    SELinux
    policies&lt;/a&gt;
    is being drafted up. This is of course based on the coding style of
    the reference policy, but with some Gentoo specific improvements and
    more clarifications.&lt;/li&gt;
&lt;li&gt;perfinion has been working on improving the SELinux support in
    OpenRC (release 0.13 and higher), making some of the additions that
    we had to make in the past - such as the &lt;code&gt;selinux_gentoo&lt;/code&gt; init
    script - obsolete.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The meeting also discussed a few bugs in more detail, but if you really
want to know, just hang on and wait for the IRC logs ;-) Other usual
sections (system integrity and profiles) did not have any notable topics
to describe.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Switching to new laptop</title><link href="http://192.168.1.71:8000/2014/08/switching-to-new-laptop/" rel="alternate"></link><published>2014-08-19T22:11:00+02:00</published><updated>2014-08-19T22:11:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-08-19:/2014/08/switching-to-new-laptop/</id><summary type="html">&lt;p&gt;I'm slowly but surely starting to switch to a new laptop. The old one
hasn't completely died (yet) but given that I had to force its CPU
frequency at the lowest Hz or the CPU would burn (and the system
suddenly shut down due to heat issues), and that the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm slowly but surely starting to switch to a new laptop. The old one
hasn't completely died (yet) but given that I had to force its CPU
frequency at the lowest Hz or the CPU would burn (and the system
suddenly shut down due to heat issues), and that the connection between
the battery and laptop fails (so even new battery didn't help out) so I
couldn't use it as a laptop... well, let's say the new laptop is welcome
;-)&lt;/p&gt;
&lt;p&gt;Building Gentoo isn't an issue (having only a few hours per day to work
on it is) and while I'm at it, I'm also experimenting with EFI
(currently still without secure boot, but with EFI) and such.
Considering that the Gentoo Handbook needs quite a few updates (and I'm
thinking to do more than just small updates) knowing how EFI works is a
Good Thing (tm).&lt;/p&gt;
&lt;p&gt;For those interested - the &lt;a href="https://wiki.gentoo.org/wiki/EFI_stub_kernel"&gt;EFI stub
kernel&lt;/a&gt; instructions in
the article on the wiki, and also in Greg's wonderful post on &lt;a href="http://kroah.com/log/blog/2013/09/02/booting-a-self-signed-linux-kernel/"&gt;booting a
self-signed Linux
kernel&lt;/a&gt;
(which I will do later) work pretty well. I didn't try out the "Adding
more kernels" section in it, as I need to be able to (sometimes) edit
the boot options (which isn't easy to accomplish with EFI
stub-supporting kernels afaics). So I installed
&lt;a href="https://wiki.gentoo.org/wiki/Gummiboot"&gt;Gummiboot&lt;/a&gt; (and created a wiki
article on it).&lt;/p&gt;
&lt;p&gt;Lots of things still planned, so little time. But at least building
chromium is now a bit faster - instead of 5 hours and 16 minutes, I can
now enjoy the newer versions after little less than 40 minutes.&lt;/p&gt;</content><category term="Gentoo"></category><category term="efi"></category><category term="Gentoo"></category><category term="laptop"></category></entry><entry><title>Some changes under the hood</title><link href="http://192.168.1.71:8000/2014/08/some-changes-under-the-hood/" rel="alternate"></link><published>2014-08-09T21:45:00+02:00</published><updated>2014-08-09T21:45:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-08-09:/2014/08/some-changes-under-the-hood/</id><summary type="html">&lt;p&gt;In between conferences, technical writing jobs and traveling, we did a
few changes under the hood for SELinux in Gentoo.&lt;/p&gt;
&lt;p&gt;First of all, new policies are bumped and also stabilized (2.20130411-r3
is now stable, 2.20130411-r5 is \~arch). These have a few updates
(mergers from upstream), and r5 also …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In between conferences, technical writing jobs and traveling, we did a
few changes under the hood for SELinux in Gentoo.&lt;/p&gt;
&lt;p&gt;First of all, new policies are bumped and also stabilized (2.20130411-r3
is now stable, 2.20130411-r5 is \~arch). These have a few updates
(mergers from upstream), and r5 also has preliminary support for
&lt;a href="http://www.freedesktop.org/software/systemd/man/tmpfiles.d.html"&gt;tmpfiles&lt;/a&gt;
(at least the OpenRC implementation of it), which is made part of the
&lt;a href="http://packages.gentoo.org/package/sec-policy/selinux-base-policy"&gt;selinux-base-policy&lt;/a&gt;
package.&lt;/p&gt;
&lt;p&gt;The ebuilds to support new policy releases now are relatively simple
copies of the live ebuilds (which always contain the latest policies) so
that bumping (either by me or other developers) is easy enough. There's
also a release script in our policy repository which tags the right git
commit (the point at which the release is made), creates the necessary
patches, uploads them, etc.&lt;/p&gt;
&lt;p&gt;One of the changes made is to "drop" the &lt;code&gt;BASEPOL&lt;/code&gt; variable. In the
past, &lt;code&gt;BASEPOL&lt;/code&gt; was a variable inside the ebuilds that pointed to the
right patchset (and base policy) as we initially supported policy
modules of different base releases. However, that was a mistake and we
quickly moved to bumping all policies with every releaes, but kept the
&lt;code&gt;BASEPOL&lt;/code&gt; variable in it. Now, &lt;code&gt;BASEPOL&lt;/code&gt; is "just" the &lt;code&gt;${PVR}&lt;/code&gt; value of
the ebuild so no longer needs to be provided. In the future, I'll
probably remove &lt;code&gt;BASEPOL&lt;/code&gt; from the internal eclass and the
&lt;code&gt;selinux-base*&lt;/code&gt; packages as well.&lt;/p&gt;
&lt;p&gt;A more important change to the eclass is support for the
&lt;code&gt;SELINUX_GIT_REPO&lt;/code&gt; and &lt;code&gt;SELINUX_GIT_BRANCH&lt;/code&gt; variables (for live ebuilds,
i.e. those with the 9999 version). If set, then they pull from the
mentioned repository (and branch) instead of the default
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;hardened-refpolicy.git&lt;/a&gt;
repository. This allows for developers to do some testing on a different
branch easily, or for other users to use their own policy repository
while still enjoying the SELinux integration support in Gentoo through
the &lt;code&gt;sec-policy/*&lt;/code&gt; packages.&lt;/p&gt;
&lt;p&gt;Finally, I wrote up a first attempt at our &lt;a href="https://wiki.gentoo.org/wiki/Project:SELinux/CodingStyle"&gt;coding
style&lt;/a&gt;,
heavily based on the coding style from the reference policy of course
(as our policy is still following this upstream project). This should
allow the team to work better together and to decide on namings
autonomously (instead of hours of discussing and settling for something
as silly as an interface or boolean name ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="eclass"></category><category term="Gentoo"></category><category term="git"></category><category term="hardened"></category><category term="refpolicy"></category><category term="selinux"></category></entry><entry><title>Gentoo Hardened July meeting</title><link href="http://192.168.1.71:8000/2014/08/gentoo-hardened-july-meeting/" rel="alternate"></link><published>2014-08-01T21:48:00+02:00</published><updated>2014-08-01T21:48:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-08-01:/2014/08/gentoo-hardened-july-meeting/</id><summary type="html">&lt;p&gt;I failed to show up myself (I fell asleep - kids are fun, but deplete
your energy source quickly), but that shouldn't prevent me from making a
nice write-up of the meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 gives some issues with kernel compilations and other components.
Lately, breakage has been reported with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I failed to show up myself (I fell asleep - kids are fun, but deplete
your energy source quickly), but that shouldn't prevent me from making a
nice write-up of the meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 gives some issues with kernel compilations and other components.
Lately, breakage has been reported with GCC 4.9.1 compiling MySQL or
with debugging symbols. So for hardened, we'll wait this one out until
the bugs are fixed.&lt;/p&gt;
&lt;p&gt;For GCC 4.10, the
&lt;a href="https://gcc.gnu.org/ml/gcc-patches/2014-07/msg02231.html"&gt;--enable-default-pie&lt;/a&gt;
patch has been sent upstream. If that is accepted, the SSP one will be
sent as well.&lt;/p&gt;
&lt;p&gt;In uclibc land, stages are being developed for PPC. This is the final
architecture that is often used in embedded worlds that needed support
for it in Gentoo, and that's now being finalized. Go blueness!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;libpcre&lt;/code&gt; upgrade broke relabeling operations on SELinux enabled
systems. A fix for this has been made part of libselinux, but a little
too late, so some users will be affected by the problem. It's easily
worked around (removing the &lt;code&gt;*.bin&lt;/code&gt; files in the &lt;code&gt;contexts/files/&lt;/code&gt;
directory of the SELinux configuration) and hopefully will never occur
again.&lt;/p&gt;
&lt;p&gt;The 2.3 userland has finally been stabilized (we had a few dependencies
that we were waiting for - and we were a dependency ourselves for other
packages as well).&lt;/p&gt;
&lt;p&gt;Finally, some &lt;a href="http://article.gmane.org/gmane.linux.gentoo.hardened/6266"&gt;thought
discussion&lt;/a&gt;
is being done (not that there's much feedback on it, but every
documented step is a good step imo) on the SELinux policy within Gentoo
(and the principles that we'll follow that are behind it).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsecurity / PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Due to some security issues, the Linux kernel sources have been
stabilized more rapidly than usual, which left little time for broad
validation and regression testing. Updates and fixes have been applied
since and new stabilizations occurred. Hopefully we're now at the right,
stable set again.&lt;/p&gt;
&lt;p&gt;The C-based &lt;code&gt;install-xattr&lt;/code&gt; application (which is performance-wise a big
improvement over the Python-based one) is working well in "lab
environments" (some developers are using it exclusively). It is included
in the Portage repository
^(if\ I\ understand\ the\ chat\ excerpts\ correctly)^ but as such
not available for broader usage yet.&lt;/p&gt;
&lt;p&gt;An update against &lt;code&gt;elfix&lt;/code&gt; is made as well as there was a dependency
mismatch when building with &lt;code&gt;USE=-ptpax&lt;/code&gt;. This will be corrected in
elfix-0.9.&lt;/p&gt;
&lt;p&gt;Finally, blueness is also working on a GLEP (Gentoo Linux Enhancement
Proposal) to export VDB information (especially &lt;code&gt;NEEDED.ELF.2&lt;/code&gt;) as this
is important for ELF/library graph information (as used by revdep-pax,
migrate-pax, etc.). Although Portage already does this, this is not part
of the PMS and as such other package managers might not do this (such as
Paludis).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Updates on the profiles has been made to properly include multilib
related variables and other metadata. For some profiles, this went as
easy as expected (nice stacking), but other profiles have inheritance
troubles making it much harder to include the necessary information.
Although some talks have arised on the gentoo-dev mailinglist about
refactoring how Gentoo handles profiles, there hasn't been done much
more than just talking :-( But I'm sure we haven't heard the last of
this yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness has added information on &lt;code&gt;EMULTRAMP&lt;/code&gt; in the kernel
configuration, especially noting to the user that it is needed for
Python support in Gentoo Hardened. It is also in the &lt;a href="https://wiki.gentoo.org/wiki/Hardened/PaX_Quickstart"&gt;PaX
Quickstart&lt;/a&gt;
document, although this document is becoming a very large one and users
might overlook it.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Multilib in Gentoo</title><link href="http://192.168.1.71:8000/2014/07/multilib-in-gentoo/" rel="alternate"></link><published>2014-07-02T21:03:00+02:00</published><updated>2014-07-02T21:03:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-07-02:/2014/07/multilib-in-gentoo/</id><summary type="html">&lt;p&gt;One of the areas in Gentoo that is seeing lots of active development is
its ongoing effort to have proper &lt;a href="https://wiki.gentoo.org/wiki/Project:Multilib"&gt;multilib
support&lt;/a&gt; throughout the
tree. In the past, this support was provided through special emulation
packages, but those have the (serious) downside that they are often
outdated, sometimes even having …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the areas in Gentoo that is seeing lots of active development is
its ongoing effort to have proper &lt;a href="https://wiki.gentoo.org/wiki/Project:Multilib"&gt;multilib
support&lt;/a&gt; throughout the
tree. In the past, this support was provided through special emulation
packages, but those have the (serious) downside that they are often
outdated, sometimes even having security issues.&lt;/p&gt;
&lt;p&gt;But this active development is not because we all just started looking
in the same direction. No, it's thanks to a few developers that have put
their shoulders under this effort, directing the development workload
where needed and pressing other developers to help in this endeavor. And
pushing is more than just creating
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=454644"&gt;bugreports&lt;/a&gt; and telling
developers to do something.&lt;/p&gt;
&lt;p&gt;It is also about
&lt;a href="http://article.gmane.org/gmane.linux.gentoo.devel/91125"&gt;communicating&lt;/a&gt;,
&lt;a href="http://article.gmane.org/gmane.linux.gentoo.devel/91770"&gt;giving
feedback&lt;/a&gt; and
patiently helping developers when they have questions.&lt;/p&gt;
&lt;p&gt;I can only hope that other activities within Gentoo and its potential
broad impact work on this as well. Kudos to all involved, as well as all
developers that have undoubtedly put numerous hours of development
effort in the hope to make their ebuilds multilib-capable (I know I had
to put lots of effort in it, but I find it is worthwhile and a big
learning opportunity).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened, June 2014</title><link href="http://192.168.1.71:8000/2014/06/gentoo-hardened-june-2014/" rel="alternate"></link><published>2014-06-15T21:28:00+02:00</published><updated>2014-06-15T21:28:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-06-15:/2014/06/gentoo-hardened-june-2014/</id><summary type="html">&lt;p&gt;Friday the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project had its
monthly online meeting to talk about the progress within the various
tools, responsibilities and subprojects.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;toolchain&lt;/strong&gt; part, Zorry mentioned that GCC 4.9 and 4.8.3 will
have SSP enabled by default. The hardened profiles will still have a
different …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Friday the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project had its
monthly online meeting to talk about the progress within the various
tools, responsibilities and subprojects.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;toolchain&lt;/strong&gt; part, Zorry mentioned that GCC 4.9 and 4.8.3 will
have SSP enabled by default. The hardened profiles will still have a
different SSP setting than the default (so yes, there will still be
differences between the two) but this will help in securing the Gentoo
default installations.&lt;/p&gt;
&lt;p&gt;Zorry is also working on upstreaming the PIE patches for GCC 4.10.&lt;/p&gt;
&lt;p&gt;Next to the regular toolchain, blueness also mentioned his intentions to
launch a &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened_musl"&gt;Hardened
musl&lt;/a&gt; subproject
which will focus on the musl C library (rather than glibc or uclibc) and
hardening.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;kernel&lt;/strong&gt; side, two recent kernel vulnerabilities in the vanilla
kernel Linux (pty race and privilege escalation through futex code)
painted the discussions on IRC recently. Some versions of the hardened
kernels are still available in the tree, but the more recent
(non-vulnerable) kernels have proven not to be as stable as we'd hoped.&lt;/p&gt;
&lt;p&gt;The pty race vulnerability is possibly not applicable to hardened
kernels thanks to grSecurity, due to its protection to access the kernel
symbols.&lt;/p&gt;
&lt;p&gt;The latest kernels should not be used with KSTACKOVERFLOW on production
systems though; there are some issues reported with virtio network
interface support (on the guests) and ZFS.&lt;/p&gt;
&lt;p&gt;Also, on the &lt;strong&gt;Pax&lt;/strong&gt; support, the &lt;code&gt;install-xattr&lt;/code&gt; saga continues. The
new wrapper that blueness worked in dismissed some code to keep the
&lt;code&gt;PWD&lt;/code&gt; so the &lt;code&gt;$S&lt;/code&gt; directory knowledge was "lost". This is now fixed. All
that is left is to have the wrapper included and stabilized.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;SELinux&lt;/strong&gt; side, it was the usual set of progress. Policy
stabilization and user land application and library stabilization. The
latter is waiting a bit because of the multilib support that's now being
integrated in the ebuilds as well (and thus has a larger set of
dependencies to go through) but no show-stoppers there. Also, the
&lt;a href="https://wiki.gentoo.org/wiki/SELinux"&gt;SELinux documentation portal&lt;/a&gt; on
the wiki was briefly mentioned.&lt;/p&gt;
&lt;p&gt;Also, the &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;policycoreutils
vulnerability&lt;/a&gt;
has been &lt;a href="http://blog.siphos.be/2014/05/dropping-sesandbox-support/"&gt;worked
around&lt;/a&gt; so it
is no longer applicable to us.&lt;/p&gt;
&lt;p&gt;On the hardened &lt;strong&gt;profiles&lt;/strong&gt;, we had a nice discussion on enabling
capabilities support (and move towards capabilities instead of setuid
binaries), which klondike will try to tackle during the summer holidays.&lt;/p&gt;
&lt;p&gt;As I didn't take notes during the meeting, this post might miss a few
(and I forgot to enable logging as well) but as Zorry sends out the
meeting logs anyway later, you can read up there ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Revamped our SELinux documentation</title><link href="http://192.168.1.71:8000/2014/05/revamped-our-selinux-documentation/" rel="alternate"></link><published>2014-05-12T22:15:00+02:00</published><updated>2014-05-12T22:15:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-05-12:/2014/05/revamped-our-selinux-documentation/</id><summary type="html">&lt;p&gt;In the move to the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo wiki&lt;/a&gt;, I have
updated and revamped most of our SELinux documentation. The end result
can be seen through the &lt;a href="https://wiki.gentoo.org/wiki/SELinux"&gt;main SELinux
page&lt;/a&gt;. Most of the content is
below this page (as subpages).&lt;/p&gt;
&lt;p&gt;We start with a new &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Quick_introduction"&gt;introduction to
SELinux&lt;/a&gt;
article which goes over …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the move to the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo wiki&lt;/a&gt;, I have
updated and revamped most of our SELinux documentation. The end result
can be seen through the &lt;a href="https://wiki.gentoo.org/wiki/SELinux"&gt;main SELinux
page&lt;/a&gt;. Most of the content is
below this page (as subpages).&lt;/p&gt;
&lt;p&gt;We start with a new &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Quick_introduction"&gt;introduction to
SELinux&lt;/a&gt;
article which goes over a large set of SELinux' features and concepts.
Next, we cover the various concepts within SELinux. This is mostly
SELinux features but explained more in-depth. Then we go on to the user
guides. We start of course with the &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Installation"&gt;installation of SELinux on
Gentoo&lt;/a&gt; and then
cover the remainder of administrative topics within SELinux (user
management, handling AVC denials, label management, booleans, etc.)&lt;/p&gt;
&lt;p&gt;The above is most likely sufficient for the majority of SELinux users. A
few more expert-specific documents are provided as well (some of them
still work in progress, but I didn't want to wait to get some feedback)
and there is also a section specific for (Gentoo) developers.&lt;/p&gt;
&lt;p&gt;Give it a review and tell me what you think.&lt;/p&gt;</content><category term="Gentoo"></category><category term="documentation"></category><category term="Gentoo"></category><category term="selinux"></category><category term="wiki"></category></entry><entry><title>Dropping sesandbox support</title><link href="http://192.168.1.71:8000/2014/05/dropping-sesandbox-support/" rel="alternate"></link><published>2014-05-09T21:03:00+02:00</published><updated>2014-05-09T21:03:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-05-09:/2014/05/dropping-sesandbox-support/</id><summary type="html">&lt;p&gt;A &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;vulnerability in
seunshare&lt;/a&gt;,
part of &lt;code&gt;policycoreutils&lt;/code&gt;, came to light recently (through &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=509896"&gt;bug
509896&lt;/a&gt;). The issue is
within &lt;code&gt;libcap-ng&lt;/code&gt; actually, but the specific situation in which the
vulnerability can be exploited is only available in &lt;code&gt;seunshare&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, &lt;code&gt;seunshare&lt;/code&gt; is not built by default on Gentoo. You need to define
&lt;code&gt;USE …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3215"&gt;vulnerability in
seunshare&lt;/a&gt;,
part of &lt;code&gt;policycoreutils&lt;/code&gt;, came to light recently (through &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=509896"&gt;bug
509896&lt;/a&gt;). The issue is
within &lt;code&gt;libcap-ng&lt;/code&gt; actually, but the specific situation in which the
vulnerability can be exploited is only available in &lt;code&gt;seunshare&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, &lt;code&gt;seunshare&lt;/code&gt; is not built by default on Gentoo. You need to define
&lt;code&gt;USE="sesandbox"&lt;/code&gt;, which I implemented as an optional build because I
see no need for the &lt;code&gt;seunshare&lt;/code&gt; command and the &lt;em&gt;SELinux sandbox
(sesandbox)&lt;/em&gt; support. Upstream (Fedora/RedHat) calls it &lt;em&gt;sandbox&lt;/em&gt;, which
Gentoo translates to &lt;em&gt;sesandbox&lt;/em&gt; as it collides with the Gentoo sandbox
support otherwise. But I digress.&lt;/p&gt;
&lt;p&gt;The build of the SELinux sandbox support is optional, mostly because we
do not have a direct reason to support it. There are no Gentoo users
that I'm aware of that use it. It is used to start an application in a
chroot-like environment, based on Linux namespaces and a specific
SELinux policy called &lt;code&gt;sandbox_t&lt;/code&gt;. The idea isn't that bad, but I rather
focus on proper application confinement and full system enforcement
support (rather than specific services). The SELinux sandbox makes a bit
more sense when the system supports unconfined domains (and users are in
the &lt;code&gt;unconfined_t&lt;/code&gt; domain), but Gentoo focuses on strict policy support.&lt;/p&gt;
&lt;p&gt;Anyway, this isn't the first vulnerability in &lt;code&gt;seunshare&lt;/code&gt;. In 2011,
another privilege escalation vulnerability was found in the application
(see &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=374897"&gt;bug 374897&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;But having a vulnerability in the application (or its interaction with
&lt;code&gt;libcap-ng&lt;/code&gt;) doesn't mean an exploitable vulnerability. Most users will
not even have &lt;code&gt;seunshare&lt;/code&gt;, and those that do have it will not be able to
call it if you are running with SELinux in &lt;em&gt;strict&lt;/em&gt; or have
&lt;code&gt;USE="-unconfined"&lt;/code&gt; set for the other policies. If &lt;code&gt;USE="unconfined"&lt;/code&gt; is
set and you run &lt;em&gt;mcs&lt;/em&gt;, &lt;em&gt;targeted&lt;/em&gt; or &lt;em&gt;mls&lt;/em&gt; (which isn't default either,
the default is &lt;em&gt;strict&lt;/em&gt;) then if your users are still mapped to the
regular user domains (&lt;code&gt;user_t&lt;/code&gt;, &lt;code&gt;staff_t&lt;/code&gt; or even &lt;code&gt;sysadm_t&lt;/code&gt;) then
&lt;code&gt;seunshare&lt;/code&gt; doesn't work as the SELinux policy prevents its behavior
before the vulnerability is triggered.&lt;/p&gt;
&lt;p&gt;Assuming you &lt;em&gt;do&lt;/em&gt; have a &lt;em&gt;targeted&lt;/em&gt; policy with users mapped to
&lt;code&gt;unconfined_t&lt;/code&gt; and you have built &lt;code&gt;policycoreutils&lt;/code&gt; with
&lt;code&gt;USE="sesandbox"&lt;/code&gt; or you run in SELinux in permissive mode, then please
tell me if you can trigger the exploit. On my systems, &lt;code&gt;seunshare&lt;/code&gt; fails
with the message that it can't drop its privileges and thus exits
(instead of executing the exploit code as it suggested by the reports).&lt;/p&gt;
&lt;p&gt;Since I mentioned that most user don't use SELinux sandbox, and because
I can't even get it to work (regardless of the vulnerability), I decided
to drop support for it from the builds. That also allows me to more
quickly introduce the new userspace utilities as I don't need to
refactor the code to switch from &lt;code&gt;sandbox&lt;/code&gt; to &lt;code&gt;sesandbox&lt;/code&gt; anymore.&lt;/p&gt;
&lt;p&gt;So, &lt;code&gt;policycoreutils-2.2.5-r4&lt;/code&gt; and &lt;code&gt;policycoreutils-2.3_rc1-r1&lt;/code&gt; are now
available which do not build &lt;code&gt;seunshare&lt;/code&gt; anymore. And now I can focus on
providing the full &lt;em&gt;2.3&lt;/em&gt; userspace that has been announced today.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="policycoreutils"></category><category term="selinux"></category><category term="seunshare"></category><category term="vulnerability"></category></entry><entry><title>Stepping through the build process with ebuild</title><link href="http://192.168.1.71:8000/2014/04/stepping-through-the-build-process-with-ebuild/" rel="alternate"></link><published>2014-04-20T11:59:00+02:00</published><updated>2014-04-20T11:59:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-04-20:/2014/04/stepping-through-the-build-process-with-ebuild/</id><summary type="html">&lt;p&gt;Today I had to verify a patch that I pushed upstream but which was
slightly modified. As I don't use the tool myself (it was a
user-reported issue) I decided to quickly drum up a live ebuild for the
application and install it (as the patch was in the upstream …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I had to verify a patch that I pushed upstream but which was
slightly modified. As I don't use the tool myself (it was a
user-reported issue) I decided to quickly drum up a live ebuild for the
application and install it (as the patch was in the upstream repository
but not in a release yet). The patch is for
&lt;a href="http://fcron.free.fr/"&gt;fcron&lt;/a&gt;'s SELinux support, so the file I created
is
&lt;a href="https://github.com/sjvermeu/gentoo.overlay/tree/master/sys-process/fcron"&gt;fcron-9999.ebuild&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sadly, the build failed at the documentation generation (something about
"No targets to create en/HTML/index.html"). That's unfortunate, because
that means I'm not going to ask to push the live ebuild to the Portage
tree itself (yet). But as my primary focus is to validate the patch (and
not create a live ebuild) I want to ignore this error and go on. I don't
need the fcron documentation right now, so how about I just continue?&lt;/p&gt;
&lt;p&gt;To do so, I start using the &lt;strong&gt;ebuild&lt;/strong&gt; command. As the failure occurred
in the build phase (&lt;em&gt;compile&lt;/em&gt;) and at the end (documentation was the
last step), I tell Portage that it should assume the build has
completed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# touch /var/portage/portage/sys-process/fcron-9999/.compiled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I tell Portage to install the (built) files into the &lt;code&gt;images/&lt;/code&gt;
directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# ebuild /home/swift/dev/gentoo.overlay/sys-process/fcron/fcron-9999.ebuild install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The installation phase fails again (with the same error as during the
build, which is logical as the &lt;code&gt;Makefile&lt;/code&gt; can't install files that
haven't been properly build yet.) As documentation is the last step, I
tell Portage to assume the installation phase has completed as well,
continuing with the merging of the files to the life file system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# touch /var/portage/portage/sys-process/fcron-9999/.installed
~# ebuild /home/swift/dev/gentoo.overlay/sys-process/fcron/fcron-9999.ebuild qmerge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voila, &lt;code&gt;fcron-9999&lt;/code&gt; is now installed on the system, ready to validate
the patch I had to check.&lt;/p&gt;</content><category term="Gentoo"></category><category term="ebuild"></category><category term="phase"></category><category term="portage"></category></entry><entry><title>Proof of concept for USE enabled policies</title><link href="http://192.168.1.71:8000/2014/03/proof-of-concept-for-use-enabled-policies/" rel="alternate"></link><published>2014-03-31T18:33:00+02:00</published><updated>2014-03-31T18:33:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-03-31:/2014/03/proof-of-concept-for-use-enabled-policies/</id><summary type="html">&lt;p&gt;&lt;em&gt;tl;dr:&lt;/em&gt; Some (&lt;code&gt;-9999&lt;/code&gt;) policy ebuilds now have &lt;code&gt;USE&lt;/code&gt; support for
building in (or leaving out) SELinux policy statements.&lt;/p&gt;
&lt;p&gt;One of the "problems" I have been facing since I took on the maintenance
of SELinux policies within Gentoo Hardened is the (seeming) inability to
make a "least privilege" policy that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;tl;dr:&lt;/em&gt; Some (&lt;code&gt;-9999&lt;/code&gt;) policy ebuilds now have &lt;code&gt;USE&lt;/code&gt; support for
building in (or leaving out) SELinux policy statements.&lt;/p&gt;
&lt;p&gt;One of the "problems" I have been facing since I took on the maintenance
of SELinux policies within Gentoo Hardened is the (seeming) inability to
make a "least privilege" policy that suits the flexibility that Gentoo
offers. As a quick recap: SELinux policies describe the "acceptable
behavior" of an application (well, domain to be exact), often known as
the "normalized behavior" in the security world. When an application
(which runs within a SELinux domain) wants to perform some action which
is not part of the policy, then this action is denied.&lt;/p&gt;
&lt;p&gt;Some applications can have very broad acceptable behavior. A web server
for instance might need to connect to a database, but that is not the
case if the web server only serves static information, or dynamic
information that doesn't need a database. To support this, SELinux has
&lt;em&gt;booleans&lt;/em&gt; through which optional policy statements can be enabled or
disabled. So far so good.&lt;/p&gt;
&lt;p&gt;Let's look at a second example: ALSA. When ALSA enabled applications
want to access the sound devices, they use IPC resources to
"collaborate" around the sound subsystem (semaphores and shared memory
to be exact). Semaphores inherit the type of the domain that first
created the semaphore (so if &lt;strong&gt;mplayer&lt;/strong&gt; creates it, then the semaphore
has the &lt;code&gt;mplayer_t&lt;/code&gt; context) whereas shared memory usually gets the
tmpfs-related type (&lt;code&gt;mplayer_tmpfs_t&lt;/code&gt;). When a second application wants
to access the sound device as well, it needs access to the semaphore and
shared memory. Assuming this second application is the browser, then
&lt;code&gt;mozilla_t&lt;/code&gt; needs access to semaphores by &lt;code&gt;mplayer_t&lt;/code&gt;. And the same for
&lt;code&gt;chromium_t&lt;/code&gt;. Or &lt;code&gt;java_t&lt;/code&gt; applications that are ALSA-enabled. And
&lt;code&gt;alsa_t&lt;/code&gt;. And all other applications that are ALSA enabled.&lt;/p&gt;
&lt;p&gt;In Gentoo, ALSA support can be made optional through &lt;code&gt;USE="alsa"&lt;/code&gt;. If a
user decides not to use ALSA, then it doesn't make sense to allow all
those domains access to each others' semaphores and shared memory. And
although SELinux booleans can help, this would mean that for each
application domain, something like the following policy would need to
be, optionally, allowed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# For the mplayer_t domain:
optional_policy(`
  tunable_policy(`use_alsa&amp;#39;,`
    mozilla_rw_semaphores(mplayer_t)
    mozilla_rw_shm(mplayer_t)
    mozilla_tmpfs_rw_files(mplayer_t)
  &amp;#39;)
&amp;#39;)

optional_policy(`
  tunable_policy(`use_alsa&amp;#39;,`
    chromium_rw_semaphores(mplayer_t)
    chromium_rw_shm(mplayer_t)
    chromium_tmpfs_rw_files(mplayer_t)
  &amp;#39;)
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this for all domains that are ALSA-enabled. Every time a new
application is added that knows ALSA, the same code needs to be added to
all policies. And this only uses a single SELinux boolean (whereas
Gentoo supports &lt;code&gt;USE="alsa"&lt;/code&gt; on per-package level), although we can
create separate booleans for each domain if we want to. Not that that
will make it more manageable.&lt;/p&gt;
&lt;p&gt;One way of dealing with this would be to use attributes. Say we have a
policy like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;attribute alsadomain;
attribute alsatmpfsfile;

allow alsadomain alsadomain:sem rw_sem_perms;
allow alsadomain alsadomain:shm rw_shm_perms;
allow alsadomain alsatmpfsfile:file rw_file_perms;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By assigning the attribute to the proper domains whenever ALSA support
is needed, we can toggle this more easily:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# In alsa.if
interface(`alsa_domain&amp;#39;,`
  gen_require(`
    attribute alsadomain;
    attribute alsatmpfsfile;
  &amp;#39;)
  typeattribute $1 alsadomain;
  typeattribute $2 alsatmpfsfile;
&amp;#39;)


# In mplayer.te
optional_policy(`
  tunable_policy(`use_alsa&amp;#39;,`
    alsa_domain(mplayer_t, mplayer_tmpfs_t)
  &amp;#39;)
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That would solve the problem of needlessly adding more calls in a policy
for every ALSA application. And hey, we can probably live with either a
global boolean (&lt;code&gt;use_alsa&lt;/code&gt;) or per-domain one (&lt;code&gt;mplayer_use_alsa&lt;/code&gt;) and
toggle this according to our needs.&lt;/p&gt;
&lt;p&gt;Sadly, the above is not possible: one cannot define &lt;code&gt;typeattribute&lt;/code&gt;
assignments inside a &lt;code&gt;tunable_policy&lt;/code&gt; code: attributes are part of the
non-conditional part of a SELinux policy. The solution would be to
create build-time conditionals (rather than run-time):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ifdef(`use_alsa&amp;#39;,`
  optional_policy(`
    alsa_domain(mplayer_t, mplayer_tmpfs_t)
  &amp;#39;)
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This does mean that &lt;code&gt;use_alsa&lt;/code&gt; has to be known when the policy is built.
For Gentoo, that's not that bad, as policies are part of separate
packages, like &lt;code&gt;sec-policy/selinux-mplayer&lt;/code&gt;. So what I now added was
USE-enabled build-time decisions that trigger this code. The
&lt;code&gt;selinux-mplayer&lt;/code&gt; package has &lt;code&gt;IUSE="alsa"&lt;/code&gt; which will enable, if set,
the &lt;code&gt;use_alsa&lt;/code&gt; build-time conditional.&lt;/p&gt;
&lt;p&gt;As a result, we now support a better, fine-grained privilege setting
inside the SELinux policy which is triggered through the proper USE
flags.&lt;/p&gt;
&lt;p&gt;Is this a perfect solution? No, but it is manageable and known to Gentoo
users. It isn't perfect, because it listens to the USE flag setting for
the &lt;code&gt;selinux-mplayer&lt;/code&gt; package (and of course globally set USE flags) but
doesn't "detect" that the firefox application (for which the policy is
meant) is or isn't built with &lt;code&gt;USE="alsa"&lt;/code&gt;. So users/administrators will
need to keep this in mind when using package-local USE flag definitions.&lt;/p&gt;
&lt;p&gt;Also, this will make it a bit more troublesome for myself to manage the
SELinux policy for Gentoo (as upstream will not use this setup, and as
such patches from upstream might need a few manual corrections before
they apply to our tree). However, I gladly take that up if it means my
system will have somewhat better confinement.&lt;/p&gt;</content><category term="Gentoo"></category><category term="alsa"></category><category term="policy"></category><category term="selinux"></category></entry><entry><title>Online hardened meeting of March</title><link href="http://192.168.1.71:8000/2014/03/online-hardened-meeting-of-march/" rel="alternate"></link><published>2014-03-27T23:44:00+01:00</published><updated>2014-03-27T23:44:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-03-27:/2014/03/online-hardened-meeting-of-march/</id><summary type="html">&lt;p&gt;I'm back from the depths of the unknown, so time to pick up my usual
write-up of the online Gentoo Hardened meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 is being worked on, and might be released by end of April (based
on the amount of open bugs). You can find the &lt;a href="http://gcc.gnu.org/gcc-4.9/changes.html"&gt;changes …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm back from the depths of the unknown, so time to pick up my usual
write-up of the online Gentoo Hardened meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.9 is being worked on, and might be released by end of April (based
on the amount of open bugs). You can find the &lt;a href="http://gcc.gnu.org/gcc-4.9/changes.html"&gt;changes
online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Speaking of GCC, pipacs asked if it is possible in the upcoming 4.8.2
ebuilds to disable the SSP protection for development purposes (such as
when you're developing GCC plugins that do similar protection measures
like SSP, but you don't want those to collide with each other). Recent
discussion on Gentoo development mailinglist had a consensus that the
SSP protection measures (&lt;code&gt;-fstack-protector&lt;/code&gt;) can be enabled by default,
but of course if people are developing new GCC plugins which might
interfere with SSP, disabling it is needed. One can use
&lt;code&gt;-fno-stack-protector&lt;/code&gt; for this, or build stuff with &lt;code&gt;-D__KERNEL__&lt;/code&gt; (as
for kernel builds the default SSP handling is disabled anyway, allowing
for kernel-specific implementations).&lt;/p&gt;
&lt;p&gt;Other than those, there is no direct method to make SSP generally
unavailable.&lt;/p&gt;
&lt;p&gt;Blueness is also working on &lt;a href="http://www.musl-libc.org/"&gt;musc-libc&lt;/a&gt; on
Gentoo, which would give a strong incentive for hardened embedded
devices. For desktops, well, don't hold your breath just yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel grSec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It looks like kernel 3.13 will be Ubuntu's LTS kernel choice, which also
makes it the kernel version that grSecurity will put the long term
support for in. And with Linux 3.14 almost out, the grsec patches for it
are ready as well. Of the previous LTS kernels, 3.2 will probably finish
seeing grsec support somewhere this year.&lt;/p&gt;
&lt;p&gt;The C wrapper (called &lt;strong&gt;install-xattr&lt;/strong&gt;) used to preserve xattr
information during Portage builds has not been integrated in Portage
yet, but the development should be finished.&lt;/p&gt;
&lt;p&gt;During the chat session, we also discussed the
&lt;a href="https://lwn.net/Articles/274859/"&gt;gold&lt;/a&gt;
&lt;a href="https://wiki.gentoo.org/wiki/Gold"&gt;linker&lt;/a&gt; and how it might be used by
more and more packages (so not only by users that explicitly ask for
it). udev version 210 onwards is one example, but some others exist. But
other than its existence there's not much to say right here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The
&lt;a href="http://oss.tresys.com/projects/refpolicy/wiki/DownloadRelease"&gt;20140311&lt;/a&gt;
release of the reference policy is now in the Portage tree.&lt;/p&gt;
&lt;p&gt;Also, prometheanfire caught a vulnerability
(&lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-1874"&gt;CVE-2014-1874&lt;/a&gt;)
in SELinux which has been fixed in the latest kernels.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I made a few updates to the &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/"&gt;gentoo hardening
guide&lt;/a&gt; in
XCCDF/OVAL format. Nothing major, and I still need to add in a lot of
other best practices (as well as automate the tests through OVAL), but I
do intend to update the files (at least the gentoo one and ssh as
OpenSSH 6 is now readily available) regularly in the next few weeks.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few minor changes have been made to &lt;code&gt;hardened/uclibc&lt;/code&gt; to support
multilib, but other than that nothing has been done (nor needed to be
done) to our profiles.&lt;/p&gt;
&lt;p&gt;That's it for this months hardened meeting write-up. See you next time!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Fixing the busybox build failure</title><link href="http://192.168.1.71:8000/2014/03/fixing-the-busybox-build-failure/" rel="alternate"></link><published>2014-03-26T14:18:00+01:00</published><updated>2014-03-26T14:18:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-03-26:/2014/03/fixing-the-busybox-build-failure/</id><summary type="html">&lt;p&gt;Since a few months I have a build failure every time I try to generate
an initial ram file system (as my current primary workstation uses a
separate &lt;code&gt;/usr&lt;/code&gt; and LVM for everything except &lt;code&gt;/boot&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* busybox: &amp;gt;&amp;gt; Compiling...
* ERROR: Failed to compile the &amp;quot;all&amp;quot; target...
* 
* -- Grepping log... --
* 
*           - busybox-1.7.4-signal-hack.patch …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Since a few months I have a build failure every time I try to generate
an initial ram file system (as my current primary workstation uses a
separate &lt;code&gt;/usr&lt;/code&gt; and LVM for everything except &lt;code&gt;/boot&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* busybox: &amp;gt;&amp;gt; Compiling...
* ERROR: Failed to compile the &amp;quot;all&amp;quot; target...
* 
* -- Grepping log... --
* 
*           - busybox-1.7.4-signal-hack.patch
* busybox: &amp;gt;&amp;gt; Configuring...
*COMMAND: make -j2 CC=&amp;quot;gcc&amp;quot; LD=&amp;quot;ld&amp;quot; AS=&amp;quot;as&amp;quot;  
*  HOSTCC  scripts/basic/fixdep
*make: execvp: /var/tmp/genkernel/18562.2920.28766.17301/busybox-1.20.2/scripts/gen_build_files.sh: Permission denied
*make: *** [gen_build_files] Error 127
*make: *** Waiting for unfinished jobs....
*/bin/sh: scripts/basic/fixdep: Permission denied
*make[1]: *** [scripts/basic/fixdep] Error 1
*make: *** [scripts_basic] Error 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I know it isn't SELinux that is causing this, as I have no denial
messages and even putting SELinux in permissive mode doesn't help. Today
I found the time to look at it with more fresh eyes, and noticed that it
wants to execute a file (&lt;code&gt;gen_build_files.sh&lt;/code&gt;) situated in &lt;code&gt;/var/tmp&lt;/code&gt;
somewhere. That file system however is mounted with &lt;code&gt;noexec&lt;/code&gt; (amongst
other settings) so executing anything from within that file system is
not allowed.&lt;/p&gt;
&lt;p&gt;The solution? Update &lt;code&gt;/etc/genkernel.conf&lt;/code&gt; and have &lt;code&gt;TMPDIR&lt;/code&gt; point to a
location where executing &lt;em&gt;is&lt;/em&gt; allowed. Of course, this being a SELinux
system, the new location will need to be labeled as &lt;code&gt;tmp_t&lt;/code&gt; as well, but
that's just a simple thing to do.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# semanage fcontext -a -t tmp_t /var/build/genkernel(/.*)?
~# restorecon -R /var/build/genkernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The new location is not world-writable (only for root as only root
builds initial ram file systems here) so not having &lt;code&gt;noexec&lt;/code&gt; here is ok.&lt;/p&gt;</content><category term="Gentoo"></category><category term="busybox"></category><category term="genkernel"></category><category term="Gentoo"></category><category term="initramfs"></category><category term="initrd"></category><category term="noexec"></category><category term="tmp"></category></entry><entry><title>Create your own SELinux Gentoo profile</title><link href="http://192.168.1.71:8000/2014/03/create-your-own-selinux-gentoo-profile/" rel="alternate"></link><published>2014-03-24T21:51:00+01:00</published><updated>2014-03-24T21:51:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-03-24:/2014/03/create-your-own-selinux-gentoo-profile/</id><summary type="html">&lt;p&gt;Or any other profile for that matter ;-)&lt;/p&gt;
&lt;p&gt;A month or so ago we got the question how to enable SELinux on a Gentoo
profile that doesn't have a &lt;code&gt;&amp;lt;some profilename&amp;gt;/selinux&lt;/code&gt; equivalent.
Because we don't create SELinux profiles for all possible profiles out
there, having a way to do this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Or any other profile for that matter ;-)&lt;/p&gt;
&lt;p&gt;A month or so ago we got the question how to enable SELinux on a Gentoo
profile that doesn't have a &lt;code&gt;&amp;lt;some profilename&amp;gt;/selinux&lt;/code&gt; equivalent.
Because we don't create SELinux profiles for all possible profiles out
there, having a way to do this yourself is good to know.&lt;/p&gt;
&lt;p&gt;Sadly, the most efficient way to deal with this isn't supported by
Portage: creating a &lt;code&gt;parent&lt;/code&gt; file pointing to
&lt;code&gt;/usr/portage/profiles/features/selinux&lt;/code&gt; in &lt;code&gt;/etc/portage/profile&lt;/code&gt;, as
is done for all SELinux enabled profiles. The &lt;code&gt;/etc/portage/profile&lt;/code&gt;
location (where users can do local changes to the profile settings) does
not support a &lt;code&gt;parent&lt;/code&gt; file in there.&lt;/p&gt;
&lt;p&gt;Luckily, enabling SELinux is a matter of merging the files in
&lt;code&gt;/usr/portage/profiles/features/selinux&lt;/code&gt; into &lt;code&gt;/etc/portage/profile&lt;/code&gt;. If
you don't have any files in there, you can blindly copy over the files
from &lt;code&gt;features/selinux&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; &lt;em&gt;aballier&lt;/em&gt; on &lt;code&gt;#gentoo-dev&lt;/code&gt; mentioned that you can create a
&lt;code&gt;/etc/portage/make.profile&lt;/code&gt; directory (instead of having it be a symlink
managed by &lt;strong&gt;eselect profile&lt;/strong&gt;) which does support &lt;code&gt;parent&lt;/code&gt; files. In
that case, just create one with two entries: one path to the profile you
want, and one path to the &lt;code&gt;features/selinux&lt;/code&gt; location.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="profile"></category></entry><entry><title>Closing week? No, starting week...</title><link href="http://192.168.1.71:8000/2014/03/closing-week-no-starting-week/" rel="alternate"></link><published>2014-03-16T21:36:00+01:00</published><updated>2014-03-16T21:36:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-03-16:/2014/03/closing-week-no-starting-week/</id><summary type="html">&lt;p&gt;I've been away for a while, and this week will (hopefully) be the last
week of all the effort that is causing this. And that means I'll get
back to blogging, documentation development, SELinux integration,
SELinux policy development and more. To be honest, I'm eagerly awaiting
this moment of getting …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been away for a while, and this week will (hopefully) be the last
week of all the effort that is causing this. And that means I'll get
back to blogging, documentation development, SELinux integration,
SELinux policy development and more. To be honest, I'm eagerly awaiting
this moment of getting back on my feet.&lt;/p&gt;
&lt;p&gt;That doesn't mean it's been silent the last few months. A few days ago,
the Reference Policy made a new release of the policy. For Gentoo, that
won't be a major update as we already follow the reference policy (git
repository) quite closely with our policy packages. I'll hopefully merge
the last few changes and bump the version on the Gentoo policy packages
as well soon.&lt;/p&gt;
&lt;p&gt;The Gentoo wiki has seen quite a few updates. I tried to approve most of
the translation-ready changes a few days ago. Those that I didn't do I
should get feedback on (through the Talk/Discussion pages) in the next
week.&lt;/p&gt;
&lt;p&gt;And then on to the huge backlog of issues on bugzie...&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Can Gentoo play a role in a RHEL-only environment?</title><link href="http://192.168.1.71:8000/2014/01/can-gentoo-play-a-role-in-a-rhel-only-environment/" rel="alternate"></link><published>2014-01-09T04:13:00+01:00</published><updated>2014-01-09T04:13:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2014-01-09:/2014/01/can-gentoo-play-a-role-in-a-rhel-only-environment/</id><summary type="html">&lt;p&gt;Sounds like a stupid question, as the answer is already in the title. If
a company has only RedHat Enterprise Linux as allowed / supported Linux
platform (be it for a support model requirement, ISV certification,
management tooling support or what not) how could or would Gentoo still
play a role …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sounds like a stupid question, as the answer is already in the title. If
a company has only RedHat Enterprise Linux as allowed / supported Linux
platform (be it for a support model requirement, ISV certification,
management tooling support or what not) how could or would Gentoo still
play a role in it.&lt;/p&gt;
&lt;p&gt;But the answer is, surprisingly, that Gentoo can still be made available
in the company architecture. One of the possible approaches is a
&lt;em&gt;virtual appliance&lt;/em&gt; role.&lt;/p&gt;
&lt;p&gt;Virtual appliances are entire operating systems, provided through VM
images (be it VMDK or in an
&lt;a href="http://en.wikipedia.org/wiki/Open_Virtualization_Format"&gt;OVF&lt;/a&gt; package),
which offer a well defined service to its consumers. More and more
products are being presented as virtual appliances. Why not - in the
past, they would be in sealed hardware appliances (but still running
some form of Linux on it) but nowadays the hypervisor and other
infrastructure is strong and powerful enough to handle even the most
intensive tasks in a virtual guest.&lt;/p&gt;
&lt;p&gt;Gentoo is extremely powerful as a meta-distribution. You can tweak,
update, enhance and tune a Gentoo Linux installation to fulfill whatever
requirement you have. And in the end, you can easily create a virtual
image from it, and have it run as a virtual appliance in the company.&lt;/p&gt;
&lt;p&gt;An example could be to offer a web-based password management suite. A
Gentoo Linux deployment could be created, fully
&lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;hardened&lt;/a&gt; of course,
with a MAC such as SELinux active. On it, a properly secured web server
with the password management suite, with underlying database (of course
only listening on localhost - don't want to expose the database to the
wider network). Through a simple menu, the various administrative
services needed to integrate the "appliance" in a larger environment can
be configured: downloading an SSL certificate request (and uploading the
signed one), (encrypted) backup/restore routines, SNMP configuration and
more.&lt;/p&gt;
&lt;p&gt;If properly designed, all configuration data could be easily exported
and imported (or provided through a secundary mount) so that updates on
the appliance are as simple as booting a new image and
uploading/mounting the configuration data.&lt;/p&gt;
&lt;p&gt;Building such a virtual appliance can be simplified with &lt;a href="http://www.gentoo.org/proj/en/gentoo-alt/prefix/"&gt;Gentoo
Prefix&lt;/a&gt;, multi-tenancy
on the web application level through the
&lt;a href="http://www.gentoo.org/proj/en/webapps/index.xml"&gt;webapp-config&lt;/a&gt; tool
while all necessary software is readily available in the Portage tree.&lt;/p&gt;
&lt;p&gt;All you need is some imagination...&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="linux"></category><category term="vappliance"></category><category term="virtual appliance"></category></entry><entry><title>Upgrading old Gentoo installations</title><link href="http://192.168.1.71:8000/2013/12/upgrading-old-gentoo-installations/" rel="alternate"></link><published>2013-12-29T14:18:00+01:00</published><updated>2013-12-29T14:18:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-12-29:/2013/12/upgrading-old-gentoo-installations/</id><summary type="html">&lt;p&gt;Today I got "pinged" on &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=463240"&gt;bug
#463240&lt;/a&gt; about the
difficulty of upgrading a Gentoo Linux deployment after a long time of
inactivity on the system. We already have an &lt;a href="https://wiki.gentoo.org/wiki/Upgrading_Gentoo"&gt;Upgrading
Gentoo&lt;/a&gt; article on the
Gentoo wiki that describes in great detail how upgrades can be
accomplished. But one of the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I got "pinged" on &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=463240"&gt;bug
#463240&lt;/a&gt; about the
difficulty of upgrading a Gentoo Linux deployment after a long time of
inactivity on the system. We already have an &lt;a href="https://wiki.gentoo.org/wiki/Upgrading_Gentoo"&gt;Upgrading
Gentoo&lt;/a&gt; article on the
Gentoo wiki that describes in great detail how upgrades can be
accomplished. But one of the methods I personally suggest most is to do
small, incremental upgrades.&lt;/p&gt;
&lt;p&gt;Say you have a system from early 2009. Not too long ago, but also not
that recent anymore. If you would upgrade that system using the regular
approach, your system would probably be using a non-existing profile
(the &lt;code&gt;/etc/make.profile&lt;/code&gt; symlink would point to a non-existing
location), and if you switch the profile to an existing one, you might
have to deal with problems like the profile requiring certain features
(or EAPI version) that the software currently available on your system
doesn't support.&lt;/p&gt;
&lt;p&gt;This problem is mentioned in the upgrade guide through the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure your Portage is updated before performing any profile
changes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, it does not tell how to update Portage. In my opinion the best
way forward is to install an older Portage tree snapshot (somewhat more
recent than your own deployment) and upgrade &lt;em&gt;at least&lt;/em&gt; portage, perhaps
also the packages belonging to the &lt;em&gt;system&lt;/em&gt; set. So for a system that
has not been updated since January 2009, you might want to try the
portage tree snapshot of July 2009, then January 2010, then July 2010,
etc. until you have a recent deployment again.&lt;/p&gt;
&lt;p&gt;All that is left for you to do is to find such a snapshot (as the
Portage tree snapshots from the mirrors are cleaned out after a few
months). I try to keep a set of &lt;a href="http://dev.gentoo.org/~swift/snapshots/"&gt;Portage tree snapshots
available&lt;/a&gt; with a 2-month
period which should be sufficient for most users to gradually upgrade
their systems.&lt;/p&gt;
&lt;p&gt;Considering I've used this method a few times already I'm going to add
them to the &lt;a href="https://wiki.gentoo.org/wiki/Upgrading_Gentoo"&gt;upgrading
instructions&lt;/a&gt; as well.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="portage"></category><category term="snapshot"></category><category term="upgrade"></category></entry><entry><title>December hardened meeting</title><link href="http://192.168.1.71:8000/2013/12/december-hardened-meeting/" rel="alternate"></link><published>2013-12-20T10:20:00+01:00</published><updated>2013-12-20T10:20:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-12-20:/2013/12/december-hardened-meeting/</id><summary type="html">&lt;p&gt;Yesterday evening (UTC, that is) the members of the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project filled
the #gentoo-hardened IRC channel again - it was time for another online
follow-up meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few patches on the toolchain need to be created to mark SSP as
default, but this is just a minor workload.&lt;/p&gt;
&lt;p&gt;And …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday evening (UTC, that is) the members of the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project filled
the #gentoo-hardened IRC channel again - it was time for another online
follow-up meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few patches on the toolchain need to be created to mark SSP as
default, but this is just a minor workload.&lt;/p&gt;
&lt;p&gt;And on the &lt;a href="http://code.google.com/p/address-sanitizer/"&gt;ASAN (Address
Sanitizer)&lt;/a&gt; debacle;
well... still the same. Doesn't work with PaX. I think there is a
standstill on this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel, grsecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is not clear yet what the next LTS (Long Term Stable) kernel will be
that the &lt;a href="https://grsecurity.net/"&gt;grSecurity&lt;/a&gt; team will support. This
depends on the Ubuntu LTS support, and as it is not clear which kernel
that distribution will use for LTS, the grSecurity team can also not say
what kernel it will be. (So please stop asking ;-)&lt;/p&gt;
&lt;p&gt;grsecurity 3.0 is out, with the following commit message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;commit 4f48151d49f2697c3e2e108a50513a8d61fb150d
Author: Brad Spengler 
Date:   Sun Nov 24 17:47:14 2013 -0500

    Version bumped to 3.0 (we&amp;#39;d been on 2.9.1 for way too long and numerous
    features have been added since then)

    Introduce new atomic RBAC reload method, developed as part of sponsorship
    by EIG

    This is accompanied by an updated 3.0 gradm which will use the new reload
    method when -R is passed to gradm.  The old method will still be available
    via gradm -r (which is what a 2.9.1 gradm will continue to use).

    The new RBAC reload method is atomic in the sense that at no point in the
    reload process will the system not be covered by a coherent full policy.
    In contrast to previous reload behavior, it also preserves inherited subjects
    and special roles.

    The old RBAC reload method has also been made atomic.  Both methods have
    been updated to perform role_allowed_ip checks only against the IP tagged
    to the task at the time its role was first applied or changed.  This resolves
    long-standing usability problems with the use of role_allowed_ip and matches
    the policies created by learning.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The new version requires the use of &lt;code&gt;&amp;gt;=gradm-3.0&lt;/code&gt;. Some hardened-sources
packages already contain the 3.0 patchset (currently in testing). In a
few days, a final hardened-sources with a 2.9.1 patchset will be
stabilized; after that, only 3.0 patchset sources will be used.&lt;/p&gt;
&lt;p&gt;Another open issue (for a while) is the &lt;code&gt;install.py&lt;/code&gt; wrapper used to
properly pax-mark binaries during package building (instead of
post-merge changes). Although it works functionally well, it has serious
performance regressions when hundreds of files need to be merged and
marked. For each file, the Python interpreter is launched again, making
this a very time-consuming effort. Blueness is currently working on a
C-based wrapper which should load much faster.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The live repository of the Gentoo Hardened policies is well up to date
with the latest evolutions of the reference policy. If you want to use
these, use the &lt;code&gt;-9999&lt;/code&gt; ebuilds for the SELinux policy packages. This can
be accomplished with the following line in
&lt;path&gt;package.accept_keywords&lt;/path&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sec-policy/* **
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recently, revision 5 of the SELinux policies has been pushed to the tree
(currently in testing). This one also contains a few required changes to
the policy for the new userspace utilities which are also now available
in the tree. An important update on the new userspace utilities is that
they contain many of the patches we needed in Gentoo and of course the
necessary updates, patches and improvements all-round. Once the SELinux
policies are stabilized, the userspace utilities will be too.&lt;/p&gt;
&lt;p&gt;After a few successful runs with SELinux on ARM devices, we will most
likely be tagging our SELinux packages (policies and userspace
utilities) as &lt;code&gt;~arm&lt;/code&gt;. Documentation will need to be updated on this as
well, not only to cater for the additional keyword, but also because of
one (perhaps a few) changes needed, like fixing the SELinux binary
policy (as most ARM systems come with a lower kernel version).&lt;/p&gt;
&lt;p&gt;SELinux support on ZFS also seems to work well, with the last patches in
(thanks to prometheanfire).&lt;/p&gt;
&lt;p&gt;As a final aspect, the SELinux eclass in Gentoo Linux now also supports
fetching the latest policy sources from git through HTTP (instead of
git/ssh).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Not much to discuss here; IMA/EVM and kernel signing all work well.&lt;/p&gt;
&lt;p&gt;In the next few days/weeks, I will be working on a &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/gentoo.html"&gt;Gentoo Security
Benchmark&lt;/a&gt;
as a sort-of follow-up (improvement) of the current &lt;a href="http://www.gentoo.org/doc/en/security/"&gt;Gentoo Security
Handbook&lt;/a&gt;, now using SCAP
methods.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There has been discussion about supporting a &lt;a href="http://www.gentoo.org/doc/en/security/"&gt;hardened desktop
profile&lt;/a&gt; in Gentoo again. This
does come with the nasty surprise that these profiles don't play well
together, so a solution needs to be brought in place. This could be a
"hardened desktop" profile separate from the gentoo desktop one (and as
such manually synchronized), or an improved approach on profile
stacking.&lt;/p&gt;
&lt;p&gt;One idea was to support stacking with a maximum depth, allowing to use
changes made by a profile without inheriting the changes that that
profile inherited to a certain extend.&lt;/p&gt;
&lt;p&gt;Another idea is to use a more dependency-based syntax (similar to OpenRC
dependency system for init scripts), which not only allows for proper
stacking and the necessary flexibility, but also improves readability:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;before {
  hardened/linux/amd64
}
after {
  default/linux/amd64
}
depends {
  targets/desktop/gnome
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next few months will be interesting to see how this will evolve ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All our documents are on the &lt;a href="https://wiki.gentoo.org"&gt;wiki&lt;/a&gt;, so if you
notice gaps or see possibilities for improvement - by all means, do
them.&lt;/p&gt;
&lt;p&gt;All in all a good session. Thanks for the good work guys!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>GPT or MBR in the Gentoo Handbook</title><link href="http://192.168.1.71:8000/2013/12/gpt-or-mbr-in-the-gentoo-handbook/" rel="alternate"></link><published>2013-12-18T12:25:00+01:00</published><updated>2013-12-18T12:25:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-12-18:/2013/12/gpt-or-mbr-in-the-gentoo-handbook/</id><summary type="html">&lt;p&gt;I just committed a set of changes against the Gentoo Handbook (x86 and
amd64) with the intent to have better instructions on GPT (GUID
Partition Table) layout versus MBR (Master Boot Record) or MSDOS-style
layout.&lt;/p&gt;
&lt;p&gt;The part on "Preparing the Disks" saw the most changes. It starts with
explaining the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just committed a set of changes against the Gentoo Handbook (x86 and
amd64) with the intent to have better instructions on GPT (GUID
Partition Table) layout versus MBR (Master Boot Record) or MSDOS-style
layout.&lt;/p&gt;
&lt;p&gt;The part on "Preparing the Disks" saw the most changes. It starts with
explaining the differences between the two layouts with advantages and
disadvantages. It then helps the user decide what layout is best for him
(or her).&lt;/p&gt;
&lt;p&gt;Second, the &lt;em&gt;example&lt;/em&gt; (and let me stress that one out again, because
many people have reported bugs on it: it is an &lt;em&gt;example&lt;/em&gt;) partition
layout now includes a BIOS boot partition in the beginning, 2 MB in
size. This is to support GRUB2 on GPT, but doesn't hurt for GRUB2 with
the MSDOS-style layout either. That means that the partition numbers now
move up one (the &lt;em&gt;example&lt;/em&gt; /boot is now at sda2, the swap at sda3 and
root on sda4).&lt;/p&gt;
&lt;p&gt;The partitioning instructions now also include the proper alignment
instructions (using MB alignment), and use parted as the default
partitioning method.&lt;/p&gt;
&lt;p&gt;The changes are submitted to CVS so will show up on the Gentoo site in
an hour or so (documentation on the sites is synchronized hourly if I'm
not mistaken). Please do give it a good read and report bugs on
&lt;a href="https://bugs.gentoo.org"&gt;bugs.gentoo.org&lt;/a&gt;. You might also want to ping
me on IRC if it is urgent, although no guarantees that I'm behind my
computer at any point.&lt;/p&gt;</content><category term="Gentoo"></category><category term="documentation"></category><category term="fdisk"></category><category term="gdp"></category><category term="Gentoo"></category><category term="gpt"></category><category term="handbook"></category><category term="mbr"></category><category term="parted"></category></entry><entry><title>Gentoo SELinux policy release script</title><link href="http://192.168.1.71:8000/2013/12/gentoo-selinux-policy-release-script/" rel="alternate"></link><published>2013-12-11T18:37:00+01:00</published><updated>2013-12-11T18:37:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-12-11:/2013/12/gentoo-selinux-policy-release-script/</id><summary type="html">&lt;p&gt;A few months ago, I wrote a small script that aids in the creation of
new SELinux policy packages. The script is on the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;repository&lt;/a&gt;
itself, in the &lt;code&gt;gentoo/&lt;/code&gt; subdirectory, and is called
&lt;code&gt;release-prepare.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The reason for the script is that there are a number of steps to
perform …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few months ago, I wrote a small script that aids in the creation of
new SELinux policy packages. The script is on the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-refpolicy.git;a=summary"&gt;repository&lt;/a&gt;
itself, in the &lt;code&gt;gentoo/&lt;/code&gt; subdirectory, and is called
&lt;code&gt;release-prepare.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The reason for the script is that there are a number of steps to
perform, one of which (tagging the release) I forgot to do too often. So
today I made a new release of the policy packages (2.20130424-r4) with
the script, and decided to blog about it as other developers in the
hardened team might one day be asked to make a release when I'm not
available.&lt;/p&gt;
&lt;p&gt;When the script is called, it spits out the usual help information.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sh release-prepare.sh -h
Usage: release-prepare.sh

Example: release-prepare.sh 2.20130424-r2 2.20130424-r3

The script will copy the ebuilds of the  towards the
 and update the string occurrences of that version
(mostly for the BASEPOL variable).

The following environment variables must be declared correctly for the script
to function properly:
  - GENTOOX86 should point to the gentoo-x86 checkout
    E.g. export GENTOOX86=&amp;quot;/home/user/dev/gentoo-x86&amp;quot;
  - HARDENEDREFPOL should point to the hardened-refpolicy.git checkout
    E.g. export HARDENEDREFPOL=&amp;quot;/home/user/dev/hardened-refpolicy&amp;quot;
  - REFPOLRELEASE should point to the current latest /release/ of the reference
    policy (so NOT to a checkout), extracted somewhere on the file system.
    E.g. export REFPOLRELEASE=&amp;quot;/home/user/local/refpolicy-20130424&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So first, we need to export three environment variables needed by the
script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GENTOOX86&lt;/code&gt; points to the CVS checkout of the Portage tree. It is
    used to create new ebuilds.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HARDENEDREFPOL&lt;/code&gt; is the git checkout of the policy repository. This
    one is used to read the changes from to generate a patch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REFPOLRELEASE&lt;/code&gt; is an extracted &lt;code&gt;refpolicy-20130424.tar.gz&lt;/code&gt; (the
    upstream release of the reference policy). This extracted location
    is needed to generate the patch (the difference between our
    repository and the upstream release).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After setting the variables, the script does its magic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sh release-prepare.sh 2.20130424-r3 2.20130424-r4
Creating patch 0001-full-patch-against-stable-release.patch... done
Creating patch bundle for 2.20130424-r4... done
Copying patch bundle into /usr/portage/distfiles and dev.g.o... done
Removing old patchbundle references in Manifest (in case of rebuild)... done
Creating new ebuilds based on old version... done
Marking ebuilds as ~arch... done
Creating tag 2.20130424-r4 in our repository... done
The release has now been prepared.

Please go do the following to finish up:
- In /home/swift/dev/gentoo-x86/sec-policy go &amp;quot;cvs add&amp;quot; all the new ebuilds
- In /home/swift/dev/gentoo-x86/sec-policy run &amp;quot;repoman manifest&amp;quot; and &amp;quot;repoman full&amp;quot;

Then, before finally committing - do a run yourself, ensuring that the right
version is deployed of course:
- &amp;quot;emerge -1 sec-policy/selinux-aide
sec-policy/selinux-alsa
...
Only then do a &amp;#39;repoman commit -m &amp;#39;Release of 2.20130424-r4&amp;#39;&amp;#39;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script performs the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It creates the patch with the difference between the main refpolicy
    release and our repository. Our repository closely follows the
    upstream release, but still contains quite a few changes that have
    not been upstreamed yet (due to history loss of the changes, or the
    changes are very gentoo-specific, or the changes still need to
    be improved). In the past, we maintained all the patches separately,
    but this meant that the deployment of the policy ebuilds took too
    long (around 100 patches being applied takes a while, and took more
    than 80% of the total deployment time on a regular server system).
    By using a single patch file, the deployment time is
    reduced drastically.&lt;/li&gt;
&lt;li&gt;It then compresses this patch file and stores it in
    &lt;code&gt;/usr/portage/distfiles&lt;/code&gt; (so that later &lt;code&gt;repoman manifest&lt;/code&gt; can take
    the file into account) as well as on my dev.gentoo.org location
    (where it is referenced). If other developers create a release, they
    will need to change this location (and the pointer in the ebuilds).&lt;/li&gt;
&lt;li&gt;Previous file references in the &lt;code&gt;Manifest&lt;/code&gt; files are removed, so
    that &lt;code&gt;repoman&lt;/code&gt; does not think the digest can be skipped.&lt;/li&gt;
&lt;li&gt;New ebuilds are created, copied from the previous version. In these
    ebuilds, the &lt;code&gt;KEYWORDS&lt;/code&gt; variable is updated to only contain
    &lt;code&gt;~arch&lt;/code&gt; keywords.&lt;/li&gt;
&lt;li&gt;A release tag is created in the git repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then the script tells the user to add the new files to the repository,
run &lt;code&gt;repoman manifest&lt;/code&gt; and &lt;code&gt;repoman full&lt;/code&gt; to verify the quality of the
ebuilds and generate the necessary digests. Then, and also after
testing, the created ebuilds can be committed to the repository.&lt;/p&gt;
&lt;p&gt;The last few steps have explicitly not been automated so the developer
has the chance to update the ebuilds (in case more than just the policy
contents has changed between releases) or do dry runs without affecting
the &lt;code&gt;gentoo-x86&lt;/code&gt; repository.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="policy"></category><category term="release"></category><category term="selinux"></category></entry><entry><title>November online hardened meeting</title><link href="http://192.168.1.71:8000/2013/12/november-online-hardened-meeting/" rel="alternate"></link><published>2013-12-11T12:12:00+01:00</published><updated>2013-12-11T12:12:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-12-11:/2013/12/november-online-hardened-meeting/</id><summary type="html">&lt;p&gt;Later than usual, as I wasn't able to make the meeting myself (thus had
to wait for the meeting logs in order to draft up this summary), so here
it is. The next meeting is scheduled for next week, btw ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The 4.8.2 ebuild for GCC is available …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Later than usual, as I wasn't able to make the meeting myself (thus had
to wait for the meeting logs in order to draft up this summary), so here
it is. The next meeting is scheduled for next week, btw ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The 4.8.2 ebuild for GCC is available in the tree, currently still
masked.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The grSecurity project has made the patches for the 3.12 kernel
available; a hardened 3.12 kernel is available in the
&lt;code&gt;hardened-development&lt;/code&gt; overlay.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matthew is working on &lt;a href="https://github.com/zfsonlinux/zfs/pull/1835"&gt;ZFSonLinux and
SELinux&lt;/a&gt; support.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matthew and Steev have been working on SELinux and ARM support. It seems
to work, but kernel versions matter greatly. We might want to open up
ARM keywords.&lt;/p&gt;
&lt;p&gt;That's about it. As blueness wasn't there as well, the topics were
discussed quite fast. The full logs can be found &lt;a href="http://thread.gmane.org/gmane.linux.gentoo.hardened/6117"&gt;on the gentoo-hardened
mailinglist&lt;/a&gt;.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>New SELinux userspace release</title><link href="http://192.168.1.71:8000/2013/11/new-selinux-userspace-release-2/" rel="alternate"></link><published>2013-11-05T00:06:00+01:00</published><updated>2013-11-05T00:06:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-11-05:/2013/11/new-selinux-userspace-release-2/</id><summary type="html">&lt;p&gt;Between now and an hour, Gentoo users using the \~arch branch will
notice that new versions of the &lt;a href="http://userspace.selinuxproject.org/trac/wiki/Releases"&gt;SELinux userspace
applications&lt;/a&gt;
are now available. Released on October 30th, they contain many bug fixes
sent previously as well as a couple of interesting developments and
enhancements (more work on sepolicy, for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Between now and an hour, Gentoo users using the \~arch branch will
notice that new versions of the &lt;a href="http://userspace.selinuxproject.org/trac/wiki/Releases"&gt;SELinux userspace
applications&lt;/a&gt;
are now available. Released on October 30th, they contain many bug fixes
sent previously as well as a couple of interesting developments and
enhancements (more work on sepolicy, for instance).&lt;/p&gt;
&lt;p&gt;My tests revealed only a single issue that I still need to solve
(another issue, &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=490436"&gt;bug
490436&lt;/a&gt;, is hopefully
properly worked around), which is &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=490442"&gt;bug
490442&lt;/a&gt;, where
audit2allow does not want to generate refpolicy-style SELinux policy
modules. Other than that, most infrastructural tests were successful.&lt;/p&gt;
&lt;p&gt;Two SELinux policy updates were needed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;manage_lnk_files_pattern(semanage_t, semanage_store_t, semanage_store_t)
selinux_read_policy(sysadm_t)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first one is sent upstream as I think it is an obvious one (new
userspace now using symbolic links). The other one I'm not that sure of,
but for now it works. I made the above policy changes locally; if
approved I'll commit them to our tree asap.&lt;/p&gt;
&lt;p&gt;So, go play with it and report whatever you can on
&lt;a href="https://bugs.gentoo.org"&gt;bugzilla&lt;/a&gt; (SELinux component).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened meeting 201310</title><link href="http://192.168.1.71:8000/2013/10/gentoo-hardened-meeting-201310/" rel="alternate"></link><published>2013-10-24T23:25:00+02:00</published><updated>2013-10-24T23:25:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-10-24:/2013/10/gentoo-hardened-meeting-201310/</id><summary type="html">&lt;p&gt;We gathered online again to talk about the progress, changes and other
stuff related to the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;New Developer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We welcomed Zero_Chaos as a new addition to our team. Big welcome, with
the usual IRC kick in between, ensued.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.x is unmasked and ready …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We gathered online again to talk about the progress, changes and other
stuff related to the &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo
Hardened&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;New Developer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We welcomed Zero_Chaos as a new addition to our team. Big welcome, with
the usual IRC kick in between, ensued.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.x is unmasked and ready for testing. The ASAN problem however is
not resolved and it doesn't look like upstream wants to provide the fix
for this. As a result, if you want to use ASAN, you will need to disable
UDEREF in the kernel.&lt;/p&gt;
&lt;p&gt;A difficult problem here is that, if a user forgets to disable UDEREF,
then building with ASAN will fail. If he disabled UDEREF and uses ASAN,
then booting into a UDEREF enabled kernel will fail. If he starts
building with ASAN on UDEREF kernels, things will break. Its ugly, and
unless the ASAN code is changed to support other technologies using the
address space layout information, it will remain mutually exclusive.&lt;/p&gt;
&lt;p&gt;For now, we'll properly document the situation.&lt;/p&gt;
&lt;p&gt;GCC 4.9 will end its stage1 development phase on November 21st.&lt;/p&gt;
&lt;p&gt;The uclibc stages are currently built with GCC-4.7.3-r1, except for the
MIPS architectures which use GCC 4.8.1-r1.&lt;br&gt;
The stages are built once every two months, give or take.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel grSec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Standard maintenance, such as keeping up with upstream changes, has
taken place. The XATTR problems with the &lt;strong&gt;install&lt;/strong&gt; binary/phase has
not been resolved yet due to time constraints. First focus will be on
writing the C-based wrapper to see if this significantly speeds things
up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;USE=pax_kernel&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There is ambiguity of the meaning or use of the &lt;code&gt;pax_kernel&lt;/code&gt; USE flag.
It seems to be used for multiple, exclusive things, like limiting builds
on PaX kernels or limiting run-time behavior on PaX kernels. To build
Gentoo images, developers need to set &lt;code&gt;pax_kernel&lt;/code&gt; on some packages and
disable it on others in order for the image to build properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;@blueness&amp;gt; USE=pax_kernel in the case of userland should apply patches etc, that fix the code
            so that it won&amp;#39;t trip pax protection eg mprotect
&amp;lt;@blueness&amp;gt; in the case of kernel modules, it can&amp;#39;t mean that obviously!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One of the mentioned problems is that some ebuilds only enable pax
markings when &lt;code&gt;pax_kernel&lt;/code&gt; is set. However, that shouldn't be done
conditionally. PaX markings can be done even without a PaX kernel.&lt;/p&gt;
&lt;p&gt;Zero_Chaos (new developers always have the necessary energy) will try
to update ebuilds where applicable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux and System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing worth mentioning here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profile&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many users were using hardened profiles on the desktop. In the past, we
had the desktop/hardened profiles removed (referring users to the
regular hardened profiles and asking them to update their system with
the USE flags (and other settings) they want for their desktop.
Apparently, this is giving some problems for some users, so the idea is
to reinstate the desktop/hardened profiles where the hardened settings
overrule the desktop settings.&lt;/p&gt;
&lt;p&gt;However, we should take care of tackling the issues we had in the past
(which is the reason why we removed the profiles in the first place). It
is recommended that we discuss this outside the IRC meeting to make sure
we don't reintroduce the issues again while using a flexible approach.&lt;/p&gt;
&lt;p&gt;That's it. A big thanks to the developers, contributors and thousands of
users!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="online"></category></entry><entry><title>A bug please...</title><link href="http://192.168.1.71:8000/2013/09/a-bug-please/" rel="alternate"></link><published>2013-09-30T21:53:00+02:00</published><updated>2013-09-30T21:53:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-09-30:/2013/09/a-bug-please/</id><summary type="html">&lt;p&gt;I know contacting me (or other developers) through IRC is often fast,
but having a bug report on our &lt;a href="https://bugs.gentoo.org"&gt;bugzilla&lt;/a&gt; is
very important to me and other developers. Allow me to explain a bit
why.&lt;/p&gt;
&lt;p&gt;First of all, &lt;em&gt;IRC is ephemeral&lt;/em&gt;. If we are not immediately on IRC
noticing it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know contacting me (or other developers) through IRC is often fast,
but having a bug report on our &lt;a href="https://bugs.gentoo.org"&gt;bugzilla&lt;/a&gt; is
very important to me and other developers. Allow me to explain a bit
why.&lt;/p&gt;
&lt;p&gt;First of all, &lt;em&gt;IRC is ephemeral&lt;/em&gt;. If we are not immediately on IRC
noticing it, we might not notice it at all. Even with highlights on IRC
or in a separate &lt;code&gt;/QUERY&lt;/code&gt; window we might still miss it, because the IRC
client might disconnect (for instance because the server on which we run
our chat client reboots for a kernel update, or because of some weird
issue where we decide quit/restart is better). That doesn't make IRC the
wrong method - it can be perfect to ask for some attention on a bug, and
if you are on IRC while we are tackling it, it is very easy to ask for
some feedback.&lt;/p&gt;
&lt;p&gt;A second aspect is about the &lt;em&gt;completeness of the report&lt;/em&gt;. On a bugzilla
report, you can (well, should) add in the necessary information that
developers need to troubleshoot it. Gentoo supports many setups, so the
output of &lt;code&gt;emerge --info&lt;/code&gt; and other output that might be requested (like
build logs) are very important. On IRC, a "report" might seem as simple
as "package foo has a circular dependency", but without knowing with
which package the circular dependency is or with which versions, it
might be difficult to deduce. Dependencies can even be USE-driven, so
without knowing what the USE flags are, the circular dependency issue
might not be that obvious. Having a complete bugreport (with the
necessary attachments) makes for a much easier resolution development
lifecycle.&lt;/p&gt;
&lt;p&gt;Third, and in my opinion &lt;strong&gt;extremely important&lt;/strong&gt;, is that bug reports
are &lt;em&gt;searchable&lt;/em&gt;. Other users might have the same problem you are
facing. By having a bugreport they can chime in (if the problem has not
been resolved yet), providing faster feedback (for instance, other users
give feedback on additional questions you ask while you are sleeping and
when you are back up the bug is resolved). Or, if the bug has been
resolved (but the change is still in &lt;code&gt;~arch&lt;/code&gt;) they will find the
solution more easily. And often bugreports also document the workaround
(even if just as a way for the developer to confirm that the issue is
what it is) allowing other users to switch gears faster with the
problem.&lt;/p&gt;
&lt;p&gt;Also, the entire communication chain between developer and reporter(s)
also gives a lot of interesting information. Some developers give a
lengthy explanation as to why the issue occurred (which is always useful
to know) or explain in which circumstances it would or wouldn't be
visible. Most developers also link the bug in the commits and ChangeLog
entries so that people who read through the changes can quickly find
more information about the change.&lt;/p&gt;
&lt;p&gt;Bugreports also allow for tracking by people who are not on IRC (or
mailinglists) but that do want to help out. For instance, bugs assigned
to the SELinux alias on Gentoo's bugzilla are followed up by a handful
of non-developers who often give feedback much faster than I or another
developer can. If this would be reported on IRC only, you would miss the
opportunity to work with these excellent people (and thus get a faster
resolution).&lt;/p&gt;
&lt;p&gt;Another advantage of bugreports is that dependencies between bugs can be
placed. A bug might only be resolved if another bug is resolved as well
- this dependency information is made part of bug reports to give a
clear view on the situation.&lt;/p&gt;
&lt;p&gt;Bug reports on a bugzilla (or other bug tracking software) have other
advantages as well, but the above ones are my top reasons. So while I
don't mind if I can quickly fix things I notice on IRC (such as a
missing dependency), if you want to make sure I catch it, please use
bugzilla.&lt;/p&gt;</content><category term="Gentoo"></category><category term="bugreport"></category><category term="bugs"></category><category term="bugzilla"></category><category term="Gentoo"></category></entry><entry><title>Aaaand we're back - hardened monthly meeting</title><link href="http://192.168.1.71:8000/2013/09/aaaand-were-back-hardened-monthly-meeting/" rel="alternate"></link><published>2013-09-26T22:22:00+02:00</published><updated>2013-09-26T22:22:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-09-26:/2013/09/aaaand-were-back-hardened-monthly-meeting/</id><summary type="html">&lt;p&gt;It almost feels like we had our monthly online meeting just a week ago.
Below a small write-up of the highlights. If you want to know the gory
details, just wait a few hours/days until the IRC logs are sent out ;-)
Now remember, the project does more than what …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It almost feels like we had our monthly online meeting just a week ago.
Below a small write-up of the highlights. If you want to know the gory
details, just wait a few hours/days until the IRC logs are sent out ;-)
Now remember, the project does more than what the highlights tell you -
there is lots of maintenance done "under the hood", allowing everyone to
keep using the various
&lt;a href="https://wiki.gentoo.org/wiki/Hardened/Introduction_to_Hardened_Gentoo"&gt;technologies&lt;/a&gt;
supported through our project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As per a discussion on the Gentoo development mailinglist, GCC 4.8 will
most likely have SSP enabled as default. Gentoo Hardened will still
enable full SSP (&lt;code&gt;-fstack-protector-all&lt;/code&gt;) whereas Gentoo by default will
probably work with &lt;code&gt;-fstack-protector&lt;/code&gt;). We will also still provide GCC
specifications that disable stack protection completely (the
&lt;code&gt;hardened-nossp&lt;/code&gt; specs) for when developers or users need it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grsec/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness informed us about one issue with XATTR_PAX implementation,
being the &lt;code&gt;install.py&lt;/code&gt; wrapper that we need in order to set the right
attributes as early as possible. The problem is that it is very slow (as
it is invoked over and over again, so the overhead of it being an
interpreted script becomes huge). A solution for this still has to be
defined.&lt;/p&gt;
&lt;p&gt;Some ideas are to use a compiled version, but other possible solutions
such as hooking into Portage directly or using lists have been suggested
as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing big - standard maintenance stuff, such as pushing our own
patches upstream for others to benefit (and hopefully have the master
projects include the patches so we don't need to maintain them
ourselves). Also, revision 3 of the 2.20130424 policies are now in the
tree (\~arch'ed for now).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Within Gentoo, we have a couple of SCAP scanners/software available,
such as open-scap and ovaldi. Recently, openscap-9999 is made available
(allowing users to directly use the latest openscap release) which is
used to validate and evaluate security benchmarks I am developing for
Gentoo and related services.&lt;/p&gt;
&lt;p&gt;Next to the SCAP-related developments, a
&lt;a href="https://wiki.gentoo.org/wiki/Signed_kernel_module_support"&gt;guide&lt;/a&gt; has
been put on the Gentoo wiki about using signed kernel modules.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The hardened profiles have been updated to use EAPI-5 so we can benefit
from its features, such as improved multilib support.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As I mentioned before, I'm working a bit on a &lt;a href="http://dev.gentoo.org/~swift/docs/security_benchmarks/"&gt;Gentoo Security
Benchmark&lt;/a&gt; that
can be used with SCAP software. The sources are in the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-docs.git;a=tree;f=xml/SCAP;hb=HEAD"&gt;hardened-docs&lt;/a&gt;
repository for now.&lt;/p&gt;
&lt;p&gt;Also, most/all hardened documentation is moved from the
(developer-editable only) &lt;code&gt;Project:&lt;/code&gt; namespace to the general one,
allowing users and contributors to help us with the documents as well.&lt;/p&gt;</content><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category></entry><entry><title>Underestimated or underused: Portage (e)logging</title><link href="http://192.168.1.71:8000/2013/09/underestimated-or-underused-portage-elogging/" rel="alternate"></link><published>2013-09-25T10:09:00+02:00</published><updated>2013-09-25T10:09:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-09-25:/2013/09/underestimated-or-underused-portage-elogging/</id><summary type="html">&lt;p&gt;Within 30 minutes of each other, two people on the &lt;code&gt;#gentoo&lt;/code&gt; channel
asked if Portage kept logs of the messages displayed during the build
and installation of a package. Of course, the answer is a sounding "yes"
- and depending on your needs, you can even save more of the logging …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Within 30 minutes of each other, two people on the &lt;code&gt;#gentoo&lt;/code&gt; channel
asked if Portage kept logs of the messages displayed during the build
and installation of a package. Of course, the answer is a sounding "yes"
- and depending on your needs, you can even save more of the logging. If
you haven't read the &lt;a href="http://www.gentoo.org/doc/en/handbook"&gt;Gentoo
handbook&lt;/a&gt; yet, do so - it
contains a section on &lt;a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=3&amp;amp;chap=1#doc_chap4"&gt;Logging
Features&lt;/a&gt;
that explains how and when logging is enabled.&lt;/p&gt;
&lt;p&gt;Let's start with the default &lt;em&gt;elog&lt;/em&gt; support. By default, Gentoo's
Portage will log messages that ebuild developers have put in the
packages through the use of the &lt;code&gt;elog&lt;/code&gt;, &lt;code&gt;ewarn&lt;/code&gt; and &lt;code&gt;eerror&lt;/code&gt; functions.
These methods are used by the developers to notify the administrator
about something useful or important (usually &lt;code&gt;elog&lt;/code&gt;), a potential issue
that might occur (&lt;code&gt;ewarn&lt;/code&gt;) or even a problem that was found (&lt;code&gt;eerror&lt;/code&gt;).
Let's look at a snippet of the &lt;code&gt;app-admin/eselect-postgresql-1.0.10&lt;/code&gt;
package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pkg_postinst() {
    ewarn &amp;quot;If you are updating from app-admin/eselect-postgresql-0.4 or older, run:&amp;quot;
    ewarn
    ewarn &amp;quot;    eselect postgresql update&amp;quot;
    ewarn
    ewarn &amp;quot;To get your system in a proper state.&amp;quot;
    elog &amp;quot;You should set your desired PostgreSQL slot:&amp;quot;
    elog &amp;quot;    eselect postgresql list&amp;quot;
    elog &amp;quot;    eselect postgresql set &amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, the developer warns the administrator that, if an upgrade of the
package from version 0.4 or older occurred, an additional action needs
to be taken. For others, he informs the administrators how to mark the
proper active PostgreSQL slot (using the &lt;code&gt;elog&lt;/code&gt; methods).&lt;/p&gt;
&lt;p&gt;Portage will save this information by default in &lt;code&gt;/var/log/portage/elog&lt;/code&gt;
as separate files for each deployment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ ls /var/log/portage/elog/*eselect-postgres*
/var/log/portage/elog/app-admin:eselect-postgresql-1.0.10:20130818-184756.log
/var/log/portage/elog/app-admin:eselect-postgresql-1.2.0:20130915-131631.log
/var/log/portage/elog/app-admin:eselect-postgresql-1.2.0:20130915-200851.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;FEATURES="split-elog"&lt;/code&gt; is set in your &lt;code&gt;make.conf&lt;/code&gt; file, then the
elog files will be stored in separate category subdirectories. Below is
the content of such a single file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ cat /var/log/portage/elog/app-admin\:eselect-postgresql-1.0.10\:20130818-184756.log
INFO: setup
Package:    app-admin/eselect-postgresql-1.0.10
Repository: gentoo
Maintainer: titanofold@gentoo.org postgresql
USE:        abi_x86_64 amd64 elibc_glibc kernel_linux multilib selinux userland_GNU
FEATURES:   preserve-libs sandbox selinux sesandbox
WARN: postinst
If you are updating from app-admin/eselect-postgresql-0.4 or older, run:

    eselect postgresql update

To get your system in a proper state.
LOG: postinst
You should set your desired PostgreSQL slot:
    eselect postgresql list
    eselect postgresql set &amp;lt;slot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the file, package information is provided, and each set of logging
paragraphs is accompanied with information where in the build process
the logging came up. For instance, &lt;code&gt;WARN: postinst&lt;/code&gt; sais that the
following text is through the &lt;code&gt;ewarn&lt;/code&gt; method in the post install phase
of the package installation process.&lt;/p&gt;
&lt;p&gt;By default Portage logs this, but you can ask it to mail the logs as
well. For more information about that, check the handbook link earlier
and look for the &lt;code&gt;PORTAGE_ELOG_SYSTEM&lt;/code&gt; and &lt;code&gt;PORTAGE_ELOG_MAIL*&lt;/code&gt;
variables. Or look at &lt;strong&gt;man make.conf&lt;/strong&gt; which also contains all the
information needed.&lt;/p&gt;
&lt;p&gt;Now, this only pertains to the specific logging that ebuild maintainers
added in the packages. But what if you want to keep track of all the
build logs? In that case, you need to define &lt;code&gt;PORT_LOGDIR&lt;/code&gt; in your
&lt;code&gt;make.conf&lt;/code&gt; file. This variable has to point to a location where Portage
(which usually runs as the &lt;code&gt;portage&lt;/code&gt; Linux user) has write access to and
where it is allowed to store the build logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ grep PORT_LOGDIR /etc/portage/make.conf 
PORT_LOGDIR=&amp;quot;/var/log/portage&amp;quot;
~$ ls -ldZ /var/log/portage/
drwxrwsr-x. 3 portage portage system_u:object_r:portage_log_t 679936 Sep 24 13:12 /var/log/portage/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With the variable set, build logs will be provided for each emerge (and
unmerge) operation of the package. These logs contain everything shown
on the terminal during a build process. Of course, this directory will
grow considerably in size so it is wise to properly handle old log
files. You can use logrotate for this, or just a single cronjob that
cleans up log files older than say 6 months. But Portage also provides
this functionality. If you set &lt;code&gt;FEATURES="clean-logs"&lt;/code&gt; in your
&lt;code&gt;make.conf&lt;/code&gt; file, then all log files older than 7 days will be removed
from the system. You can fine-tune this by setting &lt;code&gt;PORT_LOGDIR_CLEAN&lt;/code&gt;
to the command you want executed. Its default value can be found in the
&lt;code&gt;/usr/share/portage/config/make.globals&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you set &lt;code&gt;PORT_LOGDIR&lt;/code&gt;, be aware that the elog files (described at the
beginning) will be stored in &lt;code&gt;${PORT_LOGDIR}/elog&lt;/code&gt;. Similar to the
elogging, build logging can also be done in category subdirectories. If
&lt;code&gt;FEATURES="split-log"&lt;/code&gt; is set, the build logs will be stored in
&lt;code&gt;${PORT_LOGDIR}/build/&amp;lt;category&amp;gt;&lt;/code&gt; instead of &lt;code&gt;${PORT_LOGDIR}&lt;/code&gt; directly.&lt;/p&gt;
&lt;p&gt;Hopefully this post brings some users closer to this nice feature of
Portage.&lt;/p&gt;</content><category term="Gentoo"></category><category term="elog"></category><category term="Gentoo"></category><category term="logging"></category><category term="portage"></category></entry><entry><title>Gentoo Hardened progress report</title><link href="http://192.168.1.71:8000/2013/08/gentoo-hardened-progress-report/" rel="alternate"></link><published>2013-08-29T20:27:00+02:00</published><updated>2013-08-29T20:27:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-08-29:/2013/08/gentoo-hardened-progress-report/</id><summary type="html">&lt;p&gt;Today, we had our monthly online meeting to discuss the progress amongst
the various Gentoo Hardened projects. As usual, here is a small
write-up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead election&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As every year, we also reviewed the current project leads. No surprises
here, everybody is happy with the current leads so they are re-elected …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, we had our monthly online meeting to discuss the progress amongst
the various Gentoo Hardened projects. As usual, here is a small
write-up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lead election&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As every year, we also reviewed the current project leads. No surprises
here, everybody is happy with the current leads so they are re-elected
for another term. We did have two candidates for the lead position, but
even the other candidate vote for Zorry - so we had a unanimous vote ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC version 4.8.1 will be unmasked pretty soon, and the &lt;code&gt;hardenedno*&lt;/code&gt;
specs on it will work. However, there is still no progress on the asan
(Address Sanitizer) support together with UDEREF. As mentioned in a
previous post, UDEREF "reduces" the address space a bit which doesn't
play well with asan. Still, it isn't inevitable, since PowerPC also has
a reduced address space and so does Windows. So perhaps we can use the
same model for UDEREF enabled kernels? We'll send the suggestion and the
already-existing fixes upstream and hope for the best.&lt;/p&gt;
&lt;p&gt;In GCC 4.8.1, the &lt;code&gt;-fstack-check&lt;/code&gt; option might be enabled by default,
but the question is for which architectures and platforms. We know a few
packages, such as &lt;em&gt;ffmpeg&lt;/em&gt; and &lt;em&gt;libav&lt;/em&gt; have problems with it. In those
cases, the ebuild will be modified to use &lt;code&gt;-fno-stack-check&lt;/code&gt; (if
hardened). We opt to enable it for all as we don't really expect much
(if any) breakage that can't be dealt with swiftly.&lt;/p&gt;
&lt;p&gt;Support for hardened uClibc is still going steadily. Blueness is heating
his room a bit with it, seeing that mips32r2 takes about 2 weeks to
build hardened and vanilla stages - he is using an Ubiquity router
station for this.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and Grsecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Due to some boot freezes, as explained in bugs
&lt;a href="https://bugs.gentoo.org/482010"&gt;482010&lt;/a&gt; and
&lt;a href="https://bugs.gentoo.org/481790"&gt;481790&lt;/a&gt;, we don't have a stable 3.10.x
kernel yet. However, most of the issues should be resolved and we're
waiting for confirmation, so we can be looking at a stable 3.10.x kernel
soon.&lt;/p&gt;
&lt;p&gt;The 3.10 kernel will probably not be a long-term support kernel for PaX
and Grsecurity - such LTS kernel will be picked next year, most likely
the same kernel version that Ubuntu LTS settles on.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A small update on &lt;code&gt;policycoreutils&lt;/code&gt; has been made that updates &lt;strong&gt;rlpkg&lt;/strong&gt;
and &lt;strong&gt;selocal&lt;/strong&gt;. Other than that, our policies are in nice shape. A new
revision will be pushed to the tree soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the Integrity side, recent kernels support custom IMA policies
(again) so our documentation is accurate again. Next to IMA/EVM, I'll be
working on documentation for cryptographically signed kernel module
support soon as well as SCAP-based security baselines for Gentoo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Blueness added a MUSL-based Gentoo profile (&lt;code&gt;hardened/linux/musl&lt;/code&gt;). Musl
is an even more slim libc and its profile is extremely experimental for
now. The profile structure is still a bit off though, a reorganization
will be suggested soon so that the profile inheritance is clear and
predictable, starting off with a non-hardened one
(&lt;code&gt;default/linux/{uclibc,musl}&lt;/code&gt;) and then a hardened specific one that
inherits from the default.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://wiki.gentoo.org/wiki/Project:Hardened"&gt;Gentoo Hardened
project&lt;/a&gt; now has its main
project page on the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt;, and all
(most) documentation is moved to there as well for the Gentoo Hardened
subprojects.&lt;/p&gt;
&lt;p&gt;I also explained to the folks that I have authored a book on SELinux
System Administration (for Packt Publishing), which was why I was less
active the last few months. However, that is now done so I'm back on
track. More information about the book follows later on my blog ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And as usual, klondike has been tweeting the entire meeting through our
&lt;code&gt;@GentooHardened&lt;/code&gt; twitter account ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="minutes"></category><category term="progress_report"></category><category term="report"></category></entry><entry><title>Why our policies don't like emerge --config</title><link href="http://192.168.1.71:8000/2013/08/why-our-policies-dont-like-emerge-config/" rel="alternate"></link><published>2013-08-23T11:53:00+02:00</published><updated>2013-08-23T11:53:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-08-23:/2013/08/why-our-policies-dont-like-emerge-config/</id><summary type="html">&lt;p&gt;One of the features that Portage provides is to have post-processing
done on request of the administrator for certain packages. For instance,
for the &lt;code&gt;dev-db/postgresql-server&lt;/code&gt; package we can call its
&lt;code&gt;pkg_config()&lt;/code&gt; phase to create the PostgreSQL instance and configure it
so that the configuration of the database is stored …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the features that Portage provides is to have post-processing
done on request of the administrator for certain packages. For instance,
for the &lt;code&gt;dev-db/postgresql-server&lt;/code&gt; package we can call its
&lt;code&gt;pkg_config()&lt;/code&gt; phase to create the PostgreSQL instance and configure it
so that the configuration of the database is stored in
&lt;code&gt;/etc/postgresql-9.2&lt;/code&gt; rather than together with the data files.&lt;/p&gt;
&lt;p&gt;When you run Gentoo with SELinux however, you might already have noticed
that this doesn't work. The reason is that, whenever an administrator
calls &lt;strong&gt;emerge&lt;/strong&gt;, the process (and by default its child processes) will
run in a confined domain called &lt;code&gt;portage_t&lt;/code&gt;. The domain is still quite
privileged, but not as privileged as the administrator domain
&lt;code&gt;sysadm_t&lt;/code&gt;. It holds the rights to build software and install files,
directories and other things on the file system. But it does not support
switching users for instance, which is what the PostgreSQL
&lt;code&gt;pkg_config()&lt;/code&gt; does: it wants to run a certain command as the &lt;code&gt;postgres&lt;/code&gt;
user, which is prohibited by SELinux.&lt;/p&gt;
&lt;p&gt;I'm not sure yet how to tackle this properly. One thing is that I might
update Portage to run in the user domain by default, and transition
dynamically towards the proper domains according to the task(s) it is
executing. We already do this for building software (where we transition
to a &lt;code&gt;portage_sandbox_t&lt;/code&gt; confined domain), perhaps it can be expanded to
support transitioning to &lt;code&gt;portage_t&lt;/code&gt; when it isn't running the
&lt;code&gt;pkg_config()&lt;/code&gt; phase. But that means injecting (more) SELinux-specific
code in Portage, something I'd rather not do (introduces additional
complexity and maintenance).&lt;/p&gt;
&lt;p&gt;Another possibility would be to have administrators explicitly state
that no transition should occur, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# runcon -t sysadm_t emerge --config =dev-db/postgresql-server-9.2.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With a minor addition to the policy, this gave me a good hope... until I
noticed that &lt;strong&gt;emerge&lt;/strong&gt; underlyingly calls &lt;strong&gt;ebuild&lt;/strong&gt; and &lt;strong&gt;ebuild.sh&lt;/strong&gt;,
both labeled as &lt;code&gt;portage_exec_t&lt;/code&gt;, so these calls transition to
&lt;code&gt;portage_t&lt;/code&gt; again.&lt;/p&gt;
&lt;p&gt;I'm going to look further into this - there are quite a few options
still open.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="pkg_config"></category><category term="portage"></category><category term="selinux"></category></entry><entry><title>Using CUSTOM_BUILDOPT in refpolicy for USE flag-alike functionality?</title><link href="http://192.168.1.71:8000/2013/08/using-custom_buildopt-in-refpolicy-for-use-flag-alike-functionality/" rel="alternate"></link><published>2013-08-16T09:17:00+02:00</published><updated>2013-08-16T09:17:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-08-16:/2013/08/using-custom_buildopt-in-refpolicy-for-use-flag-alike-functionality/</id><summary type="html">&lt;p&gt;As you are probably aware, Gentoo uses the &lt;a href="http://oss.tresys.com/projects/refpolicy/"&gt;reference
policy&lt;/a&gt; as its base for
SELinux policies. Yes, we do customize it and not everything is already
pushed upstream (for instance, our approach to use &lt;code&gt;xdg_*_home_t&lt;/code&gt;
customizable types to further restrict user application access has been
sent up for comments …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As you are probably aware, Gentoo uses the &lt;a href="http://oss.tresys.com/projects/refpolicy/"&gt;reference
policy&lt;/a&gt; as its base for
SELinux policies. Yes, we do customize it and not everything is already
pushed upstream (for instance, our approach to use &lt;code&gt;xdg_*_home_t&lt;/code&gt;
customizable types to further restrict user application access has been
sent up for comments a few times but we still need to iron it out
further) but all in all, we're pretty close to the upstream releases.
This is also visible when there are changes upstream as we very easily
integrate them back in our repository.&lt;/p&gt;
&lt;p&gt;But there are still a few things that I want to implement further, and
one of these things is perhaps too specific for Gentoo but would benefit
us (security-wise) in great detail: enabling domain privileges based on
USE flags. Allow me to quickly use an example to make this more
tangible.&lt;/p&gt;
&lt;p&gt;Consider the MPlayer application. As a media application, it of course
offers support for ALSA and PulseAudio (amongst other things). In the
SELinux policy, support for (and thus privileges related to) ALSA and
PulseAudio is handled through &lt;em&gt;optional_policy&lt;/em&gt; statements:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;optional_policy(`
  pulseaudio_tmpfs_content(mplayer_tmpfs_t)
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means that the rules defined in &lt;em&gt;pulseaudio_tmpfs_content&lt;/em&gt; are
executed if the dependencies match:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;interface(`pulseaudio_tmpfs_content&amp;#39;,`
        gen_require(`
                attribute pulseaudio_tmpfsfile;
        &amp;#39;)

        typeattribute $1 pulseaudio_tmpfsfile;
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the &lt;code&gt;pulseaudio_tmpfsfile&lt;/code&gt; attribute exists, then the
&lt;code&gt;mplayer_tmpfs_t&lt;/code&gt; type gets the &lt;code&gt;pulseaudio_tmpfsfile&lt;/code&gt; attribute
assigned to it.&lt;/p&gt;
&lt;p&gt;This is flexible, because if the server/workstation does not use
PulseAudio, then in Gentoo, no pulseaudio SELinux module will be loaded
and thus the attribute will not exist. However, Gentoo tries to be a bit
more flexible in this - it is very well possible to have PulseAudio
installed, but disable PulseAudio support in MPlayer (build mplayer with
USE="-pulseaudio"). The current definitions in the policy do not support
this flexibility: if the pulseaudio module is loaded, then the
privileges become active.&lt;/p&gt;
&lt;p&gt;One way SELinux supports a more flexible approach is to use conditionals
in the policy. One could create booleans that administrators can toggle
to enable / disable SELinux rules. For instance, in the mplayer policy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tunable_policy(`allow_mplayer_execstack&amp;#39;,`
        allow mencoder_t self:process { execmem execstack };
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If an administrator toggles the &lt;code&gt;allow_mplayer_execstack&lt;/code&gt; boolean to
"on", then the mentioned &lt;code&gt;allow&lt;/code&gt; rule becomes active.&lt;/p&gt;
&lt;p&gt;Sadly, this approach is not fully usable for USE driven decisions. Not
all rules can be enclosed in &lt;code&gt;tunable_policy&lt;/code&gt; statements, and &lt;a href="http://oss.tresys.com/pipermail/refpolicy/2013-July/006452.html"&gt;assigning
attributes to a
type&lt;/a&gt;
is one of them (cfr our pulseaudio example). A recent discussion on the
reference policy mailinglist gave me two ideas to investigate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See if we can support CIL (a new language for SELinux
    policy definitions) where such an approach would be easier&lt;/li&gt;
&lt;li&gt;Use build-time decisions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, I want to go through the &lt;em&gt;build-time decisions&lt;/em&gt; idea. The
reference policy supports build-time options using &lt;em&gt;ifdef&lt;/em&gt; constructs.
These look at parameters provided by the build system (M4/Makefile
based) to see if rules need to be activated or not. For type attribute
declarations, this is a valid approach. So one idea would be to
transform USE flags, if they are set, into &lt;code&gt;use_${USEFLAG}&lt;/code&gt;, and make
decisions based on this in the policy code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ifdef(`use_pulseaudio&amp;#39;,`
  optional_policy(`
    pulseaudio_tmpfs_content(mplayer_tmpfs_t)
  &amp;#39;)
&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can add in the USE flags, if set, through the &lt;code&gt;CUSTOM_BUILDOPT&lt;/code&gt;
parameter that the reference policy provides. So introducing this is not
that difficult. The only thing I'm currently a bit weary about is the
impact on the policy files themselves (which is why I haven't done this
already) and the fact that USE flags on the "real" package are not know
to policy packages. In other words, if a user explicitly marks
&lt;code&gt;USE="-pulseaudio"&lt;/code&gt; on mplayer, but has &lt;code&gt;USE="pulseaudio"&lt;/code&gt; set as
general value, then the &lt;code&gt;selinux-mplayer&lt;/code&gt; package will still have
pulseaudio enabled.&lt;/p&gt;
&lt;p&gt;Still, I do like the idea. It would make it more consistent with what
Gentoo aims to do: if you do not want a certain support/feature in the
code, then why would the policy still have to allow it? With the proper
documentation towards administrators, I think this would be a good
approach.&lt;/p&gt;</content><category term="Gentoo"></category><category term="boolean"></category><category term="Gentoo"></category><category term="policy"></category><category term="selinux"></category><category term="use"></category><category term="useflag"></category></entry><entry><title>And now, 31 days later...</title><link href="http://192.168.1.71:8000/2013/08/and-now-31-days-later/" rel="alternate"></link><published>2013-08-01T22:43:00+02:00</published><updated>2013-08-01T22:43:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-08-01:/2013/08/and-now-31-days-later/</id><summary type="html">&lt;p&gt;... the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo Hardened&lt;/a&gt; team
had its monthly online meeting again ;-)&lt;/p&gt;
&lt;p&gt;On the agenda were the usual suspects, such as the &lt;em&gt;toolchain&lt;/em&gt;. In this
category, Zorry mentioned that he has a fix for GCC 4.8.1 for the
&lt;code&gt;hardenedno*&lt;/code&gt; and vanilla &lt;code&gt;gcc-config&lt;/code&gt; options which will be added to
the tree …&lt;/p&gt;</summary><content type="html">&lt;p&gt;... the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo Hardened&lt;/a&gt; team
had its monthly online meeting again ;-)&lt;/p&gt;
&lt;p&gt;On the agenda were the usual suspects, such as the &lt;em&gt;toolchain&lt;/em&gt;. In this
category, Zorry mentioned that he has a fix for GCC 4.8.1 for the
&lt;code&gt;hardenedno*&lt;/code&gt; and vanilla &lt;code&gt;gcc-config&lt;/code&gt; options which will be added to
the tree after some more testing. The problem is that with GCC 4.8,
certain settings need to be set sooner than before (in the code path),
which is what the fix focuses on. The ASAN issue is still unresolved,
but otherwise GCC 4.8 is working fine.&lt;/p&gt;
&lt;p&gt;On &lt;em&gt;SELinux&lt;/em&gt;, the policycoreutils package has been bumped to include
support for &lt;code&gt;mcstrans&lt;/code&gt;, a translation daemon that visualizes humanly
readable strings instead of the standard sensitivity/category sets in
case of MCS/MLS policies.&lt;/p&gt;
&lt;p&gt;Regarding documentation, the wiki team (most notably a3li) is working
hard to support project pages on the &lt;a href="https://wiki.gentoo.org"&gt;Gentoo
Wiki&lt;/a&gt;. Once we can, we will be moving our
project page with all related documentation to the wiki, allowing for
easier documentation development and a more modern look. To support
this, an XML-to-wiki stylesheet is available that translates ProjectXML
and GuideXML to the wiki language.&lt;/p&gt;
&lt;p&gt;During the meeting, we also mentioned the stabilization policy (or at
least, no-longer-stabilization) of the vanilla sources (plain kernel.org
Linux kernel sources). This doesn't immediately effect the hardened
project, but is important to know nonetheless, especially for users of
hardened technologies that are in the main kernel already (like SELinux
or IMA/EVM) as they have to be aware to either use the latest
(regardless of the keywords in use) or switch to gentoo-sources or
(preferably) hardened-sources.&lt;/p&gt;
&lt;p&gt;For uclibc support, the stages will be provided every 2 months rather
than every month as this is a resource-intensive process that isn't
fully automated yet (except for amd64 and x86 which are automated).&lt;/p&gt;
&lt;p&gt;Finally, on PaX and grSecurity support, the XATTR patch for tmpfs is now
in the kernel, and the problem about loosing PaX markings during
installation is fixed as Portage (2.1.12.9 and higher) now preserves the
flags during installation (a wrapper on &lt;code&gt;install&lt;/code&gt; is used that preserves
&lt;code&gt;usr.pax.flags&lt;/code&gt;).&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="irc"></category><category term="irl"></category><category term="meeting"></category><category term="minutes"></category><category term="pax"></category><category term="project"></category><category term="selinux"></category><category term="toolchain"></category></entry><entry><title>Adding mcstrans to Gentoo</title><link href="http://192.168.1.71:8000/2013/07/adding-mcstrans-to-gentoo/" rel="alternate"></link><published>2013-07-07T20:38:00+02:00</published><updated>2013-07-07T20:38:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-07-07:/2013/07/adding-mcstrans-to-gentoo/</id><summary type="html">&lt;p&gt;If you use SELinux, you might be using an MLS-enabled policy. These are
policies that support sensitivity labels on resources and domains. In
Gentoo, these are supported in the &lt;code&gt;mcs&lt;/code&gt; and &lt;code&gt;mls&lt;/code&gt; policy stores. Now
sensitivity ranges are fun to work with, but the moment you have several
sensitivity levels …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you use SELinux, you might be using an MLS-enabled policy. These are
policies that support sensitivity labels on resources and domains. In
Gentoo, these are supported in the &lt;code&gt;mcs&lt;/code&gt; and &lt;code&gt;mls&lt;/code&gt; policy stores. Now
sensitivity ranges are fun to work with, but the moment you have several
sensitivity levels, or you have several dozen categories (sets or tags
that can be used in conjunction with pure sensitivity levels) these can
become a burden to maintain.&lt;/p&gt;
&lt;p&gt;The SELinux developers have had the same issue, so they wrote a tool
called &lt;em&gt;mcstransd&lt;/em&gt;, a translation daemon that reads the sensitivity
labels from the SELinux context (such as &lt;code&gt;s0-s0:c0.c1023&lt;/code&gt; or &lt;code&gt;s0:c12&lt;/code&gt;)
and displays a more human readable string for this (such as
&lt;code&gt;SystemLow-SystemHigh&lt;/code&gt; or &lt;code&gt;SalesTeam&lt;/code&gt;). The daemon is not a super
intelligent one - we just configure it by creating a mapping file in
&lt;code&gt;/etc/selinux/mcs&lt;/code&gt; called &lt;code&gt;setrans.conf&lt;/code&gt; which contains the mappings:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;## setrans.conf ## s0-s0:c0.c1023=SystemLow-SystemHigh s0:c12=SalesTeam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SELinux libraries (libselinux and libsemanage) use a socket to
communicate with the daemon to see if "translated" values need to be
displayed. If not (because the daemon is missing) the libraries keep the
SELinux syntax displayed. If it is, then the translated labels are
displayed.&lt;/p&gt;
&lt;p&gt;Support for categories and sensitivity labels is handled through the
&lt;strong&gt;chcat&lt;/strong&gt; tool, so you can list the current categories (and their
translated values) as well as assign them to files (or even logins).&lt;/p&gt;
&lt;p&gt;Although we supported categories for a while already, a recent update on
the &lt;code&gt;policycoreutils&lt;/code&gt; package now includes the mcstrans daemon as well.
Documentation is available, currently in the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=7#doc_chap3"&gt;pending changes
section&lt;/a&gt;
of the SELinux handbook (as this is not in the stable package yet) and
it will be moved to the main document when the package has stabilized.&lt;/p&gt;</content><category term="Gentoo"></category><category term="categories"></category><category term="mcs"></category><category term="mcstrans"></category><category term="mls"></category><category term="selinux"></category><category term="sensitivity"></category></entry><entry><title>Hardening is our business... new monthly report ;-)</title><link href="http://192.168.1.71:8000/2013/06/hardening-is-our-business-new-monthly-report/" rel="alternate"></link><published>2013-06-27T23:03:00+02:00</published><updated>2013-06-27T23:03:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-06-27:/2013/06/hardening-is-our-business-new-monthly-report/</id><summary type="html">&lt;p&gt;We're back with another report on the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; project. Please excuse
my brevity, as you've noticed I'm not that active (yet) due to work on
an external project - I'll be back mid-July though. I promise.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Toolchain&lt;/em&gt; side, GCC 4.8.1 is in the tree and has …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We're back with another report on the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; project. Please excuse
my brevity, as you've noticed I'm not that active (yet) due to work on
an external project - I'll be back mid-July though. I promise.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Toolchain&lt;/em&gt; side, GCC 4.8.1 is in the tree and has the GCC plugin
header fix. Also, for IA64 and ARM, the necessary PIE patches are
available as well to make this work on those architectures too.&lt;/p&gt;
&lt;p&gt;For uclibc, blueness is continuing the necessary support for everything
so far. He has also added mips64 n32 uclibc because new router boards
use this.&lt;/p&gt;
&lt;p&gt;In his time, blueness is also playing with a uclibc-powered desktop and
another C library called &lt;a href="http://www.musl-libc.org/"&gt;musl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Kernel&lt;/em&gt;, &lt;em&gt;grSecurity&lt;/em&gt; and &lt;em&gt;PaX&lt;/em&gt; side, we are having troubles
with the 3.8+ kernels and UEFI machines when the machines have ltitle
memory available (for instance when it is limited with &lt;code&gt;mem=&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The PaX extended attribute support is still on-going, mainly because we
need to have support for the &lt;code&gt;user.pax&lt;/code&gt; attributes in common tools like
&lt;strong&gt;install&lt;/strong&gt;, which is heavily used in Gentoo's ebuilds. The merge phase,
where the data is moved from the image location to the root, has been
supporting xattr moves for a while thanks to zmedico and arfrever, but
other installation phases still needed to be fixed or worked around. We
tried with a common patch on this, but there was little interest in this
approach, so we settled with a wrapper around &lt;strong&gt;install&lt;/strong&gt; inside of
Portage. This will be soon released and we again have full end-to-end
xattr pax flag support.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;SELinux&lt;/em&gt; support, the latest userland and policy releases have
been stabilized in the Gentoo tree.&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;Profiles&lt;/em&gt;, blueness added a musl subprofile for testing of the
musl C library.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="progress"></category></entry><entry><title>Gentoo Hardened spring notes</title><link href="http://192.168.1.71:8000/2013/05/gentoo-hardened-spring-notes/" rel="alternate"></link><published>2013-05-16T22:54:00+02:00</published><updated>2013-05-16T22:54:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-05-16:/2013/05/gentoo-hardened-spring-notes/</id><summary type="html">&lt;p&gt;We got back together on the &lt;code&gt;#gentoo-hardened&lt;/code&gt; chat channel to discuss
the progress of &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt;, so it's time for
another write-up of what was said.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.1 will be out soon, although nothing major has occurred with it
since the last meeting. There is a plugin …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We got back together on the &lt;code&gt;#gentoo-hardened&lt;/code&gt; chat channel to discuss
the progress of &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt;, so it's time for
another write-up of what was said.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8.1 will be out soon, although nothing major has occurred with it
since the last meeting. There is a plugin header install problem in 4.8
and its not certain that the (trivial) fix is in 4.8.1, but it certainly
is inside Gentoo's release.&lt;/p&gt;
&lt;p&gt;Blueness is also (still, and hopefully for a long time ;-) maintaining
the uclibc hardened related toolchain aspects.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The further progress on the XATTR_PAX migration was put on a lower
level the past few weeks due to busy, busy... very busy weeks (but this
was announced and known in advance). We still need to do XATTR copying
in &lt;em&gt;install&lt;/em&gt; for packages that do pax markings before &lt;em&gt;src_install()&lt;/em&gt;
and include the &lt;code&gt;user.pax&lt;/code&gt; XATTR patch in the gentoo-sources kernel.
This will silence the errors for non-hardened users and fix the loss of
XATTR markings for those packages that do pax-mark before install.&lt;/p&gt;
&lt;p&gt;The set then needs to be documented further and tested on vanilla and
hardened systems.&lt;/p&gt;
&lt;p&gt;Zorry asked if a separate script can be provided for those ebuilds that
directly call &lt;strong&gt;paxctl&lt;/strong&gt;. These ebuilds might want to switch to the
eclass, but if they need to call &lt;strong&gt;paxctl&lt;/strong&gt; or similar directly (for
instance because the result is immediately used for further building), a
separate script or tool should be made available. Blueness will look
into this.&lt;/p&gt;
&lt;p&gt;On &lt;code&gt;hardened-sources&lt;/code&gt;, we are now with stable 2.6.32-r160, 3.2.42-r1 and
3.8.6 due to some vulnerabilities in earlier versions (in networking
code). There is still some bug (nfs-related) that is fixed in 3.2.44 so
that part might need a bump as well soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The
&lt;a href="http://blog.siphos.be/2013/04/introducing-selocal-for-small-selinux-policy-enhancements/"&gt;selocal&lt;/a&gt;
command is now available for Gentoo SELinux users, allowing them to
easily enhance the policy without having to maintain their own SELinux
policy modules (the script is a wrapper that does all that).&lt;/p&gt;
&lt;p&gt;The setools package now also uses the &lt;a href="http://blog.siphos.be/2013/04/sloting-the-old-swig-1/"&gt;SLOT'ed
swig&lt;/a&gt;, so no more
dependency breakage.&lt;/p&gt;
&lt;p&gt;On SELinux userspace and policy, both have seen a new release last
month, and both are already in the Gentoo portage tree.&lt;/p&gt;
&lt;p&gt;Finally, the SELinux policy ebuilds now also call
&lt;a href="http://blog.siphos.be/2013/05/overriding-the-default-selinux-policies/"&gt;epatch_user&lt;/a&gt;
so users can customize the policies even further without having to copy
ebuilds to their overlay.&lt;/p&gt;
&lt;p&gt;Now that &lt;strong&gt;tar&lt;/strong&gt; supports XATTR well, we might want to look into SELinux
stages again. Jmbsvicetto did some work on that, but the builds failed
during stage1. We'll look into that later.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nothing much to say, we're waiting a bit until the patches proposed by
the IMA team are merged in the main kernel.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Two no-multilib fixes have been applied to the
&lt;code&gt;hardened/amd64/no-multilib&lt;/code&gt; profiles. One was a QA issue and quickly
resolved, the other is due to the profile stacking within Gentoo
profiles, where we missed a profile and thus were missing a few masks
defined in that (missed) profile. But including the profile creates a
lot of duplicates again, so we are going to copy the masks across until
the duplicates are resolved in the other profiles.&lt;/p&gt;
&lt;p&gt;Blueness will also clean up the experimental &lt;code&gt;13.0&lt;/code&gt; directory since all
hardened profiles now follow 13.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The latest changes on SELinux have been added to the Gentoo SELinux
handbook. Also, I've been slowly (but surely) adding topics to the
&lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials"&gt;SELinux tutorials
listing&lt;/a&gt; on the Gentoo
wiki.&lt;/p&gt;
&lt;p&gt;The grSecurity 2 document is very much out of date, blueness hopes to
put some time in fixing that soon.&lt;/p&gt;
&lt;p&gt;So that's about it for the short write-up. Zorry will surely post the
log later on the appropriate channels. Good work done (again) by all
team members!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="irc"></category><category term="meeting"></category><category term="monthly"></category><category term="online"></category></entry><entry><title>Overriding the default SELinux policies</title><link href="http://192.168.1.71:8000/2013/05/overriding-the-default-selinux-policies/" rel="alternate"></link><published>2013-05-15T03:50:00+02:00</published><updated>2013-05-15T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-05-15:/2013/05/overriding-the-default-selinux-policies/</id><summary type="html">&lt;p&gt;Extending SELinux policies with additional rules is easy. As SELinux
uses a &lt;em&gt;deny by default&lt;/em&gt; approach, all you need to do is to &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;create a
policy
module&lt;/a&gt;
that contains the additional (allow) rules, load that and you're all
set. But what if you want to remove some rules?&lt;/p&gt;
&lt;p&gt;Well, sadly …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Extending SELinux policies with additional rules is easy. As SELinux
uses a &lt;em&gt;deny by default&lt;/em&gt; approach, all you need to do is to &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file"&gt;create a
policy
module&lt;/a&gt;
that contains the additional (allow) rules, load that and you're all
set. But what if you want to remove some rules?&lt;/p&gt;
&lt;p&gt;Well, sadly, SELinux does not support deny rules. Once an allow rule is
loaded in memory, it cannot be overturned anymore. Yes, you can disable
the module itself that provides the rules, but you cannot selectively
disable rules. So what to do?&lt;/p&gt;
&lt;p&gt;Generally, you can disable the module that contains the rules you want
to disable, and load a custom module that defines everything the
original module did, except for those rules you don't like. For
instance, if you do not want the &lt;code&gt;skype_t&lt;/code&gt; domain to be able to
read/write to the video device, create your own skype-providing module
(&lt;em&gt;myskype&lt;/em&gt;) with the exact same content (except for the module name at
the first line) as the original skype module, except for the video
device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dev_read_sound(skype_t)
# dev_read_video_dev(skype_t)
dev_write_sound(skype_t)
# dev_write_video_dev(skype_t)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Load in this policy, and you now have the &lt;code&gt;skype_t&lt;/code&gt; domain without the
video access. You will get post-install failures when Gentoo pushes out
an update to the policy though, since it will attempt to reload the
&lt;code&gt;skype.pp&lt;/code&gt; file (through the &lt;code&gt;selinux-skype&lt;/code&gt; package) and fail because
it declares types and attributes already provided (by &lt;em&gt;myskype&lt;/em&gt;). You
can &lt;a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=3&amp;amp;chap=5#doc_chap1"&gt;exclude the
package&lt;/a&gt;
from being updated, which works as long as no packages depend on it. Or
live with the post-install failure ;-) But there might be a simpler
approach: &lt;em&gt;epatch_user&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Recently, I added in support for &lt;em&gt;epatch_user&lt;/em&gt; in the policy ebuilds.
This allows users to create patches against the policy source code that
we use and put them in &lt;code&gt;/etc/portage/patches&lt;/code&gt; in the directory of the
right category/package. For module patches, the working directory used
is within the &lt;code&gt;policy/modules&lt;/code&gt; directory of the policy checkout. For
base, it is below the policy checkout (in other words, the patch will
need to use the &lt;code&gt;refpolicy/&lt;/code&gt; directory base). But because of how
&lt;em&gt;epatch_user&lt;/em&gt; works, any patch taken from the base will work as it will
start stripping directories up to the fourth one.&lt;/p&gt;
&lt;p&gt;This approach is also needed if you want to exclude rules from
interfaces rather than from the &lt;code&gt;.te&lt;/code&gt; file: create a small patch and put
it in &lt;code&gt;/etc/portage/patches&lt;/code&gt; for the &lt;code&gt;sec-policy/selinux-base&lt;/code&gt; package
(as this provides the interfaces).&lt;/p&gt;</content><category term="Gentoo"></category><category term="ebuild"></category><category term="epatch_user"></category><category term="Gentoo"></category><category term="override"></category><category term="patch"></category><category term="policy"></category><category term="selinux"></category></entry><entry><title>Gentoo metadata support for CPE</title><link href="http://192.168.1.71:8000/2013/05/gentoo-metadata-support-for-cpe/" rel="alternate"></link><published>2013-05-10T03:50:00+02:00</published><updated>2013-05-10T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-05-10:/2013/05/gentoo-metadata-support-for-cpe/</id><summary type="html">&lt;p&gt;Recently, the &lt;code&gt;metadata.xml&lt;/code&gt; file syntax definition (the DTD for those
that know a bit of XML) has been updated to support CPE definitions. A
&lt;a href="https://nvd.nist.gov/cpe.cfm"&gt;CPE&lt;/a&gt; (Common Platform Enumeration) is an
identifier that
&lt;a href="http://cpe.mitre.org/specification/index.html"&gt;describes&lt;/a&gt; an
application, operating system or hardware device using its vendor,
product name, version, update, edition and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, the &lt;code&gt;metadata.xml&lt;/code&gt; file syntax definition (the DTD for those
that know a bit of XML) has been updated to support CPE definitions. A
&lt;a href="https://nvd.nist.gov/cpe.cfm"&gt;CPE&lt;/a&gt; (Common Platform Enumeration) is an
identifier that
&lt;a href="http://cpe.mitre.org/specification/index.html"&gt;describes&lt;/a&gt; an
application, operating system or hardware device using its vendor,
product name, version, update, edition and language. This CPE
information is used in the CVE releases (Common Vulnerabilities and
Exposures) - announcements about vulnerabilities in applications,
operating systems or hardware. Not all security vulnerabilities are
assigned a CVE number, but this is as close as you get towards a
(public) elaborate dictionary of vulnerabilities.&lt;/p&gt;
&lt;p&gt;By allowing Gentoo package maintainers to enter (part of) the CPE
information in the &lt;code&gt;metadata.xml&lt;/code&gt; file, applications that parse the CVE
information can now more easily match if software installed on Gentoo is
related to a CVE. I had a &lt;a href="http://blog.siphos.be/2013/04/matching-packages-with-cves/"&gt;related
post&lt;/a&gt; to
this not that long ago on my blog and I'm glad this change has been
made. With this information at hand, we can start feeding CPE
information to the packages and then easily match this with CVEs.&lt;/p&gt;
&lt;p&gt;I had a request to "provide" the scripts I used for the previous post.
Mind you, these are taking too many assumptions (and probably wrong
ones) for now (and I'm not really planning on updating them as I have
different methods for getting information related to CVEs), but I'm
planning on integrating CPE data in Gentoo's packages more and then
create a small script that generates a "watchlist" that I can feed to
&lt;a href="http://cvechecker.sourceforge.net"&gt;cvechecker&lt;/a&gt;. But anyway, here are
the scripts.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://dev.gentoo.org/~swift/blog/01/0_createcve.txt"&gt;First&lt;/a&gt;, I took
all CVE information and put it in a simple CSV file. The CSV is the same
one used by cvechecker, so check out the application to see where it
fetches the data from (there is a CVE RSS feed and a simple XSL
transformation).
&lt;a href="http://dev.gentoo.org/~swift/blog/01/1_createhitlist.txt"&gt;Second&lt;/a&gt;, I
create a "hitlist" which generates the CPEs. With the recent change to
&lt;code&gt;metadata.xml&lt;/code&gt; this step can be simplified a lot.
&lt;a href="http://dev.gentoo.org/~swift/blog/01/2_matchcve.txt"&gt;Third&lt;/a&gt;, I try to
match the CPE data with the CVE data, depending on a given time delay of
commits. In other words, you can ask possible CVE fixes for commits made
in the last few XXX days.&lt;/p&gt;</content><category term="Gentoo"></category><category term="cpe"></category><category term="cve"></category><category term="Gentoo"></category><category term="metadata"></category><category term="security"></category></entry><entry><title>New SELinux userspace release</title><link href="http://192.168.1.71:8000/2013/04/new-selinux-userspace-release/" rel="alternate"></link><published>2013-04-26T03:50:00+02:00</published><updated>2013-04-26T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-26:/2013/04/new-selinux-userspace-release/</id><summary type="html">&lt;p&gt;A new &lt;a href="http://userspace.selinuxproject.org/trac/wiki/Releases"&gt;release&lt;/a&gt;
of the SELinux userspace utilities was recently announced. I have made
the packages for Gentoo available and they should now be in the main
tree (\~arch of course). During the testing of the packages however, I
made a stupid mistake of running the tests on the wrong …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A new &lt;a href="http://userspace.selinuxproject.org/trac/wiki/Releases"&gt;release&lt;/a&gt;
of the SELinux userspace utilities was recently announced. I have made
the packages for Gentoo available and they should now be in the main
tree (\~arch of course). During the testing of the packages however, I
made a stupid mistake of running the tests on the wrong VM, one that
didn't contain the new packages. Result: no regressions (of course). My
fault for not using in-ebuild tests properly, as I
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=465846"&gt;should&lt;/a&gt;. So you'll
probably see me blogging about the in-ebuild testing soon ;-)&lt;/p&gt;
&lt;p&gt;In any case, the regressions I did find out (quite fast after I updated
my main laptop with them as well) where a &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=467258"&gt;missing function in
libselinux&lt;/a&gt;, a &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=467264"&gt;referral
to a non-existing makefile when using "semanage
permissive"&lt;/a&gt; and the new
&lt;strong&gt;sepolicy&lt;/strong&gt; application &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=467268"&gt;requiring yum python
bindings&lt;/a&gt;. At least,
with the missing function (hopefully correctly) resolved, all tests I
usually do (except for the permissive domains) are now running well
again.&lt;/p&gt;
&lt;p&gt;This only goes to show how important testing is. Of course, I
&lt;a href="http://marc.info/?l=selinux&amp;amp;m=136692033821285&amp;amp;w=2"&gt;reported&lt;/a&gt; the bugs
on the mailinglist of the userspace utilities as well. Hopefully they
can look at them while I'm asleep so I can integrate fixes tomorrow more
easily ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="automation"></category><category term="regression"></category><category term="release"></category><category term="selinux"></category><category term="test"></category><category term="testing"></category><category term="userspace"></category></entry><entry><title>Gentoo protip: using buildpkgonly</title><link href="http://192.168.1.71:8000/2013/04/gentoo-protip-using-buildpkgonly/" rel="alternate"></link><published>2013-04-25T03:50:00+02:00</published><updated>2013-04-25T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-25:/2013/04/gentoo-protip-using-buildpkgonly/</id><summary type="html">&lt;p&gt;If you don't want to have the majority of builds run in the background
while you are busy on the system, but you don't want to automatically
install software in the background when you are not behind your desk,
then perhaps you can settle for using &lt;a href="https://wiki.gentoo.org/wiki/Binary_package_guide"&gt;binary
packages&lt;/a&gt;. I'm not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you don't want to have the majority of builds run in the background
while you are busy on the system, but you don't want to automatically
install software in the background when you are not behind your desk,
then perhaps you can settle for using &lt;a href="https://wiki.gentoo.org/wiki/Binary_package_guide"&gt;binary
packages&lt;/a&gt;. I'm not
saying you need to setup a build server and such or do your updates
first in a chroot.&lt;/p&gt;
&lt;p&gt;No, what this tip is for is to use the &lt;em&gt;--buildpkgonly&lt;/em&gt; parameter of
&lt;strong&gt;emerge&lt;/strong&gt; at night, building some of your software (often the larger
ones) as binary packages only (storing those in the &lt;code&gt;${PKGDIR}&lt;/code&gt; which
defaults to &lt;code&gt;/usr/portage/packages&lt;/code&gt;). When you are then on your system,
you can run the update with binary package included:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# emerge -puDk world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To use &lt;em&gt;--buildpkgonly&lt;/em&gt;, all package(s) that Portage wants to build must
have all their dependencies met. If not, then the build will not go
through and you're left with no binary packages at all. So what we do is
to create a script that looks at the set of packages that would be
build, and then one for one building the binary package.&lt;/p&gt;
&lt;p&gt;When ran, the script will attempt to build binary packages for those
that have no dependency requirements anymore. Those builds will then
create a binary package but will not be merged on the system. When you
later update your system, including binary packages, those packages that
have been build during the night will be merged quickly, reducing the
build load on your system while you are working on it.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;LIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

emerge -puDN --color&lt;span class="o"&gt;=&lt;/span&gt;n --columns --quiet&lt;span class="o"&gt;=&lt;/span&gt;y world &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;LIST&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; PACKAGE &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;cat &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;LIST&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Building binary package for &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PACKAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;... &amp;quot;&lt;/span&gt;
  emerge -uN --quiet-build --quiet&lt;span class="o"&gt;=&lt;/span&gt;y --buildpkgonly &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PACKAGE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;I ran this a couple of days ago when &lt;em&gt;-uDN world&lt;/em&gt; showed 46 package
updates (including a few hefty ones like chromium). After running this
script, 35 of them had a binary package ready so the &lt;em&gt;-uDN world&lt;/em&gt; now
only needed to build 11 packages, merging the remainder from binary
packages.&lt;/p&gt;</content><category term="Gentoo"></category><category term="binpkg"></category><category term="emerge"></category><category term="Gentoo"></category><category term="protip"></category></entry><entry><title>SLOT'ing the old swig-1</title><link href="http://192.168.1.71:8000/2013/04/sloting-the-old-swig-1/" rel="alternate"></link><published>2013-04-23T03:50:00+02:00</published><updated>2013-04-23T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-23:/2013/04/sloting-the-old-swig-1/</id><summary type="html">&lt;p&gt;The &lt;a href="http://www.swig.org"&gt;SWIG&lt;/a&gt; tool helps developers in building
interfaces/libraries that can be accessed from many other languages than
the ones the library is initially written in or for. The SELinux
userland utility &lt;a href="http://oss.tresys.com/projects/setools"&gt;setools&lt;/a&gt; uses
it to provide Python and Ruby interfaces even though the application
itself is written in C …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="http://www.swig.org"&gt;SWIG&lt;/a&gt; tool helps developers in building
interfaces/libraries that can be accessed from many other languages than
the ones the library is initially written in or for. The SELinux
userland utility &lt;a href="http://oss.tresys.com/projects/setools"&gt;setools&lt;/a&gt; uses
it to provide Python and Ruby interfaces even though the application
itself is written in C. Sadly, the tool currently requires swig-1 for
its building of the interfaces and uses constructs that do not seem to
be compatible with swig-2 (same with the apse package, btw).&lt;/p&gt;
&lt;p&gt;I first tried to &lt;a href="http://comments.gmane.org/gmane.comp.security.selinux/17822"&gt;patch
setools&lt;/a&gt; to
support swig-2, but eventually found regressions in the libapol library
it provides so the patch didn't work out (that is why some users
mentioned that a previous setools version did build with swig - yes it
did, but the result wasn't correct). Recently, a &lt;a href="https://plus.google.com/117641514179258643044/posts/gNrhVDuwGzp"&gt;post on Google Plus'
SELinux
community&lt;/a&gt;
showed me that I wasn't wrong in this matter (it really does require
swig-1 and doesn't seem to be trivial to fix).&lt;/p&gt;
&lt;p&gt;Hence, I have to fix the &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=453512"&gt;gentoo build
problem&lt;/a&gt; where one set
of tools requires swig-1 and another swig-2. Otherwise world-updates and
even building stages for SELinux systems would fail as Portage finds
incompatible dependencies. One way to approach this is to use Gentoo's
support for
&lt;a href="http://devmanual.gentoo.org/general-concepts/slotting/"&gt;SLOTs&lt;/a&gt;. When a
package (ebuild) in Gentoo defines a SLOT, it tells the package manager
that the same package but a different version might be installed
alongside the package if that has a different SLOT version. In case of
swig, the idea is to give swig-1 a different slot than swig-2 (which
uses &lt;code&gt;SLOT="0"&lt;/code&gt;) and make sure that both do not install the same files
(otherwise you get file collisions).&lt;/p&gt;
&lt;p&gt;Luckily, swig places all of its files except for the &lt;strong&gt;swig&lt;/strong&gt; binary
itself in &lt;code&gt;/usr/share/swig/&amp;lt;version&amp;gt;&lt;/code&gt;, so all I had left to do was to
make sure the binary itself is renamed. I chose to use &lt;strong&gt;swig1.3&lt;/strong&gt;
(similar as to how tools like &lt;strong&gt;ruby&lt;/strong&gt; and &lt;strong&gt;python&lt;/strong&gt; and for some
packages even &lt;strong&gt;java&lt;/strong&gt; is implemented on Gentoo). The result (through
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=466650"&gt;bug 466650&lt;/a&gt;) is now in
the tree, as well as an adapted setools package that uses the new swig
SLOT.&lt;/p&gt;
&lt;p&gt;Thanks to Samuli Suominen for getting me on the (hopefully ;-) right
track. I don't know why I was afraid of doing this, it was much less
complex than I thought (now let's hope I didn't break other things ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="selinux"></category><category term="setools"></category><category term="slot"></category><category term="swig"></category></entry><entry><title>Introducing selocal for small SELinux policy enhancements</title><link href="http://192.168.1.71:8000/2013/04/introducing-selocal-for-small-selinux-policy-enhancements/" rel="alternate"></link><published>2013-04-21T03:50:00+02:00</published><updated>2013-04-21T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-21:/2013/04/introducing-selocal-for-small-selinux-policy-enhancements/</id><summary type="html">&lt;p&gt;When working with a SELinux-enabled system, administrators will
eventually need to make small updates to the existing policy. Instead of
building their own full policy (always an option, but most likely not
maintainable in the long term) one or more SELinux policy modules are
created (most distributions use a modular …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When working with a SELinux-enabled system, administrators will
eventually need to make small updates to the existing policy. Instead of
building their own full policy (always an option, but most likely not
maintainable in the long term) one or more SELinux policy modules are
created (most distributions use a modular approach to the SELinux policy
development) which are then loaded on their target systems.&lt;/p&gt;
&lt;p&gt;In the past, users had to create their own policy module by creating
(and maintaining) the necessary &lt;code&gt;.te&lt;/code&gt; file(s), building the proper &lt;code&gt;.pp&lt;/code&gt;
files and loading it in the active policy store. In Gentoo, from
&lt;code&gt;policycoreutils-2.1.13-r11&lt;/code&gt; onwards, a script is provided to the users
that hopefully makes this a bit more intuitive for regular users:
&lt;strong&gt;selocal&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As the name implies, &lt;strong&gt;selocal&lt;/strong&gt; aims to provide an interface for
handling &lt;em&gt;local&lt;/em&gt; policy updates that do not need to be packaged or
distributed otherwise. It is a command-line application that you feed
single policy rules at one at a time. Each rule can be accompanied with
a single-line comment, making it obvious for the user to know why he
added the rule in the first place.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# selocal --help
Usage: selocal [] []

Command can be one of:
  -l, --list            List the content of a SELinux module
  -a, --add             Add an entry to a SELinux module
  -d, --delete          Remove an entry from a SELinux module
  -M, --list-modules    List the modules currently known by selocal
  -u, --update-dep      Update the dependencies for the rules
  -b, --build           Build the SELinux module (.pp) file (requires privs)
  -L, --load            Load the SELinux module (.pp) file (requires privs)

Options can be one of:
  -m, --module          Module name to use (default: selocal)
  -c, --comment        Comment (with --add)

The option -a requires that a rule is given, like so:
  selocal -a &amp;quot;dbadm_role_change(staff_r)&amp;quot;
The option -d requires that a line number, as shown by the --list, is given, like so:
  selocal -d 12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's say that you need to launch a small script you written as a
daemon, but you want this to run while you are still in the &lt;em&gt;staff_t&lt;/em&gt;
domain (it is a user-sided daemon you use personally). As regular
&lt;em&gt;staff_t&lt;/em&gt; isn't allowed to have processes bind on generic ports/nodes,
you need to enhance the SELinux policy a bit. With &lt;strong&gt;selocal&lt;/strong&gt;, you can
do so as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# selocal --add &amp;quot;corenet_tcp_bind_generic_node(staff_t)&amp;quot; --comment &amp;quot;Launch local webserv.py daemon&amp;quot;
# selocal --add &amp;quot;corenet_tcp_bind_generic_port(staff_t)&amp;quot; --comment &amp;quot;Launch local webserv.my daemon&amp;quot;
# selocal --build --load
(some output on building the policy module)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When finished, the local policy is enhanced with the two mentioned
rules. You can query which rules are currently stored in the policy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# selocal --list
12: corenet_tcp_bind_generic_node(staff_t) # Launch local webserv.py daemon
13: corenet_tcp_bind_generic_port(staff_t) # Launch local webserv.py daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you need to delete a rule, just pass the line number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# selocal --delete 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Having this tool around also makes it easier to test out changes
suggested through bugreports. When I test such changes, I add in the bug
report ID as the comment so I can track which settings are still local
and which ones have been pushed to our policy repository. Underlyingly,
&lt;strong&gt;selocal&lt;/strong&gt; creates and maintains the necessary policy file in
&lt;path&gt;\~/.selocal&lt;/path&gt; and by default uses the &lt;em&gt;selocal&lt;/em&gt; policy module
name.&lt;/p&gt;
&lt;p&gt;I hope this tool helps users with their quest on using SELinux. Feedback
and comments are always appreciated! It is a small bash script and might
still have a few bugs in it, but I have been using it for a few months
so most quirks should be handled.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="policy"></category><category term="selinux"></category><category term="selocal"></category></entry><entry><title>Transforming GuideXML to DocBook</title><link href="http://192.168.1.71:8000/2013/04/transforming-guidexml-to-docbook/" rel="alternate"></link><published>2013-04-20T03:50:00+02:00</published><updated>2013-04-20T03:50:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-20:/2013/04/transforming-guidexml-to-docbook/</id><summary type="html">&lt;p&gt;I recently
&lt;a href="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/xsl/docbook.xsl?sortby=date&amp;amp;view=log"&gt;committed&lt;/a&gt;
an XSL stylesheet that allows us to transform the GuideXML documents
(both guides and handbooks) to DocBook. This isn't part of a more
elaborate move to try and push DocBook instead of GuideXML for the
Gentoo Documentation though (I'd rather direct documentation development
more to the Gentoo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently
&lt;a href="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/xsl/docbook.xsl?sortby=date&amp;amp;view=log"&gt;committed&lt;/a&gt;
an XSL stylesheet that allows us to transform the GuideXML documents
(both guides and handbooks) to DocBook. This isn't part of a more
elaborate move to try and push DocBook instead of GuideXML for the
Gentoo Documentation though (I'd rather direct documentation development
more to the Gentoo wiki instead once translations are allowed): instead,
I use it to be able to generate our documentation in other formats (such
as PDF but also ePub) when asked.&lt;/p&gt;
&lt;p&gt;If you're not experienced with XSL: XSL stands for &lt;em&gt;Extensible
Stylesheet Language&lt;/em&gt; and can be seen as a way of "programming" in XML. A
stylesheet allows developers to transform one XML document towards
another format (either another XML, or as &lt;a href="http://blog.siphos.be/2013/02/transforming-guidexml-to-wiki/"&gt;text-like output like
wiki&lt;/a&gt;)
while manipulating its contents. In case of documentation, we try to
keep as much structure in the document as possible, but other uses could
be to transform a large XML with only a few interesting fields towards a
very small XML (only containing those fields you need) for further
processing.&lt;/p&gt;
&lt;p&gt;For now (and probably for the foreseeable future), the stylesheet is to
be used in an offline mode (we are not going to provide auto-generated
PDFs of all documents) as the process to convert a document from
GuideXML to DocBook to XML:FO to PDF is quite resource-intensive. But
users that are interested can use the stylesheet as linked above to
create their own PDFs of the documentation.&lt;/p&gt;
&lt;p&gt;Assuming you have a checkout of the Gentoo documentation, this process
can be done as follows (example for the AMD64 handbook):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ xsltproc docbook.xsl /path/to/handbook-amd64.xml &amp;gt; /somewhere/handbook-amd64.docbook
$ cd /somewhere
$ xsltproc --output handbook-amd64.fo --stringparam paper.type A4   
 /usr/share/sgml/docbook/xsl-stylesheets/fo/docbook.xsl handbook-amd64.docbook
$ fop handbook-amd64.fo handbook-amd64.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The docbook stylesheets are offered by the
&lt;em&gt;app-text/docbook-xsl-stylesheets&lt;/em&gt; package whereas the &lt;strong&gt;fop&lt;/strong&gt; command
is provided by &lt;em&gt;dev-java/fop&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I have an example output available (temporarily) at my &lt;a href="http://dev.gentoo.org/~swift/tmp/handbook-amd64.pdf"&gt;dev space (amd64
handbook)&lt;/a&gt; but I'm
not going to maintain this for long (so the link might not work in the
near future).&lt;/p&gt;</content><category term="Gentoo"></category><category term="docbook"></category><category term="Gentoo"></category><category term="guidexml"></category><category term="pdf"></category><category term="xsl"></category></entry><entry><title>Another Gentoo Hardened month has passed</title><link href="http://192.168.1.71:8000/2013/04/another-gentoo-hardened-month-has-passed/" rel="alternate"></link><published>2013-04-18T23:36:00+02:00</published><updated>2013-04-18T23:36:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-18:/2013/04/another-gentoo-hardened-month-has-passed/</id><summary type="html">&lt;p&gt;Another month has passed, so time to mention again what we have all been
doing lately ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Version 4.8 of GCC is available in the tree, but currently masked. The
package contains a fix needed to build hardened-sources, and a fix for
the asan (address sanitizer).
&lt;a href="http://www.internetnews.com/blog/skerner/open-source-gcc-4.8-compiler-including-address-sanitizer-security.html"&gt;asan&lt;/a&gt;
support in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so time to mention again what we have all been
doing lately ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Version 4.8 of GCC is available in the tree, but currently masked. The
package contains a fix needed to build hardened-sources, and a fix for
the asan (address sanitizer).
&lt;a href="http://www.internetnews.com/blog/skerner/open-source-gcc-4.8-compiler-including-address-sanitizer-security.html"&gt;asan&lt;/a&gt;
support in GCC 4.8 might be seen as an improvement security-wise, but it
is yet unclear if it is an integral part of GCC or could be disabled
with a configure flag. Apparently, asan "makes building gcc 4.8 crazy".
Seeing that it comes from Google, and building Google Chromium is also
crazy, I start seeing a pattern here.&lt;/p&gt;
&lt;p&gt;Anyway, it turns out that PaX/grSec and asan do not get along yet (ASAN
assumes/uses hardcoded userland address space size values, which breaks
when UDEREF is set as it pitches a bit from the size):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ERROR: AddressSanitizer failed to allocate 0x20000001000 (2199023259648) bytes at address 0x0ffffffff000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Given that this is hardcoded in the resulting binaries, it isn't
sufficient to change the size value from 47 bits to 46 bits as hardened
systems can very well boot a kernel with and another kernel without
UDEREF, causing the binaries to fail on the other kernel. Instead, a
proper method would be to dynamically check the size of a userland
address.&lt;/p&gt;
&lt;p&gt;However, GCC 4.8 also brings along some nice enhancements and features.
uclibc profiles work just fine with GCC 4.8, including armv7a and
mips/mipsel. The latter is especially nice to hear, since mips used to
require significant effort with previous GCCs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;More recent kernels have now been stabilized to stay close to the
grSecurity/PaX upstream developments. The most recent stable kernel now
is hardened-sources-3.8.3. Others still available are hardened-sources
versions 3.2.40-r1 and 2.6.32-r156.&lt;/p&gt;
&lt;p&gt;The support for XATTR_PAX is still progressing, but a few issues have
come up. One is that non-hardened systems are seeing warnings about
&lt;strong&gt;pax-mark&lt;/strong&gt; not being able to set the XATTR_PAX on tmpfs since vanilla
kernels do not have the patch to support &lt;code&gt;user.*&lt;/code&gt; extended attribute
namespaces for tmpfs. A second issue is that the &lt;strong&gt;install&lt;/strong&gt;
application, as provided by &lt;code&gt;coreutils&lt;/code&gt;, does not copy extended
attributes. This has impact on ebuilds where pax markings are done
before the install phase of a package. But only doing pax markings after
the install phase isn't sufficient either, since sometimes we need the
binaries to be marked already for test phases or even in the compile
phase. So this is still something on the near horizon.&lt;/p&gt;
&lt;p&gt;Most likely the necessary tools will be patched to include extended
attributes on copy operations. However, we need to take care only to
copy over those attributes that make sense: &lt;code&gt;user.pax&lt;/code&gt; does, but
security ones like &lt;code&gt;security.evm&lt;/code&gt; and &lt;code&gt;security.selinux&lt;/code&gt; shouldn't as
those are either recomputed when needed, or governed through policy. The
idea is that USE="pax_kernel" will enable the above on &lt;code&gt;coreutils&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The SELinux support in Gentoo has seen a fair share of updates on the
userland utilities (like policycoreutils, setools, libselinux and such).
Most of these have already made the stable tree or are close to be
bumped to stable. The SELinux policy also has been updated a lot: most
changes can be tracked through bugzilla, looking for the
&lt;code&gt;sec-policy r13&lt;/code&gt; whiteboard. The changes can be applied to the system
immediately if you use the live ebuilds (like &lt;code&gt;selinux-base-9999&lt;/code&gt;), but
I'm planning on releasing revision 13 of our policy set soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some of the "early adopter" problems we've noticed on Gentoo Hardened
have been integrated in the repositories upstream and are slowly
progressing towards the main Linux kernel tree.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All hardened profiles have been moved to the 13.0 base. Some people
frowned when they noticed that the uclibc profiles do not inherit from
any architecture-related profile. This is however with reason: the
architecture profiles are (amongst other reasons) focusing on the glibc
specifics of the architecture. Since the profile intended here is for
uclibc, those changes are not needed (nor wanted). Hence, these are
collapsed in a single profile.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For SELinux, the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml"&gt;SELinux
handbook&lt;/a&gt;
now includes information about USE="unconfined" as well as the
&lt;code&gt;selinux_gentoo&lt;/code&gt; init script as provided by &lt;code&gt;policycoreutils&lt;/code&gt;. Users who
are already running with SELinux enabled can just look at the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=7"&gt;Change
History&lt;/a&gt;
to see which changes affect them.&lt;/p&gt;
&lt;p&gt;A set of &lt;a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials"&gt;tutorials&lt;/a&gt;
(which I've blogged about earlier as well) have been put online at the
&lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt;. Next to the SELinux tutorials,
an article pertaining to &lt;a href="https://wiki.gentoo.org/wiki/AIDE"&gt;AIDE&lt;/a&gt; has
been added as well as it fits nicely within the principles/concepts of
the &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;System
Integrity&lt;/a&gt;
subproject.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you don't do it already, start following
&lt;a href="https://twitter.com/GentooHardened"&gt;@GentooHardened&lt;/a&gt; ;-)&lt;/p&gt;</content><category term="Gentoo"></category><category term="asan"></category><category term="gcc"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="integrity"></category><category term="irc"></category><category term="meeting"></category><category term="pax"></category><category term="selinux"></category><category term="uderef"></category></entry><entry><title>Not needing run_init for password-less service management</title><link href="http://192.168.1.71:8000/2013/04/not-needing-run_init-for-password-less-service-management/" rel="alternate"></link><published>2013-04-09T22:14:00+02:00</published><updated>2013-04-09T22:14:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-09:/2013/04/not-needing-run_init-for-password-less-service-management/</id><summary type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the things that has been bugging me was why, even with having
&lt;code&gt;pam_rootok.so&lt;/code&gt; set in &lt;code&gt;/etc/pam.d/run_init&lt;/code&gt;, I cannot enjoy
passwordless service management without using &lt;strong&gt;run_init&lt;/strong&gt; directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# rc-service postgresql-9.2 status
Authenticating root.
Password:

# run_init rc-service postgresql-9.2 status
Authenticating root.
 * status: started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I decided to &lt;strong&gt;strace&lt;/strong&gt; the two commands and look for the
differences. I found out that there is even a SELinux permission for
being able to use the &lt;em&gt;rootok&lt;/em&gt; setting for passwords! Apparently,
&lt;code&gt;pam_rootok.so&lt;/code&gt; is SELinux-aware and does some additional checks.&lt;/p&gt;
&lt;p&gt;Although I don't know the exact details of it, it looks for the context
before the call (exec) of &lt;strong&gt;run_init&lt;/strong&gt; occurred. Then it checks if this
domain has the right for &lt;em&gt;passwd { rootok }&lt;/em&gt; (unless SELinux is in
permissive, in which case it just continues) and only then it allows the
"rootok" to succeed.&lt;/p&gt;
&lt;p&gt;Now why doesn't this work without using &lt;strong&gt;run_init&lt;/strong&gt;? I think it has to
do with how we integrate &lt;strong&gt;run_init&lt;/strong&gt; in the scripts, because out of
the trace I found that the previous context was also &lt;em&gt;run_init_t&lt;/em&gt;
(instead of &lt;em&gt;sysadm_t&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;20451 open(&amp;quot;/proc/self/task/20451/attr/current&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)                          = 0
20451 gettid()                          = 20451
20451 open(&amp;quot;/proc/self/task/20451/attr/prev&amp;quot;, O_RDONLY) = 3
20451 read(3, &amp;quot;root:sysadm_r:run_init_t\0&amp;quot;, 4095) = 25
20451 close(3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Because there already is a transition to &lt;em&gt;run_init_t&lt;/em&gt; upon calling the
scripts, the underlying call to &lt;strong&gt;runscripts&lt;/strong&gt; causes the "previous"
attribute to be set to &lt;em&gt;run_init_t&lt;/em&gt; as well, and only then is
&lt;strong&gt;run_init&lt;/strong&gt; called (which then causes the PAM functions to be called).
But by prepending the commands with &lt;strong&gt;run_init&lt;/strong&gt; (which quickly causes
the PAM functions to be called) the previous context is &lt;em&gt;sysadm_t&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I tested on a system with the following policy update, and this succeeds
nicely.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;policy_module(localruninit, 1.0)

gen_require(`
  class passwd { passwd chfn chsh rootok };
  type run_init_t;
&amp;#39;)

allow run_init_t self:passwd rootok;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I'll probably add this in Gentoo's policy.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="hardened"></category><category term="pam"></category><category term="rootok"></category><category term="run_init"></category><category term="selinux"></category></entry><entry><title>Separate puppet provider for Gentoo/SELinux?</title><link href="http://192.168.1.71:8000/2013/04/separate-puppet-provider-for-gentooselinux/" rel="alternate"></link><published>2013-04-07T19:22:00+02:00</published><updated>2013-04-07T19:22:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-07:/2013/04/separate-puppet-provider-for-gentooselinux/</id><summary type="html">&lt;p&gt;While slowly transitioning my playground infrastructure towards Puppet,
I already am in process of creating a custom provider for things such as
services. Puppet uses providers as "implementations" for the functions
Puppet needs. For instance, for the &lt;em&gt;service&lt;/em&gt; type (which handles init
script services), there are providers for RedHat, Debian …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While slowly transitioning my playground infrastructure towards Puppet,
I already am in process of creating a custom provider for things such as
services. Puppet uses providers as "implementations" for the functions
Puppet needs. For instance, for the &lt;em&gt;service&lt;/em&gt; type (which handles init
script services), there are providers for RedHat, Debian, FreeBSD, ...
and it also has providers called &lt;em&gt;gentoo&lt;/em&gt; and &lt;em&gt;openrc&lt;/em&gt;. The &lt;em&gt;openrc&lt;/em&gt; one
uses the service scripts that Gentoo's OpenRC provides, such as
&lt;strong&gt;rc-service&lt;/strong&gt; and &lt;strong&gt;rc-status&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;On a SELinux-enabled system, and especially when using a decentralized
Puppet environment (I dropped the puppet master set in favor of a
decentralized usage of Puppet), if you call &lt;strong&gt;rc-service&lt;/strong&gt; to, say,
start a service, it will ask for the users' password. Of course, Puppet
doesn't want this, so I have to prefix the commands with &lt;strong&gt;run_init&lt;/strong&gt;
and have a &lt;code&gt;pam_rootok.so&lt;/code&gt; rule in run_init's PAM definition.&lt;/p&gt;
&lt;p&gt;So far that's a simple change - I just patched the &lt;code&gt;openrc.rb&lt;/code&gt; file to
do so. But then the second problem I'm facing is that Puppet wants to
use return code based commands for checking the run-time state of
services. Even though some of my services weren't running, Puppet either
thought they were or called the start routine and consider the service
started. Sadly that wasn't the case, as the rc-* scripts always return
0 (you'll need to parse the output).&lt;/p&gt;
&lt;p&gt;So what I did now is to create a simple script called &lt;code&gt;runstatus&lt;/code&gt; which
returns the state of services. It's crude, but seems to work:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;SERVICENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# We need to exit:&lt;/span&gt;
&lt;span class="c1"&gt;# 0 - if running&lt;/span&gt;
&lt;span class="c1"&gt;# 1 - if dead but PID exists&lt;/span&gt;
&lt;span class="c1"&gt;# 2 - if dead but lock file exists&lt;/span&gt;
&lt;span class="c1"&gt;# 3 - if not running&lt;/span&gt;
&lt;span class="c1"&gt;# 4 - if unknown&lt;/span&gt;

rc-status -a -C &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SERVICENAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q started &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
rc-status -a -C &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SERVICENAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -q stopped &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;I then have the service provider (I now provide my own instead of
patching the openrc one) call &lt;strong&gt;runstatus&lt;/strong&gt; to get the state of a
service, as well as call it after trying to start a service. But as this
is quite basic functioning, I'm wondering if I'm doing things the right
way or not. Who else has experience with Puppet and Gentoo, and did you
have to tweak things to get services and such working?&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="openrc"></category><category term="provider"></category><category term="puppet"></category><category term="selinux"></category></entry><entry><title>Matching packages with CVEs</title><link href="http://192.168.1.71:8000/2013/04/matching-packages-with-cves/" rel="alternate"></link><published>2013-04-04T21:44:00+02:00</published><updated>2013-04-04T21:44:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-04-04:/2013/04/matching-packages-with-cves/</id><summary type="html">&lt;p&gt;I've come across a few posts on forums (Gentoo and elsewhere) asking why
Gentoo doesn't make security-related patches on the tree. Some people
think this is the case because they do not notice (m)any GLSAs, which
are Gentoo's security advisories. However, it isn't that Gentoo doesn't
push out security …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've come across a few posts on forums (Gentoo and elsewhere) asking why
Gentoo doesn't make security-related patches on the tree. Some people
think this is the case because they do not notice (m)any GLSAs, which
are Gentoo's security advisories. However, it isn't that Gentoo doesn't
push out security fixes - it is a matter of putting the necessary human
resources against it to write down the GLSAs.&lt;/p&gt;
&lt;p&gt;Gentoo is often quick with creating the necessary ebuilds for newer
versions of software. And newer versions often contain security fixes
that mitigate problems detected in earlier versions. So by keeping your
system up to date, you get those security fixes as well. But without
GLSA, it is difficult to really know which packages are necessary and
which aren't, let alone be aware that there are potential problems with
your system.&lt;/p&gt;
&lt;p&gt;I already captured one of those needs through the
&lt;a href="http://cvechecker.sf.net"&gt;cvechecker&lt;/a&gt; application, so I took a step
further and wrote an extremely ugly script (it's so ugly, it would
spontaneously become a joke of itself when published) which compiles a
list of &lt;em&gt;potential&lt;/em&gt; CPEs (identifiers for products used in CVEs) from
the Gentoo package list (ugliness 1: it assumes that the package name is
the product name). It then tries to &lt;em&gt;assume&lt;/em&gt; what the version of that
software is based on the ebuild version (ugliness 2: it just takes the
a.b.c number). Then, it lists the CVEs affiliated with a particular
package, and checks this list with the list of CVEs from an earlier
version (ugliness 3: it requires the previous, vulnerable version to
still be in the tree). If one of the CVEs has "disappeared", it will
report that the given package might fix that CVE. Oh, and if the CVE has
a CPE that contains more than just a version, the script ignores it
(ugliness 4). And it probably ignores a lot of other things as well
while not checking the input (ugliness 5 and higher).&lt;/p&gt;
&lt;p&gt;But if we ignore all that, what does that give for the Gentoo portage
tree for the last 7 days? In other words, what releases have been made
on the tree that &lt;em&gt;might&lt;/em&gt; contain security fixes (and that do comply with
the above ugliness)?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;app-editors/emacs-23.4-r5 might fix CVE-2010-0825
app-editors/emacs-24.2-r1 might fix CVE-2012-0035
app-editors/emacs-24.2-r1 might fix CVE-2012-3479
dev-lang/python-2.6.8-r1 might fix CVE-2010-3492
dev-lang/python-2.6.8-r1 might fix CVE-2011-1521
dev-lang/python-2.6.8-r1 might fix CVE-2012-0845
dev-lang/python-2.6.8-r1 might fix CVE-2012-1150
dev-lang/python-2.6.8-r1 might fix CVE-2008-5983
dev-php/smarty-2.6.27 might fix CVE-2009-5052
dev-php/smarty-2.6.27 might fix CVE-2009-5053
dev-php/smarty-2.6.27 might fix CVE-2009-5054
dev-php/smarty-2.6.27 might fix CVE-2010-4722
dev-php/smarty-2.6.27 might fix CVE-2010-4723
dev-php/smarty-2.6.27 might fix CVE-2010-4724
dev-php/smarty-2.6.27 might fix CVE-2010-4725
dev-php/smarty-2.6.27 might fix CVE-2010-4726
dev-php/smarty-2.6.27 might fix CVE-2010-4727
dev-php/smarty-2.6.27 might fix CVE-2012-4277
dev-php/smarty-2.6.27 might fix CVE-2012-4437
media-sound/rhythmbox-2.97 might fix CVE-2012-3355
net-im/empathy-3.6.3 might fix CVE-2011-3635
net-im/empathy-3.6.3 might fix CVE-2011-4170
sys-cluster/glusterfs-3.3.1-r2 might fix CVE-2012-4417
www-client/seamonkey-2.17 might fix CVE-2013-0788
www-client/seamonkey-2.17 might fix CVE-2013-0789
www-client/seamonkey-2.17 might fix CVE-2013-0791
www-client/seamonkey-2.17 might fix CVE-2013-0792
www-client/seamonkey-2.17 might fix CVE-2013-0793
www-client/seamonkey-2.17 might fix CVE-2013-0794
www-client/seamonkey-2.17 might fix CVE-2013-0795
www-client/seamonkey-2.17 might fix CVE-2013-0796
www-client/seamonkey-2.17 might fix CVE-2013-0797
www-client/seamonkey-2.17 might fix CVE-2013-0800
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, there is still a lot of work to remove bad ones (and add
matches for non-default ones), but at least it gives an impression
(especially those that have CVEs of 2012 or even 2013 are noteworthy),
which is the purpose of this post.&lt;/p&gt;
&lt;p&gt;It would be very neat if ebuilds, or the package metadata, could give
pointers on the CPEs. That way, it would be much easier to check a
system for known vulnerabilities through the (publicly) available CVE
databases as we then only have to do simple matching. A glsa-check-ng
(what's in a name) script would then construct the necessary CPEs based
on the installed package list (and the metadata on it), check if there
are CVEs against it, and if there are, see if a newer version of the
same package is available that has no (or fewer) CVEs assigned to it.&lt;/p&gt;
&lt;p&gt;Perhaps someone can create a GSoC proposal out of that?&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Fiddling with puppet apply</title><link href="http://192.168.1.71:8000/2013/03/fiddling-with-puppet-apply/" rel="alternate"></link><published>2013-03-20T12:31:00+01:00</published><updated>2013-03-20T12:31:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-03-20:/2013/03/fiddling-with-puppet-apply/</id><summary type="html">&lt;p&gt;As part of a larger exercise, I am switching my local VM set from a
more-or-less scripted manual configuration towards a fully
Puppet-powered one. Of course, it still uses a lot of custom modules and
is most likely too ugly to expose to the wider internet, but it does
seem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As part of a larger exercise, I am switching my local VM set from a
more-or-less scripted manual configuration towards a fully
Puppet-powered one. Of course, it still uses a lot of custom modules and
is most likely too ugly to expose to the wider internet, but it does
seem to improve my ability to quickly rebuild images if I corrupt them
somehow.&lt;/p&gt;
&lt;p&gt;One of the tricks I am using is to use a local apply instead of using a
Puppet master server - mainly because that master server is again a VM
that might need to be build up and consumes some resources that I'd
rather have free for other VMs. So what I do now is akin to the
following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# puppet apply --modulepath /mnt/puppet/modules /mnt/puppet/manifests/site.pp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All I have to do is make sure that the /mnt/puppet location is a shared
resource (in my case, an NFSv4 read-only mount) which I can just mount
on a fresh image.&lt;/p&gt;
&lt;p&gt;Part of this exercise I noticed that Puppet by default uses the regular
&lt;em&gt;gentoo&lt;/em&gt; provider for the services. I'd like to use the &lt;em&gt;openrc&lt;/em&gt;
provider instead, as I can easily tweak that one to work with SELinux (I
need to prepend &lt;strong&gt;run_init&lt;/strong&gt; to the &lt;strong&gt;rc-service&lt;/strong&gt; calls, otherwise
SELinux wants to authenticate the user and Puppet doesn't like that; I
have a pam_rootok.so statement in the run_init PAM file to allow
unattended calls towards rc-service).&lt;/p&gt;
&lt;p&gt;A quick Google revealed that all I had to do was to add a &lt;em&gt;provider
=&amp;gt; openrc&lt;/em&gt; in the service definitions, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;service { &amp;quot;net.eth0&amp;quot;:
  provider =&amp;gt; openrc,
  ensure =&amp;gt; running,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As mentioned, I still manually patch the openrc provider (located in
/usr/lib64/ruby/site_ruby/1.9.1/puppet/provider/service) so that the
run_init command is known as well, and that all invocations of the
rc-service is prepended with run_init:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
  commands :runinit =&amp;gt; &amp;#39;/usr/sbin/run_init&amp;#39;
  commands :rcservice =&amp;gt; &amp;#39;/sbin/rc-service&amp;#39;
...
 [command(:runinit), command(:rcservice), @resource[:name], :start ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the same for the stop and status definitions. I might use Portage'
postinst hook to automatically apply the patch so I don't need to do
this manually each time.&lt;/p&gt;</content><category term="Gentoo"></category><category term="provider"></category><category term="puppet"></category><category term="selinux"></category><category term="service"></category></entry><entry><title>Gentoo Hardened progress meeting of march 2013</title><link href="http://192.168.1.71:8000/2013/03/gentoo-hardened-progress-meeting-of-march-2013/" rel="alternate"></link><published>2013-03-07T22:46:00+01:00</published><updated>2013-03-07T22:46:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-03-07:/2013/03/gentoo-hardened-progress-meeting-of-march-2013/</id><summary type="html">&lt;p&gt;Another month has passed, so time for a new progress meeting...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GCC v4.7 has been unmasked, allowing a large set of users to test out
the new GCC. It is also expected that GCC 4.8-rc1 will hit the tree next
week. In the hardened-dev overlay, hardened support …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another month has passed, so time for a new progress meeting...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GCC v4.7 has been unmasked, allowing a large set of users to test out
the new GCC. It is also expected that GCC 4.8-rc1 will hit the tree next
week. In the hardened-dev overlay, hardened support for x86, amd64 and
arm has been added (SPEC updates) and the remainder of architectures
will be added by the end of the week.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kernel and grSecurity/PaX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kernel 3.7.5 had a security issue (local root privilege escalation) so
3.7.5-r1 which held a fix for this was stabilized quickly. However,
other (non-security) problems have been reported, such as one with
dovecot, regarding the VSIZE memory size. This should be fixed in the
3.8 series, so these are candidate for a faster stabilization. This
faster stabilization is never fun, as it increases the likelihood that
we miss other things, but they are needed as the vulnerability in the
previous stable kernel was too severe.&lt;/p&gt;
&lt;p&gt;Regarding XATTR_PAX, we are getting pretty close to the migration. The
eclass is ready and will be announced for review on the appropriate
mailinglists later this week. A small problem still remains on
Paludis-using systems (Paludis does not record NEEDED.ELF.2 information
- linkage information - so it is hard to get all the linkage information
on a system). A different revdep-pax and migrate-pax toolset will be
built that detects the necessary linkage information, but much slower
than on a Portage-running system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SELinux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The 11th revision of the policies are now stable, and work is on the way
for the 12th revision which will hit the tree soon. Some work is on the
way for setools and policycoreutils (one due to a new release - setools
- and the other one due to a build failure if PAM is not set). Both
packages will hit the hardened-dev overlay soon.&lt;/p&gt;
&lt;p&gt;A new "edition" of the selinuxnode virtual image has been pushed to the
mirror system, providing a SELinux-enabled (enforcing) Gentoo Hardened
system with grSecurity and PaX, as well as IMA and EVM enabled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Profiles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The 13.0 profiles have been running fine for a while at a few of our
developer systems. No changes have been needed (yet) so things are
looking good.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System Integrity&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The necessary userland utilities have been moved to the main tree. The
documentation for IMA/EVM has been updated as well to reflec the current
state of IMA/EVM within Gentoo Hardened. IMA, even with the custom
policies, seems to be working well. EVM on the other hand has some
issues, so you might need to run with EVM=fix for now. Debugging on this
issue is on the way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of the user oriented documentation (integrity and SELinux) have
been moved to the Gentoo Wiki for easier user contributions and
simplified management. Other documents will follow soon.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="kernel"></category><category term="pax"></category><category term="profiles"></category><category term="selinux"></category><category term="toolchain"></category></entry><entry><title>Uploading selinuxnode test VM</title><link href="http://192.168.1.71:8000/2013/02/uploading-selinuxnode-test-vm/" rel="alternate"></link><published>2013-02-25T03:05:00+01:00</published><updated>2013-02-25T03:05:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-02-25:/2013/02/uploading-selinuxnode-test-vm/</id><summary type="html">&lt;p&gt;At the time of writing (but I'll delay the publication of this post a
few hours), I'm uploading a new SELinux-enabled KVM guest image. This is
not an update on the previous image though (it's a reinstalled system -
after all, I use VMs for testing, so it makes sense to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the time of writing (but I'll delay the publication of this post a
few hours), I'm uploading a new SELinux-enabled KVM guest image. This is
not an update on the previous image though (it's a reinstalled system -
after all, I use VMs for testing, so it makes sense to reinstall from
time to time to check if the installation instructions are still
accurate). However, the focus remains the same:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A minimal Gentoo Linux installation for amd64 (x86_64) as guest
    within a KVM hypervisor. The image is about 190 Mb in size
    compressed, and 1.6 Gb in size uncompressed. The file format is
    Qemu's QCOW2 so expect the image to grow as you work with it. The
    file systems are, in total, sized to about 50 Gb.&lt;/li&gt;
&lt;li&gt;The installation has SELinux enabled (strict policy, enforcing
    mode), various grSecurity settings enabled (including PaX and TPE),
    but now also includes IMA (Integrity Measurement Architecture) and
    EVM (Extended Verification Module) although EVM is by default
    started in fix mode.&lt;/li&gt;
&lt;li&gt;The image will not start any network-facing daemons by default
    (unlike the previous image) for security reasons (if I let this
    image stay around this long as I did with the previous, it's prone
    to have some vulnerabilities in the future, although I'm hoping I
    can update the image more frequently). This includes SSH, so you'll
    need access to the image console first after which you can configure
    the network and start SSH (&lt;strong&gt;run_init rc-service sshd start&lt;/strong&gt; does
    the trick).&lt;/li&gt;
&lt;li&gt;A couple of default accounts are created, and the image will display
    those accounts and their passwords on the screen (it is a test/play
    VM, not a production VM).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are still a few minor issues with it, that I hope to fix by the
next upload:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=457812"&gt;Bug 457812&lt;/a&gt; is
    still applicable to the image, so you'll notice lots of SELinux
    denials on the mknod capability. They seem to be cosmetic though.&lt;/li&gt;
&lt;li&gt;At shutdown, udev somewhere fails with a SELinux initial
    context problem. I thought I had it covered, but I noticed after
    compressing the image that it is still there. I'll fix it - I
    promise ;)&lt;/li&gt;
&lt;li&gt;EVM is enabled in fix mode, because otherwise EVM is &lt;a href="http://sourceforge.net/mailarchive/forum.php?thread_name=1361476641.29360.114.camel%40falcor1&amp;amp;forum_name=linux-ima-user"&gt;prohibiting
    mode
    changes&lt;/a&gt;
    on files in /run. I still have to investigate this further though -
    I had to use the EVM=fix workaround due to time pressure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When uploaded, I'll ask the Gentoo infrastructure team to synchronise
the image with our mirrors so you can enjoy it. It'll be on the
distfiles, under experimental/amd64/qemu-selinux (it has the 20130224
date in the name, so you can see for yourself if the sync has already
occurred or not).&lt;/p&gt;</content><category term="Gentoo"></category><category term="evm"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="ima"></category><category term="kvm"></category><category term="selinux"></category><category term="virtual"></category></entry><entry><title>Working on a new selinuxnode VM</title><link href="http://192.168.1.71:8000/2013/02/working-on-a-new-selinuxnode-vm/" rel="alternate"></link><published>2013-02-23T14:04:00+01:00</published><updated>2013-02-23T14:04:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-02-23:/2013/02/working-on-a-new-selinuxnode-vm/</id><summary type="html">&lt;p&gt;A long time ago, I made a &lt;a href="http://distfiles.gentoo.org/experimental/amd64/qemu-selinux/"&gt;SELinux enabled
VM&lt;/a&gt; for
people to play with, displaying a minimal Gentoo installation, including
the hardening features it supports (PIE/PIC toolchain, grSecurity, PaX
and SELinux). I'm currently trying to create a new one, which also
includes IMA/EVM, but it looks like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A long time ago, I made a &lt;a href="http://distfiles.gentoo.org/experimental/amd64/qemu-selinux/"&gt;SELinux enabled
VM&lt;/a&gt; for
people to play with, displaying a minimal Gentoo installation, including
the hardening features it supports (PIE/PIC toolchain, grSecurity, PaX
and SELinux). I'm currently trying to create a new one, which also
includes IMA/EVM, but it looks like I still have many things to
investigate further...&lt;/p&gt;
&lt;p&gt;First of all, I notice that many SELinux domains want to use the mknod
capability, even for domains of which I have no idea whatsoever why they
need it. I don't notice any downsides though, and running in permissive
mode doesn't change the domain behavior. But still, I'm reluctant to
mark them dontaudit as long as I'm not 100% sure.&lt;/p&gt;
&lt;p&gt;Second, the gettys (I think it is the getty) result in a "Cannot change
SELinux context: permission denied" error, even though everything is
running in the right SELinux context. I still have to confirm if it
really is the getty process or something else (the last run I had the
impression it was a udev-related process). But there are no denials and
no SELinux errors in the logs.&lt;/p&gt;
&lt;p&gt;Third, during shutdown, many domains have problems accessing their PID
files in /var/run (which is a link to /run). I most likely need to allow
read privileges on all domains that have access to var_run_t towards
the var_t symlinks. It isn't a problem per se (the processes still run
correctly) but ugly as hell, and if you introduce monitoring it'll go
haywire (as no PID files were either found, or were stale).&lt;/p&gt;
&lt;p&gt;Also, EVM is giving me a hard time, not allowing me to change mode and
ownership in files on /var/run. I have received some feedback from the
IMA user list on this so it is still very much a work-in-progress.&lt;/p&gt;
&lt;p&gt;Finally, the first attempt to generate a new VM resulted in a download
of 817 MB (instead of the 158 MB of the previous release), so I still
have to correct my USE flags and doublecheck the installed applications.
Anyway, definitely to be continued. Too bad time is a scarce resource
:-(&lt;/p&gt;</content><category term="Gentoo"></category><category term="evm"></category><category term="Gentoo"></category><category term="hardened"></category><category term="ima"></category><category term="selinux"></category><category term="selinuxnode"></category><category term="vm"></category></entry><entry><title>Transforming GuideXML to wiki</title><link href="http://192.168.1.71:8000/2013/02/transforming-guidexml-to-wiki/" rel="alternate"></link><published>2013-02-12T20:12:00+01:00</published><updated>2013-02-12T20:12:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-02-12:/2013/02/transforming-guidexml-to-wiki/</id><summary type="html">&lt;p&gt;The &lt;a href="http://www.gentoo.org"&gt;Gentoo project&lt;/a&gt; has its own &lt;a href="https://wiki.gentoo.org"&gt;official
wiki&lt;/a&gt; for some time now, and we are going to
use it more and more in the next few months. For instance, in the last
Gentoo Hardened meeting, we already discussed that most user-oriented
documentation should be put on the wiki, and I've …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="http://www.gentoo.org"&gt;Gentoo project&lt;/a&gt; has its own &lt;a href="https://wiki.gentoo.org"&gt;official
wiki&lt;/a&gt; for some time now, and we are going to
use it more and more in the next few months. For instance, in the last
Gentoo Hardened meeting, we already discussed that most user-oriented
documentation should be put on the wiki, and I've heard that there are
ideas on moving Gentoo project pages at large towards the wiki. And also
for the regular &lt;a href="http://www.gentoo.org/doc/en/list.xml"&gt;Gentoo
documentation&lt;/a&gt; I will be moving
those guides that we cannot maintain ourselves anymore easily towards
the wiki.&lt;/p&gt;
&lt;p&gt;To support migrations of documents, I created a
&lt;a href="https://github.com/sjvermeu/small.coding/blob/master/gxml2docbook/gxml2wiki.xsl"&gt;gxml2wiki.xsl&lt;/a&gt;
stylesheet. Such a stylesheet can be used, together with tools like
&lt;strong&gt;xsltproc&lt;/strong&gt;, to transform GuideXML documents into text output
&lt;em&gt;somewhat&lt;/em&gt; suitable for the wiki. It isn't perfect (far from it
actually) but at least it allows for a more simple migration of
documents with minor editing afterwards.&lt;/p&gt;
&lt;p&gt;Currently, using it is as simple as invoking it against the GuideXML
document you want to transform:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ xsltproc gxml2wiki.xsl /path/to/document.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output shown on the screen can then be used as a page. The following
things still need to be corrected manually:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Whitespace is broken, sometimes there are too many newlines. I had
    to make the decision to put in newlines when needed (which makes too
    many newlines) rather than a few newlines too few (which makes it
    more difficult to find where to add in).&lt;/li&gt;
&lt;li&gt;Links need to be double/triple checked, but i'll try to fix that in
    later editions of the stylesheet&lt;/li&gt;
&lt;li&gt;Commands will have "INTERNAL" in them - you'll need to move the
    commands themselves into the proper location and only put the
    necessary output in the pre-tags. This is because the wiki format
    has more structure than GuideXML in this matter, thus
    transformations are more difficult to write in this regard.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The stylesheet currently automatically adds in a link towards a Server
and security category, but of course you'll need to change that to the
proper category for the document you are converting.&lt;/p&gt;
&lt;p&gt;Happy documentation hacking!&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="guidexml"></category><category term="stylesheet"></category><category term="wiki"></category><category term="xml"></category><category term="xsl"></category></entry><entry><title>Gentoo Hardened goes onward (aka project meeting)</title><link href="http://192.168.1.71:8000/2013/02/gentoo-hardened-goes-onward-aka-project-meeting/" rel="alternate"></link><published>2013-02-07T23:40:00+01:00</published><updated>2013-02-07T23:40:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2013-02-07:/2013/02/gentoo-hardened-goes-onward-aka-project-meeting/</id><summary type="html">&lt;p&gt;It's been a while again, so time for another Gentoo Hardened online
progress meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is on development stage 4, so the hardened patches will be
worked on next week. Some help on it is needed to test the patches on
ARM, PPC and MIPS though. For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been a while again, so time for another Gentoo Hardened online
progress meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is on development stage 4, so the hardened patches will be
worked on next week. Some help on it is needed to test the patches on
ARM, PPC and MIPS though. For those interested, keep a close eye on the
hardened-dev overlay as those will contain the latest fixes. When GCC
4.9 starts development phase 1, Zorry will again try to upstream the
patches.&lt;/p&gt;
&lt;p&gt;With the coming fixes, we might probably (need to) remove the various
hardenedno* GCC profiles from the hardened Gentoo profiles. This
shouldn't impact too many users as ebuilds add in the correct flags
anyhow (for instance when needing to turn off PIE/PIC).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel, grSecurity and PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The kernel release 3.7.0 that we have stable in our tree has seen a few
setbacks, but no higher version is stable yet (mainly due to the
stabilization period needed). 3.7.4-r1 and 3.7.5 are prime candidates
with good track record,&lt;br&gt;
so we might be stabilizing 3.7.5 in the very near future (next week
probably).&lt;/p&gt;
&lt;p&gt;On the PaX flag migration (you know, from ELF-header based marking to
extended attributes marking), the documentation has seen its necessary
upgrades and the userland utilities have been updated to reflect the use
of xattr markings. The eclass we use for the markings will use the
correct utility based on the environment.&lt;/p&gt;
&lt;p&gt;One issue faced when trying to support both markings is that some
actions (like the "paxctl -Cc" which creates the PT_PAX header if it is
missing) make no sense with the other (as there is no header when using
XATTR_PAX). The eclass will be updated to ignore these flags when
XATTR_PAX is selected.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Revision 10 is stable in the tree, and revision 11 is waiting
stabilization period. A few more changes have been put in the policy
repository already (which are installed when using the live ebuilds) and
will of course be part of&lt;br&gt;
revision 12.&lt;/p&gt;
&lt;p&gt;A change in the userland utilities was also pushed out to allow
permissive domains (so run a single domain in permissive mode instead of
the entire system).&lt;/p&gt;
&lt;p&gt;Finally, the SELinux eclass has been updated to remove SELinux modules
from all defined SELinux module stores if the SELinux policy package is
removed from the system. Before that, the user had to remove the modules
from the store himself manually, but this is error-prone and easily
forgotten, especially for the non-default SELinux policy stores.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All hardened subprofiles are marked as deprecated now (you've seen the
discussions on this on the mailinglist probably on this) so we now have
a sane set of hardened profiles to manage. The subprofiles were used for
things like&lt;br&gt;
"desktop" or "server", whereas users can easily stack their profiles as
they see fit anyhow - so there was little reason for the project to
continue managing those subprofiles.&lt;/p&gt;
&lt;p&gt;Also, now that Gentoo has released its 13.0 profile, we will need to
migrate our profiles to the 13.0 ones as well. So, the idea is to
temporarily support 13.0 in a subprofile, test it thoroughly, and then
remove the subprofile and switch the main one to 13.0.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The documentation for IMA and EVM is available on the Gentoo Hardened
project site. They currently still refer to the IMA and EVM subsystems
as development-only, but they are available in the stable kernels now.
Especially the default policy that is available in the kernel is pretty
useful. When you want to consider custom policies (for instance with
SELinux integration) you'll need a kernel patch that is already
upstreamed but not applied to the stable kernels yet.&lt;/p&gt;
&lt;p&gt;To support IMA/EVM, a package called ima-evm-utils is available in the
hardened-dev overlay, which will be moved to the main tree soon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As mentioned before, the PaX documentation has seen quite a lot of
updates. Other documents that have seen updates are the Hardened FAQ,
Integrity subproject and SELinux documentation although most of them
were small changes.&lt;/p&gt;
&lt;p&gt;Another suggestion given is to clean up the Hardened project page;
however, there has been some talk within Gentoo to move project pages to
the Gentoo wiki. Such a move might make the suggestion easier to handle.
And while on the subject of the wiki, we might want to move user guides
to the wiki already.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bugs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Bug &lt;a href="https://bugs.gentoo.org/443630"&gt;443630&lt;/a&gt; refers to segmentation
faults with libvirt when starting Qemu domains on a SELinux-enabled
host. Sadly, I'm not able to test libvirt myself so either someone with
SELinux and libvirt&lt;br&gt;
expertise can chime in, or we will need to troubleshoot it by bug
(using gdb, strace'ing more, ...) which might take quite some time and
is not user friendly...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Media&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Various talks where held at FOSDEM regarding Gentoo Hardened, and a lot
of people attended those talks. Also the round table was quite
effective, with many users interacting with developers all around. For
next year, chances are very high that we'll give a "What has changed
since last year" session and a round table again.&lt;/p&gt;
&lt;p&gt;With many thanks to the usual suspects: Zorry, blueness, prometheanfire,
lejonet, klondike and the several dozen contributors that are going to
kill me for not mentioning their (nick)names.&lt;/p&gt;</content><category term="Gentoo"></category><category term="Gentoo"></category><category term="grsecurity"></category><category term="hardened"></category><category term="kernel"></category><category term="meeting"></category><category term="minutes"></category><category term="online"></category><category term="pax"></category><category term="profiles"></category><category term="selinux"></category></entry><entry><title>IMA and EVM on Gentoo, part 2</title><link href="http://192.168.1.71:8000/2012/12/ima-and-evm-on-gentoo-part-2/" rel="alternate"></link><published>2012-12-29T23:42:00+01:00</published><updated>2012-12-29T23:42:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-12-29:/2012/12/ima-and-evm-on-gentoo-part-2/</id><summary type="html">&lt;p&gt;I have been playing with &lt;a href="https://sourceforge.net/apps/mediawiki/linux-ima/index.php?title=Main_Page"&gt;Linux
IMA/EVM&lt;/a&gt;
on a Gentoo Hardened (with SELinux) system for a while and have been
documenting what I think is interesting/necessary for Gentoo Linux users
when they want to use IMA/EVM as well. Note that the documentation of
the Linux IMA/EVM …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been playing with &lt;a href="https://sourceforge.net/apps/mediawiki/linux-ima/index.php?title=Main_Page"&gt;Linux
IMA/EVM&lt;/a&gt;
on a Gentoo Hardened (with SELinux) system for a while and have been
documenting what I think is interesting/necessary for Gentoo Linux users
when they want to use IMA/EVM as well. Note that the documentation of
the Linux IMA/EVM project itself is very decent. It's all on a single
wiki page, but it's decent and I learned a lot from it.&lt;/p&gt;
&lt;p&gt;That being said, I do have the impression that the method they suggest
for generating IMA hashes for the entire system is not always working
properly. It might be because of SELinux on my system, but for now I'm
searching for another method that does seem to work well (I'm currently
trying my luck with a &lt;strong&gt;find ... -exec evmctl&lt;/strong&gt; based command). But once
the hashes are registered, it works pretty well (well, there's a
probably small SELinux problem where loading a new policy or updating
the existing policies seems to generate stale rules and I have to reboot
my system, but I'll find the culprit of that soon ;-)&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/docs/ima-guide.xml"&gt;IMA
Guide&lt;/a&gt;
has been updated to reflect recent findings - including how to load a
custom policy, and I have also started on the &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/docs/evm-guide.xml"&gt;EVM
Guide&lt;/a&gt;.
I think it'll take me a day or three to finish off the rough edges and
then I'll start creating a new SELinux node (KVM) image that users can
use with various Gentoo Hardened-supported technologies enabled (PaX,
grSecurity, SELinux, IMA and EVM).&lt;/p&gt;
&lt;p&gt;So if you're curious about IMA/EVM and willing to try it out on Gentoo
Linux, please have a look at those documents and see if they assist you
(or confuse you even more).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened IMA support</title><link href="http://192.168.1.71:8000/2012/12/gentoo-hardened-ima-support/" rel="alternate"></link><published>2012-12-27T22:40:00+01:00</published><updated>2012-12-27T22:40:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-12-27:/2012/12/gentoo-hardened-ima-support/</id><summary type="html">&lt;p&gt;Adventurous users, contributors and developers can enable the &lt;em&gt;Integrity
Measurement Architecture&lt;/em&gt; subsystem in the Linux kernel with appraisal
(since Linux kernel 3.7). In an attempt to support IMA (and EVM and
other technologies) properly, the &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;System
Integrity&lt;/a&gt;
subproject within &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; was launched a few
months ago. And now …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Adventurous users, contributors and developers can enable the &lt;em&gt;Integrity
Measurement Architecture&lt;/em&gt; subsystem in the Linux kernel with appraisal
(since Linux kernel 3.7). In an attempt to support IMA (and EVM and
other technologies) properly, the &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;System
Integrity&lt;/a&gt;
subproject within &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; was launched a few
months ago. And now that Linux kernel 3.7 is out (and stable) you can
start enjoying this additional security feature.&lt;/p&gt;
&lt;p&gt;With IMA (and IMA appraisal), you are able to protect your system from
offline tampering: modifications made to your files while the system is
offline will be detected as their hash values do not match the hash
values stored in extended attributes (whereas the extended attributes
are then protected through digitally signed values using the EVM
technology).&lt;/p&gt;
&lt;p&gt;I'm working on integrating IMA (and later EVM) properly, which of course
includes the necessary documentation:
&lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/docs/concepts.xml"&gt;concepts&lt;/a&gt;
and a &lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/docs/ima-guide.xml"&gt;ima
guide&lt;/a&gt;
for starters, with more to follow. Be aware though that the integration
is still in its infancy, but any questions and feedback is greatly
appreciated, and bugreports (like &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=448872"&gt;bug
448872&lt;/a&gt;) are definitely
welcome.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Switching policy types in Gentoo/SELinux</title><link href="http://192.168.1.71:8000/2012/12/switching-policy-types-in-gentooselinux/" rel="alternate"></link><published>2012-12-20T11:31:00+01:00</published><updated>2012-12-20T11:31:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-12-20:/2012/12/switching-policy-types-in-gentooselinux/</id><summary type="html">&lt;p&gt;When you are running Gentoo with SELinux enabled, you will be running
with a particular policy type, which you can devise from either
&lt;code&gt;/etc/selinux/config&lt;/code&gt; or from the output of the &lt;strong&gt;sestatus&lt;/strong&gt; command. As
a user on our IRC channel had some issues converting his strict-policy
system to mcs …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you are running Gentoo with SELinux enabled, you will be running
with a particular policy type, which you can devise from either
&lt;code&gt;/etc/selinux/config&lt;/code&gt; or from the output of the &lt;strong&gt;sestatus&lt;/strong&gt; command. As
a user on our IRC channel had some issues converting his strict-policy
system to mcs, I thought about testing it out myself. Below are the
steps I did and the reasoning why (and I will update the docs to reflect
this accordingly).&lt;/p&gt;
&lt;p&gt;Let's first see if the type I am running at this moment is indeed
strict, and that the mcs type is defined in the POLICY_TYPES variable.
This is necessary because the &lt;em&gt;sec-policy/selinux-*&lt;/em&gt; packages will then
build the policy modules for the other types referenced in this variable
as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             strict
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              disabled
Policy deny_unknown status:     denied
Max kernel policy version:      28

test ~ # grep POLICY_TYPES /etc/portage/make.conf
POLICY_TYPES=&amp;quot;targeted strict mcs&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you notice that this is not the case, update the &lt;em&gt;POLICY_TYPES&lt;/em&gt;
variable and rebuild all SELinux policy packages using &lt;strong&gt;emerge \$(qlist
-IC sec-policy)&lt;/strong&gt; first.&lt;/p&gt;
&lt;p&gt;Let's see if I indeed have policies for the other types available and
that they are recent (modification date):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # ls -l /etc/selinux/*/policy
/etc/selinux/mcs/policy:
total 408
-rw-r--r--. 1 root root 417228 Dec 19 21:01 policy.27

/etc/selinux/strict/policy:
total 384
-rw-r--r--. 1 root root 392168 Dec 19 21:15 policy.27

/etc/selinux/targeted/policy:
total 396
-rw-r--r--. 1 root root 402931 Dec 19 21:01 policy.27
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Great, we're now going to switch to permissive mode and edit the SELinux
configuration file to reflect that we are going to boot (later) into the
mcs policy. Only change the type - I will not boot in permissive mode so
the SELINUX=enforcing can stay.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # setenforce 0

test ~ # vim /etc/selinux/config
[... set SELINUXTYPE=mcs ...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can run &lt;strong&gt;sestatus&lt;/strong&gt; to verify the changes, but be aware that -
while the command does say that the mcs policy is loaded, this is not
the case. The mcs policy is just defined as the policy to load:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             mcs
Current mode:                   permissive
Mode from config file:          enforcing
Policy MLS status:              disabled
Policy deny_unknown status:     denied
Max kernel policy version:      28
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So let's load the mcs policy shall we?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # cd /usr/share/selinux/mcs/
test mcs # semodule -b base.pp -i $(ls *.pp | grep -v base | grep -v unconfined)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we are going to relabel all files on the file system, because the
mcs policy adds in another component in the context (a sensitivity label
- always set to 0 for mcs). We will also re-do the &lt;strong&gt;setfiles&lt;/strong&gt; steps
done initially while setting up SELinux on our system. This is because
we need to relabel files that are "hidden" from the current file system
because other file systems are mounted on top of it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test mcs # rlpkg -a -r
Relabeling filesystem types: btrfs ext2 ext3 ext4 jfs xfs
Scanning for shared libraries with text relocations...
0 libraries with text relocations, 0 not relabeled.
Scanning for PIE binaries with text relocations...
0 binaries with text relocations detected.

test mcs # mount -o bind / /mnt/gentoo
test mcs # setfiles -r /mnt/gentoo /etc/selinux/mcs/contexts/files/file_contexts /mnt/gentoo/dev
test mcs # setfiles -r /mnt/gentoo /etc/selinux/mcs/contexts/files/file_contexts /mnt/gentoo/lib64
test mcs # umount /mnt/gentoo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, edit &lt;code&gt;/etc/fstab&lt;/code&gt; and change all &lt;em&gt;rootcontext=&lt;/em&gt; parameters to
include a trailing &lt;code&gt;:s0&lt;/code&gt;, otherwise the root contexts of these file
systems will be illegal (in the mcs-sense) as they do not contain the
sensitivity level information.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test mcs # vim /etc/fstab
[... edit rootcontext&amp;#39;s to now include &amp;quot;:s0&amp;quot; ...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There ya go. Now reboot and notice that all is okay, and we're running
with the mcs policy loaded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;test ~ # id -Z
root:sysadm_r:sysadm_t:s0-s0:c0.c1023
test ~ # sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             mcs
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     denied
Max kernel policy version:      28
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Gentoo"></category></entry><entry><title>Another hardened month has passed...</title><link href="http://192.168.1.71:8000/2012/12/another-hardened-month-has-passed/" rel="alternate"></link><published>2012-12-13T10:02:00+01:00</published><updated>2012-12-13T10:02:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-12-13:/2012/12/another-hardened-month-has-passed/</id><summary type="html">&lt;p&gt;... so it's time for a new update ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is still in its stage 3 development phase, so Zorry will send
out the patches to the GCC development community when this phase is
done. For Gentoo hardened itself, we now support all architectures
except for IA64 (which never …&lt;/p&gt;</summary><content type="html">&lt;p&gt;... so it's time for a new update ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Toolchain&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GCC 4.8 is still in its stage 3 development phase, so Zorry will send
out the patches to the GCC development community when this phase is
done. For Gentoo hardened itself, we now support all architectures
except for IA64 (which never had SSP).&lt;/p&gt;
&lt;p&gt;Full uclibc support is now in place for amd64, i686, mips32r2: not only
is their technological support ok, but stages are now also automatically
built to support installations through the regular installation
instructions. The next target to get stages automatically built for is
armv7a.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kernel and grSecurity/PaX&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Stabilization on 3.6.x is still showing some difficulties. Until those
are resolved, we're still stable in 3.5.4. We have a couple of panics in
some odd cases, but these will need to be resolved before we can
stabilize further.&lt;/p&gt;
&lt;p&gt;glibc-2.16 will also drop the declarations for PT_PAX (in elf.h) and
the binutils will also not cover PT_PAX phdr anymore. So, we will
standardize fully on xattr-based PaX flags. This will get some proper
focus in the next period to ensure this is done correctly. Most work on
this support is focusing on communication towards users and the
pax-utils eclass support.&lt;/p&gt;
&lt;p&gt;There was some confusion if the tmpfs-xattr patch would or would not
properly restrict access, but it looks like the PaX patch on mm/shmem.c
was based upon the Gentoo patch and enhanced with the needed
restrictions, so we can just keep the PaX code.&lt;/p&gt;
&lt;p&gt;On USE="pax_kernel", which should enable some updates on userland
utilities when applications are run under a PaX enabled kernel,
prometheanfire tried to get this as a global USE flag (as many
applications might eventually want to get a trigger on it). However, due
to some confusion on the meaning of the USE flag, and potential need to
depend on additional tools, we're going to stick with a local flag for
now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SELinux&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;schmitt953 will help in the testing and possible development of SELinux
policies for Samba 4.&lt;/p&gt;
&lt;p&gt;Furthermore, the userspace utilities have been stabilized (except for
the setools-3.3.7-r5+ due to some swig problems, but those have been
worked around in setools-3.3.7-r6). Also, the rev8 policies are in the
tree and no big problems were reported on them. They are currently still
\~arch, but will be stabilized in the next few days. A new rev9 release
will be pushed to the hardened-dev overlay soon as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Profiles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;nvidia is unmasked for the hardened profiles, but still has X and tools
USE flags masked, and is only supported on kernels 3.0.x and higher.&lt;/p&gt;
&lt;p&gt;Also, the hardened/linux/uclibc/arm/armv7a profile is now available as a
development profile. Profiles will be updated as the architectures for
ARM are getting supported, so expect more in the next month.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;System Integrity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We were waiting for kernel 3.7, which just got released, so we can now
start integrating this further. Expect more updates by next meeting.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For SELinux, some information on USE="unconfined" is added to the
SELinux handbook. Blueness will also start documenting the xattr pax
stuff.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Why you need the real_* thing with genkernel</title><link href="http://192.168.1.71:8000/2012/11/why-you-need-the-real_-thing-with-genkernel/" rel="alternate"></link><published>2012-11-25T21:05:00+01:00</published><updated>2012-11-25T21:05:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-11-25:/2012/11/why-you-need-the-real_-thing-with-genkernel/</id><summary type="html">&lt;p&gt;Today it bit me. I rebooted my workstation, and all hell broke loose.
Well, actually, it froze. Literally, if you consider my root file
system. When the system tried to remount the root file system
read-write, it gave me this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mount: / not mounted or bad option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I did the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today it bit me. I rebooted my workstation, and all hell broke loose.
Well, actually, it froze. Literally, if you consider my root file
system. When the system tried to remount the root file system
read-write, it gave me this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mount: / not mounted or bad option
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So I did the first thing that always helps me, and that is to disable
the initramfs booting and boot straight from the kernel. Now for those
wondering why I boot with an initramfs while it still works directly
with a kernel: it's a safety measure. Ever since there are talks,
rumours, fear, uncertainty and doubt about supporting a separate /usr
file system I started supporting an initramfs on my system in case an
update really breaks the regular boot cycle. Same because I use lvm on
most file systems, and software RAID on all of them. If I wouldn't have
an initramfs laying around, I would be screwed the moment userspace
decides not to support this straight from a kernel boot. Luckily, this
isn't the case (yet) so I could continue working without an initramfs.
But I digress. Back to the situation.&lt;/p&gt;
&lt;p&gt;Booting without initramfs worked without errors of any kind. Next thing
is to investigate why it fails. I reboot back with the initramfs, get my
read-only root file system and start looking around. In my &lt;strong&gt;dmesg&lt;/strong&gt;
output, I notice the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;EXT4-fs (md3): Cannot change data mode on remount
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So that's weird, not? What is this data mode? Well, the &lt;a href="https://www.kernel.org/doc/Documentation/filesystems/ext4.txt"&gt;data
mode&lt;/a&gt;
tells the file system (ext4 for me) how to handle writing data to disk.
As you are all aware, ext4 is a journaled file system, meaning it writes
changes into a journal before applying, allowing changes to be replayed
when the system suddenly crashes. By default, ext4 uses ordered mode,
writing the metadata (information about files and such, like inode
information, timestamps, block maps, extended attributes, ... but not
the data itself) to the journal right after writing data to the disk,
after which the metadata is then written to disk as well.&lt;/p&gt;
&lt;p&gt;On my system though, I use &lt;code&gt;data=journal&lt;/code&gt; so data too is written to the
journal first. This gives a higher degree of protection in case of a
system crash (or immediate powerdown - my laptop doesn't recognize
batteries anymore and with a daughter playing around, I've had my share
of sudden powerdowns). I do boot with the &lt;code&gt;rootflags=data=journal&lt;/code&gt; and I
have &lt;code&gt;data=journal&lt;/code&gt; in my fstab.&lt;/p&gt;
&lt;p&gt;But the above error tells me otherwise. It tells me that the mode is not
what I want it to be. So after fiddling a bit with the options and (of
course) using Google to find more information, I found out that my
initramfs doesn't check the &lt;e&gt;rootflags&lt;/e&gt; parameter, so it mounts the
root file system with the standard (ordered) mode. Trying to remount it
later will fail, as my fstab contains the &lt;code&gt;data=journal&lt;/code&gt; tag, and
running &lt;strong&gt;mount -o remount,rw,data=ordered&lt;/strong&gt; for fun doesn't give many
smiles.&lt;/p&gt;
&lt;p&gt;The man page for &lt;strong&gt;genkernel&lt;/strong&gt; however showed me that it uses
&lt;code&gt;real_rootflags&lt;/code&gt;. So I reboot with that parameter set to
&lt;code&gt;real_rootflags=data=journal&lt;/code&gt; and all is okay again.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; I wrote that even changing the default mount options in the file
system itself (using &lt;strong&gt;tune2fs /dev/md3 -o journal_data&lt;/strong&gt;) didn't help.
However, that seems to be an error on my part, I didn't reboot after
toggling this, which is apparently required. Thanks to Xake for pointing
that out.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>The hardened project continues going forward...</title><link href="http://192.168.1.71:8000/2012/11/the-hardened-project-continues-going-forward/" rel="alternate"></link><published>2012-11-17T21:34:00+01:00</published><updated>2012-11-17T21:34:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-11-17:/2012/11/the-hardened-project-continues-going-forward/</id><summary type="html">&lt;p&gt;This wednesday, the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; team held its monthly
online meeting, discussing the things that have been done the last few
weeks and the ideas that are being worked out for the next. As I did
with the last few meetings, allow me to summarize it for all interested
parties …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This wednesday, the &lt;a href="http://www.gentoo.org/proj/en/hardened"&gt;Gentoo
Hardened&lt;/a&gt; team held its monthly
online meeting, discussing the things that have been done the last few
weeks and the ideas that are being worked out for the next. As I did
with the last few meetings, allow me to summarize it for all interested
parties...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The upstream GCC development on the 4.8 version progressed into its 3rd
stage of its development cycle. Sadly, many of our hardened patches
didn't make the release. Zorry will continue working on these things,
hopefully still being able to merge a few - and otherwise it'll be for
the next release.&lt;/p&gt;
&lt;p&gt;For the MIPS platform, we might not be able to support the hardenedno*
GCC profiles [1] in time. However, this is not seen as a blocker
(we're mostly interested in the hardened ones, not the ones without
hardening ;-) so this could be done later on.&lt;/p&gt;
&lt;p&gt;Blueness is migrating the stage building for the uclibc stages towards
catalyst, providing more clean stages. For the amd64 and i686 platforms,
the uclibc-hardened and uclibc-vanilla stages are already done, and
mips32r2/uclibc is on the way. Later, ARM stages will be looked at.
Other platforms, like little endian MIPS, are also on the roadmap.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kernel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The latest hardened-sources (\~arch) package contains a patch supporting
the &lt;em&gt;user.*&lt;/em&gt; namespace for extended attributes in tmpfs, as needed for
the XATTR_PAX support [2]. However, this patch has not been properly
investigated nor tested, so input is definitely welcome. During the
meeting, it was suggested to cap the length of the attribute value and
only allow the &lt;em&gt;user.pax&lt;/em&gt; attribute, as we are otherwise allowing
unprivileged applications to "grow data" in the kernel memory space (the
tmpfs).&lt;/p&gt;
&lt;p&gt;Prometheanfire confirmed that recent-enough kernels (3.5.4-r1 and later)
with nested paging do not exhibit the performance issues reported
earlier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SELinux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The 20120725 upstream policies are stabilized on revision 5. Although a
next revision is already available in the hardened-dev overlay, it will
not be pushed to the main tree due to a broken admin interface. Revision
7 is slated to be made available later the same day to fix this, and is
the next candidate for being pushed to the main tree.&lt;/p&gt;
&lt;p&gt;The september-released newer userspace utilities for SELinux are also
going to be stabilized in the next few days (at the time of writing this
post, they are ;-). These also support &lt;em&gt;epatch_user&lt;/em&gt; so that users and
developers can easily add in patches to try out stuff without having to
repackage the application themselves.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;grSecurity and PaX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The toolchain support for PT_PAX (the ELF-header based PaX markings) is
due to be removed soon, meaning that the XATTR_PAX support will need to
be matured by then. This has a few consequences on available packages
(which will need a bump and fix) such as elfix, but also on the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=commit;h=eb3a2e198c926aca7063aa036793bb94bfbec1ef"&gt;pax-utils.eclass&lt;/a&gt;
file (interested parties are kindly requested to test out the new eclass
before it reaches "production"). Of course, it will also mean that the
new PaX approach needs to be properly documented for end users and
developers.&lt;/p&gt;
&lt;p&gt;pipacs also mentioned that he is working on a paxctld daemon. Just like
SELinux' restorecond daemon, this deamon will look for files and check
them against a known database of binaries with their appropriate PaX
markings. If the markings are set differently (or not set), the paxctld
daemon will rectify the situation. For Gentoo, this is less of a concern
as we already set the proper information through the ebuilds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Profiles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The old SELinux profiles, which were already deprecated for a while,
have been removed from the portage tree. That means that all
SELinux-using profiles use the &lt;em&gt;features/selinux&lt;/em&gt; inclusion rather than
a fully build (yet difficult to maintain) profile definition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System Integrity&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few packages, needed to support or work with ima/evm, have been pushed
to the hardened-dev overlay.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The SELinux handbook has been updated with the latest policy changes
(such as supporting the named init scripts). We also &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-constraints.xml"&gt;documented SELinux
policy
constraints&lt;/a&gt;
which was long overdue.&lt;/p&gt;
&lt;p&gt;So again a nice month of (volunteer) work on the security state of
Gentoo Hardened. Thanks again to all (developers, contributors and
users) for making Gentoo Hardened where it is today. Zorry will send out
the meeting log later to the mailinglist, so you can look at the more
gory details of the meeting if you want.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[1] GCC profiles are a set of parameters passed on to GCC as a
    "default" setting. Gentoo hardened uses GCC profiles to support
    using non-hardening features if the users wants to (through the
    &lt;strong&gt;gcc-config&lt;/strong&gt; application).&lt;/li&gt;
&lt;li&gt;[2] XATTR_PAX is a new way of handling PaX markings on binaries.
    Previously, we kept the PaX markings (i.e. flags telling the kernel
    PaX code to allow or deny specific behavior or enable certain
    memory-related hardening features for a specific application) as
    flags in the binary itself (inside the ELF header). With XATTR_PAX,
    this is moved to an extended attribute called "user.pax".&lt;/li&gt;
&lt;/ul&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened progress meeting</title><link href="http://192.168.1.71:8000/2012/10/gentoo-hardened-progress-meeting/" rel="alternate"></link><published>2012-10-14T15:00:00+02:00</published><updated>2012-10-14T15:00:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-10-14:/2012/10/gentoo-hardened-progress-meeting/</id><summary type="html">&lt;p&gt;Not that long ago we had our monthly Gentoo Hardened project meeting (on
October 3rd to be exact). On these meetings, we discuss the progress of
the project since the last meeting.&lt;/p&gt;
&lt;p&gt;For our &lt;em&gt;toolchain&lt;/em&gt; domain, Zorry reported that the PIE patchset is
updated for GCC, fixing bug &lt;a href="https://bugs.gentoo.org/436924"&gt;#436924&lt;/a&gt;.
Blueness …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Not that long ago we had our monthly Gentoo Hardened project meeting (on
October 3rd to be exact). On these meetings, we discuss the progress of
the project since the last meeting.&lt;/p&gt;
&lt;p&gt;For our &lt;em&gt;toolchain&lt;/em&gt; domain, Zorry reported that the PIE patchset is
updated for GCC, fixing bug &lt;a href="https://bugs.gentoo.org/436924"&gt;#436924&lt;/a&gt;.
Blueness also mentioned that he will most likely create a separate
subproject for the alternative hardened systems (such as mips and arm).
This is mostly for management reasons (as the information is currently
scattered throughout the Gentoo project at large).&lt;/p&gt;
&lt;p&gt;For the &lt;em&gt;kernel&lt;/em&gt; domain, since version 3.5.4-r2 (and higher), the
kernexec and uderef settings (for grSecurity) should no longer impact
performance on virtualized platforms (when hardware acceleration is used
of course), something that has been bothering Intel-based systems for
quite some time already. Also, the problem with guest systems
immediately reserving (committing) all memory on the host should be
fixed with recent kernels as well. Of course, this is only true as long
as you don't sanitize your memory, otherwise all memory gets allocated
regardless.&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;SELinux&lt;/em&gt; subproject, we now have live ebuilds allowing users to
pull in the latest policy changes directly from the git repository where
we keep our policy at. Also, we will see a high commit frequency in the
next few weeks (or perhaps even months) as Fedora's changes are being
merged with upstream. Another change is that our patchbundles no longer
contain all individual patches, but a merged patch. This increases the
deployment time of a SELinux policy package considerably (up to 30%
faster since patching is now only a second or less). And finally, the
latest userspace utilities are in the hardened-dev overlay ready for
broader testing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;grSecurity&lt;/em&gt; is still focusing on the XATTR-based PaX flags. The eclass
(pax-utils) has been updated, and we will now be looking at supporting
the PaX extended attributes for file systems such as tmpfs.&lt;/p&gt;
&lt;p&gt;For &lt;em&gt;profiles&lt;/em&gt;, people will notice that in the next few weeks, we will
be dropping the (extremely) old SELinux profiles as the current ones
have been marked stable long time ago.&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;system integrity&lt;/em&gt; domain, IMA is being worked on (packages and
documentation) after which we'll move to the EVM support to protect
extended attributes.&lt;/p&gt;
&lt;p&gt;And finally, klondike held a good talk about Gentoo Hardened at the
Flossk conference in Kosovo.&lt;/p&gt;
&lt;p&gt;All in all a good month of work, again with many thanks to the
volunteers that are keeping Gentoo Hardened alive and kicking!&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened in August</title><link href="http://192.168.1.71:8000/2012/08/gentoo-hardened-in-august/" rel="alternate"></link><published>2012-08-25T17:18:00+02:00</published><updated>2012-08-25T17:18:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-08-25:/2012/08/gentoo-hardened-in-august/</id><summary type="html">&lt;p&gt;Last wednesday &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; held its
monthly online meeting to discuss the progress of the various
subprojects, reconfirm the current project leads, talk about potential
new projects and discuss some bugs that were getting on our nerves...&lt;/p&gt;
&lt;p&gt;For the project leads, all current leads were reconfirmed: Zorry will
keep tight …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last wednesday &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; held its
monthly online meeting to discuss the progress of the various
subprojects, reconfirm the current project leads, talk about potential
new projects and discuss some bugs that were getting on our nerves...&lt;/p&gt;
&lt;p&gt;For the project leads, all current leads were reconfirmed: Zorry will
keep tight ship as Gentoo Hardened project lead, and will also continue
as the lead for the toolchain-related projects. Blueness keeps tackling
the kernel, pax, grsec and rsbac subprojects, klondike the documentation
and media and I will continue with the SELinux and integrity
subprojects.&lt;/p&gt;
&lt;p&gt;On the toolchain progress, Zorry is working on the 4.8 patches and hopes
to be able to submit them upstream later this month. Blueness continues
maintaining the uclibc architectures mentioned last month and is working
on the documentation related to it.&lt;/p&gt;
&lt;p&gt;On the kernel side, there were some reports submitted that were
triggered by the integer overflow plugin. This plugin, called
&lt;a href="https://grsecurity.net/pipermail/grsecurity/2012-March/001091.html"&gt;size_overflow&lt;/a&gt;
aims to detect integer overflows where an increase of an integer value
goes beyond its maximum and wraps around (resulting in either a negative
or a small integer result). This is of course unwanted behavior, so a
gcc plugin (by Emese Revfy) is used to detect such occurrences.
Basically, this plugin will recalculate whatever is done with the
integers on a double precision integer level and see if the logic result
is the same. If it isn't, then an overflow has most likely occurred.
This is of course overly simply explained, but from what I can fond in
the interwebs, not that far from the truth.&lt;/p&gt;
&lt;p&gt;The reports are generally about network-related applications, like
&lt;a href="http://www.torproject.org"&gt;tor&lt;/a&gt;, which are terminated because something
fishy occurred within the network handling code of the kernel (see for
instance bug
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=430906"&gt;#430906&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In the SELinux camp, the documentation has been updated to inform users
on how to create a new role (see also an earlier post of mine) and a few
patches to the setools package have been added to support
Python-2.7-only systems as well as systems using the latest swig. Also,
all userspace utilities for SELinux should support both Python 2.7 and
Python 3.x - the only remaining aspect is the SELinux code within
Portage (see &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=430488"&gt;bug
#430488&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Regarding grSecurity and PaX, blueness is working on the xattr PaX
markings support in Gentoo, and a &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=427888"&gt;tracker
bug&lt;/a&gt; has been opened to
manage the changes needed. Vapier suggested to move towards xattr
markings completely and drop the PT_PAX ELF header support, but this
cannot be done until all file systems support user-level extended
attributes. That being said, it is a good idea to do this in the long
run though as extended attributes give greater flexibility and don't
manipulate the binaries of an application.&lt;/p&gt;
&lt;p&gt;On the integrity subproject, the concepts and introduction documentation
is online. I'm working on a few ebuilds that are needed to support
IMA/EVM and should hopefully hit the hardened development overlay the
next week. The primary focus now is to support creating a "secure image"
which, when uploaded to a hosting service, would detect if the hosting
service tampered with the image outside (i.e. by manipulating the image
file itself).&lt;/p&gt;
&lt;p&gt;Finally, on documentation and media, we will need to look into updating
the prelude/LIDS documentation (host intrusion prevention/detection
documentation) as it is quite old and obsoleted currently. Klondike also
recently gave a talk about Gentoo Hardened (put the stuff online
Francisco !) but I don't recall anymore where - I'lll update when I see
the meeting log ;-)&lt;/p&gt;
&lt;p&gt;All by all a nice month! Good going guys.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Adding roles to the Gentoo Hardened SELinux policy</title><link href="http://192.168.1.71:8000/2012/08/adding-roles-to-the-gentoo-hardened-selinux-policy/" rel="alternate"></link><published>2012-08-14T20:39:00+02:00</published><updated>2012-08-14T20:39:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-08-14:/2012/08/adding-roles-to-the-gentoo-hardened-selinux-policy/</id><summary type="html">&lt;p&gt;I &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=5#doc_chap4"&gt;wrote a small
section&lt;/a&gt;
on how to create additional roles to the SELinux policy offered by
Gentoo Hardened. Whereas the default policy that we provide only offers
a few basic roles, any policy administrator can provide additional roles
for the system.&lt;/p&gt;
&lt;p&gt;By using additional roles, you can grant users …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=5#doc_chap4"&gt;wrote a small
section&lt;/a&gt;
on how to create additional roles to the SELinux policy offered by
Gentoo Hardened. Whereas the default policy that we provide only offers
a few basic roles, any policy administrator can provide additional roles
for the system.&lt;/p&gt;
&lt;p&gt;By using additional roles, you can grant users administrative rights to
particular services without risking having them elevate their privileges
to root (+ sysadmin). You should even allow them to get a root shell
while remaining confined within their domain (and role).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Kickstarting the Integrity subproject</title><link href="http://192.168.1.71:8000/2012/07/kickstarting-the-integrity-subproject/" rel="alternate"></link><published>2012-07-30T21:34:00+02:00</published><updated>2012-07-30T21:34:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-07-30:/2012/07/kickstarting-the-integrity-subproject/</id><summary type="html">&lt;p&gt;Now that Gentoo Hardened has its
&lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;integrity&lt;/a&gt;
subproject, I started with writing down the
&lt;a href="http://goo.gl/57K8g"&gt;concepts&lt;/a&gt; (draft - will move to the project site
when finished!) used within the subproject: what is integrity, how does
trust fit into this, what kind of technologies will we look at, etc. I'm
hoping that this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Now that Gentoo Hardened has its
&lt;a href="http://www.gentoo.org/proj/en/hardened/integrity/index.xml"&gt;integrity&lt;/a&gt;
subproject, I started with writing down the
&lt;a href="http://goo.gl/57K8g"&gt;concepts&lt;/a&gt; (draft - will move to the project site
when finished!) used within the subproject: what is integrity, how does
trust fit into this, what kind of technologies will we look at, etc. I'm
hoping that this document will help users in positioning this project as
well as already identify a few areas where I think we need to work on.&lt;/p&gt;
&lt;p&gt;The guide starts with talking about hashes (since hashes are often used
in integrity validation schemes), continuing towards HMAC (for
authenticated hashes) and signed HMAC digests (for better protection of
the cryptographic keys while verifying the integrity). It already talks
a bit about trust (and trust chains) and how it works in both ways
(top-down and bottom up - the latter especially when considering you are
running services on platforms you do not manage yourself).&lt;/p&gt;
&lt;p&gt;I will be working further on this, describing how the trusted computing
group's vision and the trusted platform module standard they developed
fits into this as a &lt;em&gt;possible implementation&lt;/em&gt; of trust validation
(hopefully without getting to the religious part of it) as well as
giving first highlights on other technologies we will look at as well.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened on the move</title><link href="http://192.168.1.71:8000/2012/07/gentoo-hardened-on-the-move/" rel="alternate"></link><published>2012-07-26T00:41:00+02:00</published><updated>2012-07-26T00:41:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-07-26:/2012/07/gentoo-hardened-on-the-move/</id><summary type="html">&lt;p&gt;Gentoo Hardened is thriving and going forward. For those that don't
exactly know what &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; is - it
is a Gentoo project dedicated to bring Gentoo in a shape ready for
highly secure, high stability production server environments. This is
what we live by, and why we do what we …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gentoo Hardened is thriving and going forward. For those that don't
exactly know what &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; is - it
is a Gentoo project dedicated to bring Gentoo in a shape ready for
highly secure, high stability production server environments. This is
what we live by, and why we do what we do. To accomplish this goal, we
use a great community of developers &amp;amp; users that work on several
subprojects: the implementation of kernel hardening features such as
grSecurity, memory-based protection schemes such as PaX, toolchain
updates to harden against buffer overflows and memory attacks, mandatory
access control schemes such as SELinux and RSBAC.&lt;/p&gt;
&lt;p&gt;In Gentoo Hardened we then integrate these technologies in Gentoo Linux
so that it is usable by a larger community, well documented and
supported. I'm myself heavily working on the SELinux integration &amp;amp;
documentation aspects, and am hoping to contribute even further - but
more about that in a minute.&lt;/p&gt;
&lt;p&gt;Today, we had an online meeting where developers present their current
"state of affairs" and the upcoming things they are going to work on.
This is done about once every month in the IRC chat channel
#gentoo-hardened on the freenode network. Of course, most of the
developers are available on the chat channel on an (almost) daily basis.&lt;/p&gt;
&lt;p&gt;Todays meeting gave us feedback on the following (and remind you, this
is one month of volunteer-driven work)...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Toolchain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When we talk about the toolchain, we mean the set of tools and libraries
needed to build a (hardened) system. We put most focus on the GCC
compiler because it contains most of the changes we support (like stack
smashing protection, position independent code/executable changes, etc.)
but work on libraries like glibc and uclibc are on their way as well.&lt;/p&gt;
&lt;p&gt;Zorry (yeah, I'm going to use nicknames here so you know who you're
talking to on IRC ;-) is working on getting our patches upstream
(meaning that the main GCC development can incorporate our patches).
Sending and working together with the main projects is very important as
it provides not only continuity on the patches (once they are upstream,
more people are maintaining the code than just you/us), but also gives a
multi-eye view on the code: is it of high quality? Does it comply with
the proper security guidelines? What about impact of the code on things
we don't or haven't considered yet?&lt;/p&gt;
&lt;p&gt;On the library part, blueness (one of our Gentoo Hardened developers and
- imho - an expert in many fields) has been working on Hardened support
on ARM (armv7a) with uclibc. He has put up stage4 files for armv7a
softfloat uclibc hardened and is working on those for hardfloat. This
means that ARM with uclibc+hardened or ARM with glibc+hardened are
working - he has even tested an xfce4 desktop on ARM with uclibc and
hardened toolchain.&lt;/p&gt;
&lt;p&gt;ARM support is becoming more and more important in the technology field.
Other major processor players like SPARC, Itanium, PowerPC, ... are
slowly seeing less and less market share, whereas ARM - albeit currently
still a very small player - is rapidly gaining momentum. You all know
ARM from the smartphones and other embedded-like platforms, but ARM on
servers is coming faster than you expect. Being a simple platform with
low energy consumption and good commercial backing (both on CPU level as
well as platform support), we can see ARM becoming a major player on
this - and Gentoo Hardened is actively working towards it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kernel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Within Gentoo Hardened, we support the
&lt;a href="https://grsecurity.net/"&gt;grSecurity&lt;/a&gt; and
&lt;a href="https://pax.grsecurity.net/"&gt;PaX&lt;/a&gt; kernel patches for a more hardened
Linux kernel. But this additional hardening can also sometimes interfere
with the normal functioning of systems. To help users in their
configuration quest, grSecurity allows users to select a few "prebuilt
configuration types" in the kernel build.&lt;/p&gt;
&lt;p&gt;Previously, these types where one of the following label:
"virtualization", "workstation" or "server". Based on these labels, the
security settings that did not negatively effect the functioning of the
system were selected. Recently, the labels have changed into a
question-based configuration: is it a server or not? will you use it for
virtualization and if so, on host or guest? Is performance for you more
important than security? These questions are now also
&lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_00005.xml"&gt;integrated&lt;/a&gt;
in our hardened-sources.&lt;/p&gt;
&lt;p&gt;While working and testing one of the kernel settings (KERNEXEC - kernel
non-executable pages, to protect non-code containing memory pages from
being used to run (potentially hostile/injected) code from) in a
virtualized environment, prometheanfire (another Gentoo Hardened
developer) noticed a possible regression on the performance of guests if
the host had KERNEXEC set. A severe performance hit is to be expected if
the host processor doesn't support hardware-assisted nested page tables
(a method for supporting memory page virtualization), but this also
seemed to occur on systems with nested page tables (&lt;code&gt;/proc/cpuinfo&lt;/code&gt; flag
&lt;code&gt;ept&lt;/code&gt; for Intel, or &lt;code&gt;rvi&lt;/code&gt; for AMD). So more testing (from others as
well) is therefore needed to confirm and work on this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SELinux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One of Gentoo Hardened's subprojects (and one I'm most actively working
on) is its support for SELinux or Security Enhanced Linux. It offers a
Mandatory Access Control implementation for Linux, ensuring that users
cannot change the security settings that an administrator has set (which
is Discretionary Access Control if they can), but also enforce that
services/processes can not be forced to do things they are not meant to
do. This provides reasonable protection against things like remote code
execution exploits, or just limit what an administrator wants particular
processes to do. With SELinux, you can even define roles to properly
identify and segregate tasks, providing a method for "segregation of
duties" on OS level.&lt;/p&gt;
&lt;p&gt;Anyway, as I said, Gentoo Hardened is actively working on SELinux
integration. First of all is stages support (providing a small,
deployable system unit that users can use to install a SELinux-enabled
system) as currently, users are forced to switch to SELinux after having
installed Gentoo, which is a &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml?part=2&amp;amp;chap=1"&gt;multi-step
approach&lt;/a&gt;.
By offering stages, we can simplify the deployment of Gentoo Hardened
SELinux. Currently, building stages works but requires some manual steps
(labeling mostly) which need to be removed before we can automatically
build stages. The next steps here are to see if we can build SELinux
stages on non-SELinux systems (as all we need is to link the proper
files with the SELinux-supporting libraries, which should work
regardless of SELinux being enabled or not). The fact that users need to
relabel their system during deployment is just a minor inconvenience
(and a one-command fix, so easy to document too).&lt;/p&gt;
&lt;p&gt;Another item of progression made is a SELinux-enabled (well, Gentoo
Hardened grSecurity with PaX and SELinux enforcing enabled) &lt;a href="http://distfiles.gentoo.org/experimental/amd64/qemu-selinux/"&gt;virtual
image&lt;/a&gt;
called "selinuxnode". This Qemu/KVM image is a simple Gentoo base
installation but with those security features already enabled, allowing
users to take a first look at SELinux before trying it out on their own
system. But this image has the potential (and now roadmap ;-) to become
much more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide a play-ground for users to test things in. Try out hammering
    the SELinux policy, or reproducing potential issues before reporting
    them (to make sure they are easily reproduceable).&lt;/li&gt;
&lt;li&gt;Become a Proof-of-Concept location for new enhancements: not only
    updates on SELinux, but also on other hardening measures and
    technologies that Gentoo Hardened can support. Implementing the
    technologies in the VM allow other developers to test and work on it
    without needing to sacrifice one of their own systems.&lt;/li&gt;
&lt;li&gt;Become the main system for educational (course-like) documentation.
    If we develop HOWTO documents, using this VM as a base allows users
    to follow the instructions to the letter and try things out while
    keeping the documentation consistent. The documentation can, in the
    future, also contain instructions that users need to follow as a
    sort-of test. At the end of the test, a simple script can easily
    verify on the VM if the test was finished succesfully or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even further down the road, it might evolve into a system for building
appliance-like, hardened services based on Gentoo Hardened. But that's a
milestone too far for now. But you can always dream ;-)&lt;/p&gt;
&lt;p&gt;On the SELinux policy development side, I'm recently focusing on two
aspects: the change towards &lt;code&gt;/run&lt;/code&gt; (which already required a few
"urgent" updates and will probably need a lot more) as well as confining
popular attack surfaces like browsers. Not many SELinux users run their
browser in a confined space, but I personally don't run anything in
unconfined domains and feel that browsers are too popular in the
security area to not put attention to. So I'm struggling to have the
browsers (first focus is Chromium as that one has an open bug for it,
and Firefox because that is my main browser platform) fully confined yet
still flexible enough (using SELinux booleans) to support users that
have other wishes on their browsers.&lt;/p&gt;
&lt;p&gt;Speaking of policy development, in the meeting it was also brought
forward to support a change of stabilization of SELinux policies from
the standard 30-days towards a 14-day stabilization period. In most
cases, this doesn't harm users as policies are usually enhanced (allow
something that was denied before) and less about reducing privileges (as
it is quite hard to find out why a rule was enabled in the first place,
hence our reluctant approach to "quickly" update policies). For such
updates, We're suggesting a 14-day stabilization period, while retaining
30 days for larger updates such as domain policy rewrites (which are
sometimes needed if an application changes too much - think init and
systemd - or when its segregated into multiple parts that each need (or
can have) their own SELinux domain.&lt;/p&gt;
&lt;p&gt;Finally, we gave a quick update on our status for upstream support (as I
mentioned before, having patches supported and accepted upstream is very
important for us): we have 116 changesets to the policy in comparison
with the 20120215 refpolicy release (which is our "upstream"). Of those
changesets, 45 have been accepted and implemented upstream, 12 are
pending. 55 have not been sent yet (because they still need work or more
documentation before they can be accepted) and 4 will not be sent
(mostly because they are gentoo-only or deviate from upstream's
acceptance guidelines but fit in Gentoo's approach).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;grSecurity's PaX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Blueness worked on the &lt;em&gt;xattr pax&lt;/em&gt; support implementation (using
extended attributes to store and manage the PaX flags, rather than using
the ELF header changes used in the past) within Gentoo Hardened. This is
now production-ready, so the proper tools will be made generally
available shortly whereas the older method (mainly chpax) will be
decommissioned in the very near future.&lt;/p&gt;
&lt;p&gt;PaX markings allow the Linux kernel to toggle specific PaX settings on
or off for processes so that the general state of the system can use the
PaX protections while a very few set of programs that cannot work with
these settings (often binary software or third party software, but some
self-built software can have difficulties with PaX as well) can run
without them (or with a lower set). This is much more flexible than an
all-or-nothing approach. By using extended attributes, managing these
markings can be done without modifying the binaries themselves. In
Gentoo, proper support is also given through the &lt;code&gt;paxctl-ng.eclass&lt;/code&gt; so
developers can automatically set markings at deploy-time when needed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Profiles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In Gentoo, users select "profiles" as a way to define the defaults for
their system. Profiles define stuff like the default kernel, C library,
specific USE flags, toolchain, etc. For instance, users that want to use
a Gentoo Hardened system with SELinux on an x86_64 system with
no-multilib (all 64-bit only) select the
hardened/linux/amd64/no-multilib/selinux profile.&lt;/p&gt;
&lt;p&gt;In the last few weeks, blueness has been working on the uclibc-related
profiles (hardened/linux/uclibc/\${ARCH}) using a clean slate. Gentoo
supports profile inheritance, so you can "stack" one profile on top of
the other. This is great for manageability, but when the profile is to
support systems that are quite different from what Gentoo developers are
used to, it makes sense to use a clean setup and start from there. And
this is the case for hardened uclibc systems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System integrity subproject&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this meeting the initial kick-off (after approval) was given of a new
hardened subproject called &lt;em&gt;system integrity&lt;/em&gt;. This project will focus
on the implementation and support of integrity-related technologies such
as (well, mainly) &lt;a href="http://linux-ima.sf.net"&gt;Linux IMA/EVM&lt;/a&gt; and its
supporting userspace utilities and documentation. Integrity validation &amp;amp;
enforcement is an important aspect of system security and, since I
already work with SELinux, feel this is a natural improvement (since you
need a MAC to enforce runtime security and use integrity to enforce
detection and prevention of offline tampering).&lt;/p&gt;
&lt;p&gt;We have great plans with IMA/EVM here, and can hopefully introduce the
first few steps towards it in the selinuxnode virtual image soon ;-)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Of course, technologies are great, but documentation is always needed
(even if nobody reads it (sic)). I have been documenting hardening of
some settings/services using the XCCDF/OVAL languages (part of the
&lt;a href="https://wiki.gentoo.org/wiki/SCAP"&gt;SCAP&lt;/a&gt; set of standards) since not
only do they provide the means to generate guides (we can generate
guides in every language, XCCDF is probably the least flexible of them
all) but they also support the validation of the settings in an
automated manner.&lt;/p&gt;
&lt;p&gt;By using XCCDF/OVAL-supporting software such as
&lt;a href="http://open-scap.org/page/Main_Page"&gt;Open-SCAP&lt;/a&gt;
(&lt;code&gt;app-forensics/openscap&lt;/code&gt; in Gentoo) you can interpret these guides in
an unattended manner, generating reports on the state of your services
compared to these guides, and even have specific profiles (one system
uses a different set of hardening guidelines than another). Since Gentoo
Hardened is about supporting secure &amp;amp; stable production environments, it
is logical that we can offer best practices on how to handle
Gentoo-provided/supported services. And by using these within the SCAP
standard, the guides might even be leveraged further than a regular
online HOWTO could.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And all that from one project?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not really. Gentoo Hardened here plays several roles: integrator for
technologies that are managed in other (free software) projects, and
development for technologies or settings that are either specific to
Gentoo or not available to the public to the extend Gentoo Hardened
believes is needed. You must understand this is possible thanks to the
tremendous effort that all these projects perform. Gentoo Hardened here
plays the role that every Linux distribution has: making all these
technologies and advancements fit in a way that the users can easily
work with it - integrated and well supported.&lt;/p&gt;
&lt;p&gt;Thanks to the free software nature though, Gentoo Hardened does more
than what "commercial integrators" do when they deal with closed,
propriatary software: it updates the code, improves it and brings it
back for broader re-use. As such, it also acts a bit as development
within those projects to assist them in their quest. And in my book,
users are more likely to believe in an integrator that can react
code-wise rather than using workarounds or "helping create a service
request".&lt;/p&gt;
&lt;p&gt;The full excerpts of this meeting (the meeting minutes - well, actually
an IRC chat log excerpt) will be sent out soon by the Gentoo Hardened
project lead, Zorry. Big thanks to him (and the rest of the crew) to
make all this happen! I love to be part of it, and hope I can remain so
for a long, long time.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; &lt;a href="http://www.rsbac.org/"&gt;RSBAC&lt;/a&gt;, not grSecurity's RBAC.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Updated Gentoo Hardened/SELinux VM image</title><link href="http://192.168.1.71:8000/2012/07/updated-gentoo-hardenedselinux-vm-image/" rel="alternate"></link><published>2012-07-16T18:31:00+02:00</published><updated>2012-07-16T18:31:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-07-16:/2012/07/updated-gentoo-hardenedselinux-vm-image/</id><summary type="html">&lt;p&gt;I have updated the Gentoo Hardened/SELinux VM image, available on the
mirrors under &lt;code&gt;experimental/amd64/qemu-selinux&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The new image now asks for the keyboard layout, has a short DHCP timeout
value (5 seconds) and provides the nano editor. If you plan on running
the image using qemu, please use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have updated the Gentoo Hardened/SELinux VM image, available on the
mirrors under &lt;code&gt;experimental/amd64/qemu-selinux&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The new image now asks for the keyboard layout, has a short DHCP timeout
value (5 seconds) and provides the nano editor. If you plan on running
the image using qemu, please use &lt;code&gt;-cpu kvm64&lt;/code&gt; to use a 64-bit virtual
processor.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened/SELinux VM image</title><link href="http://192.168.1.71:8000/2012/07/gentoo-hardenedselinux-vm-image/" rel="alternate"></link><published>2012-07-10T21:27:00+02:00</published><updated>2012-07-10T21:27:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-07-10:/2012/07/gentoo-hardenedselinux-vm-image/</id><summary type="html">&lt;p&gt;A few weeks ago, I pushed out a VM image (Qemu QCOW2 format) to the
&lt;code&gt;/experimental/amd64/qemu-selinux/&lt;/code&gt; location in our mirrors. This VM
image (which is about 1.6 Gib large decompressed) provides a
SELinux-enabled, Gentoo Hardened (with PaX and other grSecurity security
settings) base installation. Thanks to the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few weeks ago, I pushed out a VM image (Qemu QCOW2 format) to the
&lt;code&gt;/experimental/amd64/qemu-selinux/&lt;/code&gt; location in our mirrors. This VM
image (which is about 1.6 Gib large decompressed) provides a
SELinux-enabled, Gentoo Hardened (with PaX and other grSecurity security
settings) base installation. Thanks to the Qcow2 image format, only the
used 1.6 Gib of data is taken on your disk, even though the image is
made for a 50 Gib deployment).&lt;/p&gt;
&lt;p&gt;The purpose of this image is, eventually, to allow users to test our
Gentoo Hardened with SELinux in a virtual environment, offering decent
isolation (so you can mess things up if you want, it doesn't hurt your
own system). I'm also contemplating of providing more serious
SELinux-focused course material (self-teaching stuff) based on this
image, so that users can learn about Gentoo Hardened (and SELinux) in a
structured manner.&lt;/p&gt;
&lt;p&gt;But before all that, I first need to see if the image is usable by most
people:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does it boot? It is an amd64 image for the Qemu KVM64 CPU, but the
    kernel uses paravirtualization for disk and network access, and I
    don't know if that's a safe bet to do or not. People that know KVM
    know that the paravirtualization support is needed for decent
    performance, but I'm not sure if it still makes the images
    sufficiently portable or not.&lt;/li&gt;
&lt;li&gt;Does it work? The build is done based on my own systems, but these
    are all built in a similar fashion (and use binhosts to
    simplify deployment) so in effect, I can only test the images on a
    single system type (multiple, but they're all the same, so
    doesn't matter).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If I can get some comments on this (it boots, it doesn't boot, it sucks,
...) and can work out things, I hope I can have the images better for
all of us.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; yes, keyboard layout is azerty, not qwerty. So your rootpass
will be rootpqss. Updates-are-a-comin'&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Summer of Documentation - Let's do it!</title><link href="http://192.168.1.71:8000/2012/06/gentoo-summer-of-documentation-lets-do-it/" rel="alternate"></link><published>2012-06-29T19:16:00+02:00</published><updated>2012-06-29T19:16:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-06-29:/2012/06/gentoo-summer-of-documentation-lets-do-it/</id><summary type="html">&lt;p&gt;The &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki folks&lt;/a&gt; have started a great
idea (and immediately set a nice milestone), namely the &lt;a href="https://wiki.gentoo.org/wiki/Gentoo_Wiki:Summer_of_Documentation/2012"&gt;Gentoo Wiki
Summer of
Documentation&lt;/a&gt;.
By september, they want to double the amount of articles on the wiki.&lt;/p&gt;
&lt;p&gt;I'll surely help out and participate where I can, and perhaps we can
even go …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="https://wiki.gentoo.org"&gt;Gentoo Wiki folks&lt;/a&gt; have started a great
idea (and immediately set a nice milestone), namely the &lt;a href="https://wiki.gentoo.org/wiki/Gentoo_Wiki:Summer_of_Documentation/2012"&gt;Gentoo Wiki
Summer of
Documentation&lt;/a&gt;.
By september, they want to double the amount of articles on the wiki.&lt;/p&gt;
&lt;p&gt;I'll surely help out and participate where I can, and perhaps we can
even go far above the targeted 500 articles!&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Had to edit /etc/init.d/root</title><link href="http://192.168.1.71:8000/2012/06/had-to-edit-etcinit-droot/" rel="alternate"></link><published>2012-06-24T15:38:00+02:00</published><updated>2012-06-24T15:38:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-06-24:/2012/06/had-to-edit-etcinit-droot/</id><summary type="html">&lt;p&gt;For some reason, I had to edit my /etc/init.d/root file to use "mount
/dev/root -n -o remount,rw /" instead of the standard "mount -n -o
remount,rw /". Without this, it failed to remount the root file system
in a read-write mode, which is of course not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For some reason, I had to edit my /etc/init.d/root file to use "mount
/dev/root -n -o remount,rw /" instead of the standard "mount -n -o
remount,rw /". Without this, it failed to remount the root file system
in a read-write mode, which is of course not that funny...&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Overview of SELinux changes</title><link href="http://192.168.1.71:8000/2012/06/overview-of-selinux-changes/" rel="alternate"></link><published>2012-06-24T14:32:00+02:00</published><updated>2012-06-24T14:32:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-06-24:/2012/06/overview-of-selinux-changes/</id><summary type="html">&lt;p&gt;Most users of Gentoo hardly take a look at the (installation)
documentation when their installation has finished. After all, being a
rolling distribution, there is little need to take a look at the
instructions again. And for most Gentoo users, changes that are needed
to be reviewed by existing users …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Most users of Gentoo hardly take a look at the (installation)
documentation when their installation has finished. After all, being a
rolling distribution, there is little need to take a look at the
instructions again. And for most Gentoo users, changes that are needed
to be reviewed by existing users are pushed to them through news items
(see &lt;strong&gt;eselect news&lt;/strong&gt;) or ebuild warnings.&lt;/p&gt;
&lt;p&gt;For SELinux users, since we're still improving actively (but also often
lagging behind in updating our policies to reflect recent changes) I've
decided to keep track of changes in the &lt;a href="http://hardened.gentoo.org/selinux/selinux-handbook.xml"&gt;SELinux
Handbook&lt;/a&gt; as a
separate chapter. With this information at hand, existing users should
be able to see if there are any changes needed on their part to stay up
to date.&lt;/p&gt;
&lt;p&gt;I haven't used news items here yet, since we're still too volatile, but
I do plan on using them in the (near) future.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Python 3 support for SELinux userland, tests and policy rev 10</title><link href="http://192.168.1.71:8000/2012/05/python-3-support-for-selinux-userland-tests-and-policy-rev-10/" rel="alternate"></link><published>2012-05-26T18:59:00+02:00</published><updated>2012-05-26T18:59:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-05-26:/2012/05/python-3-support-for-selinux-userland-tests-and-policy-rev-10/</id><summary type="html">&lt;p&gt;In the last few hours I pushed my local changes on the SELinux userland
utilities towards the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=tree"&gt;hardened-development&lt;/a&gt;
overlay. The utilities not only include some bugfixes, but have now also
seen a first set of tests towards Python 3.2. In the past, I've made a
few attempts at making …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the last few hours I pushed my local changes on the SELinux userland
utilities towards the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=tree"&gt;hardened-development&lt;/a&gt;
overlay. The utilities not only include some bugfixes, but have now also
seen a first set of tests towards Python 3.2. In the past, I've made a
few attempts at making the tools support Python 3, but I failed
miserably. Although chances are still high that I failed, at least I got
quite a bit further.&lt;/p&gt;
&lt;p&gt;To make testing a bit easier, I previously made quite a few scripts that
did all sorts of things, in order to catch regressions. However, along
the way, I've started noticing I had to put lots of effort in
streamlining these tests (cleanups), introducing dependency information
(test A before B, or cleanup before test, ...) and parallellism (after
all, if you have many, many tests, lots of cores but run in
single-thread/process mode, it'll take a while). So I started looking at
a good way to handle this for me. I switched my tests into a
Makefile-driven approach.&lt;/p&gt;
&lt;p&gt;Why Makefiles? Well, first of all, Makefiles support &lt;em&gt;dependencies&lt;/em&gt;. You
can define a target and then say which other targets need to be ran
first before this target can run. If you want to support these
dependencies in a run-independent manner, you can use trigger files but
I'm not going to do that yet. Another simple feature is that you can
tell make to not show output (&lt;em&gt;silent mode&lt;/em&gt;) when not necessary. And of
course, with make, you can execute targets &lt;em&gt;concurrently&lt;/em&gt;. By using a
simple, yet manageable directory structure and traverse the Makefiles in
them, I am able to easily add more tests and add them to the runqueue.&lt;/p&gt;
&lt;p&gt;But I'd like to hear from you what infrastructural testing tools you use
because I can imagine Makefiles aren't the best solution here.&lt;/p&gt;
&lt;p&gt;In the mean time, I also pushed the 10th revision of our SELinux
policies to the hardened-dev overlay. The most notable fix in it is to
improve support for those running \~arch systems (some fix on the
kdevtmpfs support).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Catching up, but stuff is piling...</title><link href="http://192.168.1.71:8000/2012/05/catching-up-but-stuff-is-piling/" rel="alternate"></link><published>2012-05-24T18:46:00+02:00</published><updated>2012-05-24T18:46:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-05-24:/2012/05/catching-up-but-stuff-is-piling/</id><summary type="html">&lt;p&gt;Those that are frequent the #gentoo-hardened chat channel know that I'm
currently trying to get the SELinux related utilities working under
Python 3. This has progressed quite far, but I'm still not there yet.
I'm now hitting a weird
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=416301"&gt;bug&lt;/a&gt; which seems to
come down to an incorrect free() on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Those that are frequent the #gentoo-hardened chat channel know that I'm
currently trying to get the SELinux related utilities working under
Python 3. This has progressed quite far, but I'm still not there yet.
I'm now hitting a weird
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=416301"&gt;bug&lt;/a&gt; which seems to
come down to an incorrect free() on some memory (well, I don't know
this, this is my current assumption) but which seems hard to catch. So
I'm learning a lot (thanks to an active community) about debugging
Python and memory issues.&lt;/p&gt;
&lt;p&gt;These past few weeks have been enlightening for me on the matter of
Python 2 to 3 conversions. Enough that I can fully understand Diego's
pain when dealing with Ruby upgrades ;-) I hope that, if Perl 6 ever
comes out (right now, Perl 6 is the future - now and in the future ;-),
that they think about the children... err, package maintainers.&lt;/p&gt;
&lt;p&gt;Because it takes some time to work on these matters, other reported
SELinux issues have been piling up; I hope I can close down this Python
migration in the near future and work on the remainder of bugs...&lt;/p&gt;
&lt;p&gt;Next to all this, I'm slowly going through some documentation related
bugs, but also mentoring &lt;a href="http://twitch153-awesomecode.blogspot.com/"&gt;Devan
Franchini&lt;/a&gt; in his GSoC
project on a SELinux policy originator. And now that I linked his blog,
he's going to feel obliged to blog on his progress! ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Keeping /selinux</title><link href="http://192.168.1.71:8000/2012/05/keeping-selinux/" rel="alternate"></link><published>2012-05-04T22:26:00+02:00</published><updated>2012-05-04T22:26:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-05-04:/2012/05/keeping-selinux/</id><summary type="html">&lt;p&gt;Just a very quick paragraph on a just-reported issue: if you upgrade
your SELinux utilities to the latest version &lt;em&gt;and&lt;/em&gt; you switch from
&lt;code&gt;/selinux&lt;/code&gt; to &lt;code&gt;/sys/fs/selinux&lt;/code&gt; as the mountpoint for the SELinux file
system, you might get into issues. Apparently, &lt;strong&gt;init&lt;/strong&gt; (which is
responsible for mounting the SELinux …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just a very quick paragraph on a just-reported issue: if you upgrade
your SELinux utilities to the latest version &lt;em&gt;and&lt;/em&gt; you switch from
&lt;code&gt;/selinux&lt;/code&gt; to &lt;code&gt;/sys/fs/selinux&lt;/code&gt; as the mountpoint for the SELinux file
system, you might get into issues. Apparently, &lt;strong&gt;init&lt;/strong&gt; (which is
responsible for mounting the SELinux file system through a call to
libselinux) is trying to mount it on - well yes - &lt;code&gt;/sys/fs/selinux&lt;/code&gt; but
at that time, &lt;code&gt;/sys&lt;/code&gt; is not mounted yet.&lt;/p&gt;
&lt;p&gt;I haven't been able to reproduce just yet, because I just recently had
to move all my systems to use an initramfs (thank you
you-need-an-initramfs-when-you-have-a-separate-usr-partition) which
premounts /sys. But the current workaround should be to keep &lt;code&gt;/selinux&lt;/code&gt;
for now. The utilities support it still, and that gives me some time to
look and investigate the issue.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>20120215 policies now stable</title><link href="http://192.168.1.71:8000/2012/04/20120215-policies-now-stable/" rel="alternate"></link><published>2012-04-29T16:43:00+02:00</published><updated>2012-04-29T16:43:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-04-29:/2012/04/20120215-policies-now-stable/</id><summary type="html">&lt;p&gt;Today I've stabilized the &lt;code&gt;sec-policy/selinux-*&lt;/code&gt; packages that provide
the 20120215 "series" of SELinux policies. Together with the
stabilization, the more recent userspace tools (like the policycoreutils
as well as libraries like libsemanage and libselinux) have been pushed
out as well. I will be dropping the older policies and userspace …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today I've stabilized the &lt;code&gt;sec-policy/selinux-*&lt;/code&gt; packages that provide
the 20120215 "series" of SELinux policies. Together with the
stabilization, the more recent userspace tools (like the policycoreutils
as well as libraries like libsemanage and libselinux) have been pushed
out as well. I will be dropping the older policies and userspace tools
soon (as they are now deprecated). The documentation has been updated to
reflect this too.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;support for permissive domains (allowing users to mark one specific
    SELinux domain, such as mplayer_t, as permissive (even though the
    rest of the system is running in enforcing mode)&lt;/li&gt;
&lt;li&gt;support for file context translations, so we can now say "/usr/lib64
    (and below) should have the same contexts as /usr/lib"&lt;/li&gt;
&lt;li&gt;support for role attributes, which means for policy developers, we
    now have similar freedom as with type attributes&lt;/li&gt;
&lt;li&gt;support for named file transitions, so a policy rule can say that
    domain A, if creating a file in a directory labeled B, then that
    specific file should have label C. Same for directories, btw.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although some of these enhancements were available as features
individually, the policies we had were not aligned with it - and now,
that has changed ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Chrooted BIND for IPv6 with SELinux</title><link href="http://192.168.1.71:8000/2012/04/chrooted-bind-for-ipv6-with-selinux/" rel="alternate"></link><published>2012-04-14T23:08:00+02:00</published><updated>2012-04-14T23:08:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-04-14:/2012/04/chrooted-bind-for-ipv6-with-selinux/</id><summary type="html">&lt;p&gt;BIND, or Berkeley Internet Name Domain, is one of the Internet's most
popular domain name service software (DNS). It has seen its set of
security flaws in the past, which is not that strange as it is such a
frequently used service on the Internet. In this post, I'll give …&lt;/p&gt;</summary><content type="html">&lt;p&gt;BIND, or Berkeley Internet Name Domain, is one of the Internet's most
popular domain name service software (DNS). It has seen its set of
security flaws in the past, which is not that strange as it is such a
frequently used service on the Internet. In this post, I'll give a quick
intro on how to use it in Gentoo Hardened (with PaX)... chrooted... for
IPv6... with SELinux ;-)&lt;/p&gt;
&lt;p&gt;Installing is of course, as usual, dead easy on Gentoo
(Hardened/SELinux). Make sure you have USE="ipv6" set, and then &lt;strong&gt;emerge
bind&lt;/strong&gt;. Also install &lt;strong&gt;bind-tools&lt;/strong&gt; as they contain some great tools to
help with DNS troubleshooting. Then we're editing /etc/conf.d/named to
set the CHROOT variable. I also set CHROOT_NOMOUNT so that Gentoo
doesn't bind-mount the information in the chroot but instead uses the
files in the chroot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CHROOT=&amp;quot;/var/named/chroot&amp;quot;
CHROOT_NOMOUNT=&amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we need to either temporarily add some privileges in SELinux, or run
the portage_t domain in permissive mode. If you go for privileges, then
add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;allow portage_t var_t:chr_file { create getattr setattr };
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you however want to temporarily run the portage_t domain in
permissive mode, do that as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# semanage permissive -a portage_t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are doing this because we are now going to ask the BIND ebuild to
prepare the chroot for us. Doing so however requires portage to work on
our live file system (and not in the regular "sandbox" mode). SELinux
however forces portage in the portage_t domain and only gives it the
privileges it needs for building and installing software.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# emerge --config bind
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When done, remove the previous SELinux allow rules again (or set the
portage_t domain back in enforcing mode, through &lt;strong&gt;semanage permissive
-d portage_t&lt;/strong&gt;). Next we need to relabel the files in the chroot. By
default, all files are labeled by SELinux as var_t in that location
because it isn't aware that it needs to see /var/named/chroot as a
"root" location.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# setfiles -r /var/named/chroot /etc/selinux/strict/contexts/files/file_contexts /var/named/chroot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far so good. Now let's create a simple named.conf file (in
/var/named/chroot/etc/bind):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;options {
  directory &amp;quot;/var/bind&amp;quot;;
  pid-file &amp;quot;/var/run/named/named.pid&amp;quot;;
  statistics-file &amp;quot;/var/run/named/named.stats&amp;quot;;
  listen-on { 127.0.0.1; };
  listen-on-v6 { 2001:db8:81:21::ac:98ad:5fe1; };
  allow-query { any; };
  zone-statistics yes;
  allow-transfer { 2001:db8:81:22::ae:6b01:e3d8; };
  notify yes;
  recursion no;
  version &amp;quot;[nope]&amp;quot;;
};

# Access to DNS for local addresses (i.e. genfic-owned)
view &amp;quot;local&amp;quot; {
  match-clients { 2001:db8:81::/48; };
  recursion yes;
  zone &amp;quot;genfic.com&amp;quot; { type master; file &amp;quot;pri/com.genfic&amp;quot;; };
  zone &amp;quot;1.8.0.0.8.b.d.0.1.0.0.2.ip6.arpa&amp;quot; { type master; file &amp;quot;pri/inv.com.genfic&amp;quot;; };
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The zone files referenced in the configuration file are located in
/var/named/chroot/var/bind (in a subdirectory called pri - which I use
for "primary"). The regular one would look similar to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$TTL 1h ;
$ORIGIN genfic.com.
@       IN      SOA     ns.genfic.com. ns.genfic.com. (
                        2012041101
                        1d      
                        2h
                        4w
                        1h )

        IN      NS      ns.genfic.com.
        IN      NS      ns2.genfic.com.
        IN      MX      10      mail.genfic.com.
        IN      MX      20      mail2.genfic.com.

genfic.com.     IN      AAAA    2001:db8:81:80::dd:13ed:c49e;
ns              IN      AAAA    2001:db8:81:21::ac:98ad:5fe1;
ns2             IN      AAAA    2001:db8:81:22::ae:6b01:e3d8;
www             IN      CNAME   genfic.com.;
mail            IN      AAAA    2001:db8:81:21::b0:0738:8ad5;
mail2           IN      AAAA    2001:db8:81:22::50:5e9f:e569;
; (...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;while the one for reverse lookups looks like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$TTL 1h ;
@       IN      SOA     1.8.0.0.8.b.d.0.1.0.0.2.ip6.arpa ns.genfic.com. (
                        2012041101
                        1d
                        2h
                        4w
                        1h )

        IN      NS      ns.genfic.com.
        IN      NS      ns2.genfic.com.

$ORIGIN 1.8.0.0.8.b.d.0.1.0.0.2.ip6.arpa.

1.e.f.5.d.a.8.9.c.a.0.0.0.0.0.0.1.2.0.0         IN      PTR     ns.genfic.com.
8.d.3.e.1.0.b.6.e.a.0.0.0.0.0.0.2.2.0.0         IN      PTR     ns2.genfic.com.
; (...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can now start the init script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# rc-service named start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On the slave, don't set the allow-transfer directive and set its type to
"slave". In each zone, you will need to tell where the master is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zone &amp;quot;genfic.com&amp;quot; {
  type slave;
  masters { 2001:db8:81:21::ac:98ad:5fe1; }
  file &amp;quot;sec/com.genfic&amp;quot;;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default, the SELinux policy for BIND does not allow BIND to write
stuff in its directories. On the slave system, you will need to change
this. A SELinux boolean here does the trick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# setsebool -P named_write_master_zones on;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There ya go ;-) Okay, all very condensely written, but it should give
some feedback on how to proceed. I'm adding this information to the new
online resource I'm writing - &lt;a href="http://swift.siphos.be/aglara"&gt;A Gentoo Linux Advanced Reference
Architecture&lt;/a&gt;. Nothing really ready yet,
just writing as I go forward with exploring these technologies...&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Documentation updates for initramfs needed?</title><link href="http://192.168.1.71:8000/2012/04/documentation-updates-for-initramfs-needed/" rel="alternate"></link><published>2012-04-12T17:40:00+02:00</published><updated>2012-04-12T17:40:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-04-12:/2012/04/documentation-updates-for-initramfs-needed/</id><summary type="html">&lt;p&gt;A quick help request from the community: if you know of any Gentoo
documents that need updates in order for end users to know when and how
to use initramfs, please file &lt;a href="https://bugs.gentoo.org"&gt;bugreports&lt;/a&gt; and
have them &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=407959"&gt;block bug
#407959&lt;/a&gt;. Currently, we
have updated the Gentoo Handbook, Gentoo Quickinstall guides and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A quick help request from the community: if you know of any Gentoo
documents that need updates in order for end users to know when and how
to use initramfs, please file &lt;a href="https://bugs.gentoo.org"&gt;bugreports&lt;/a&gt; and
have them &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=407959"&gt;block bug
#407959&lt;/a&gt;. Currently, we
have updated the Gentoo Handbook, Gentoo Quickinstall guides and added
an Initial ramfs Guide.&lt;/p&gt;
&lt;p&gt;The tracker bug is also used to check if and when the eventual roll-out
of software can happen, and we want to make sure that we do not forget
documentation (something we learned from the openrc migration). Not that
the change is as large as was the case with openrc, but it is still nice
to have updated documentation in time ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Get your devtmpfs ready</title><link href="http://192.168.1.71:8000/2012/04/get-your-devtmpfs-ready/" rel="alternate"></link><published>2012-04-07T22:10:00+02:00</published><updated>2012-04-07T22:10:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-04-07:/2012/04/get-your-devtmpfs-ready/</id><summary type="html">&lt;p&gt;If you are using stable profiles, you might want to verify if you are
already running a kernel with devtmpfs support enabled. Why? Well,
currently you might not need it, but the upcoming openrc/udev packages
require it and they currently do not fail at install time if you have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are using stable profiles, you might want to verify if you are
already running a kernel with devtmpfs support enabled. Why? Well,
currently you might not need it, but the upcoming openrc/udev packages
require it and they currently do not fail at install time if you have it
enabled or not. As a result, upgrading these packages might give you a
system that might fail to boot (if you have no initramfs but separate
/usr partition) or gives many errors (if you have an initramfs).&lt;/p&gt;
&lt;p&gt;To verify if it is enabled, check your kernel configuration:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# zgrep DEVTMPFS /proc/config.gz # CONFIG_DEVTMPFS is not set&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you get the output as described above, best update your kernel
configuration to include it. The second devtmpfs-related option (to
automatically mount it on /dev) is not needed afaik.&lt;/p&gt;
&lt;p&gt;And for those that have been with Gentoo for a while - devtmpfs is not
devfs. Well, it is. But it isn't. Somewhat. Oh well, there's discussion
on that which I'm not going to elaborate on. Safe to say that we're
getting older if we start feeling "Been there, done that, got the
t-shirt" ;-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; as Robin mentioned in the comments, the udev ebuild does check
at it. However, it doesn't fail an installation so you could miss the
message. Apologies for the lies, Robin ;-) Post updated.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>More on initramfs and SELinux</title><link href="http://192.168.1.71:8000/2012/03/more-on-initramfs-and-selinux/" rel="alternate"></link><published>2012-03-25T19:44:00+02:00</published><updated>2012-03-25T19:44:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-03-25:/2012/03/more-on-initramfs-and-selinux/</id><summary type="html">&lt;p&gt;With the upcoming udev version &lt;em&gt;not&lt;/em&gt; supporting separate &lt;code&gt;/usr&lt;/code&gt;
locations unless you boot with an initramfs, we are
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=407959"&gt;now&lt;/a&gt;
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=408691"&gt;starting&lt;/a&gt;
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=408971"&gt;to&lt;/a&gt; document how to
create an initramfs to boot with. After all, systems with a separate
&lt;code&gt;/usr&lt;/code&gt; are not that uncommon.&lt;/p&gt;
&lt;p&gt;As I've blogged about
&lt;a href="http://blog.siphos.be/2012/01/trying-out-initramfs-with-selinux-and-grsec/"&gt;before&lt;/a&gt;,
getting an initramfs to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With the upcoming udev version &lt;em&gt;not&lt;/em&gt; supporting separate &lt;code&gt;/usr&lt;/code&gt;
locations unless you boot with an initramfs, we are
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=407959"&gt;now&lt;/a&gt;
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=408691"&gt;starting&lt;/a&gt;
&lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=408971"&gt;to&lt;/a&gt; document how to
create an initramfs to boot with. After all, systems with a separate
&lt;code&gt;/usr&lt;/code&gt; are not that uncommon.&lt;/p&gt;
&lt;p&gt;As I've blogged about
&lt;a href="http://blog.siphos.be/2012/01/trying-out-initramfs-with-selinux-and-grsec/"&gt;before&lt;/a&gt;,
getting an initramfs to work well with SELinux has not been an easy
drift. In effect, I'm going to push out the FAQ (the &lt;a href="http://wiki.gentoo.org/wiki/Knowledge_Base:Booting_SELinux_with_an_initramfs"&gt;Gentoo
wiki&lt;/a&gt;
already has it) that the user will need to boot in permissive mode, and
have an init script in the boot runlevel that will reset the contexts of
&lt;code&gt;/dev&lt;/code&gt; and then switch to enforcing mode. And those that want to make
sure SELinux stays on can then also enable the
&lt;em&gt;secure_mode_policyload&lt;/em&gt; SELinux boolean so that you cannot go back to
permissive mode (without rebooting).&lt;/p&gt;
&lt;p&gt;For those interested, this is the init script I use on my guest systems
(which are for development purposes, so they do not toggle the SELinux
boolean):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#!/sbin/runscript # Copyright (c) 2007-2009 Roy Marples  # Released under the 2-clause BSD license.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;description="Switch into SELinux enforcing mode"&lt;/p&gt;
&lt;p&gt;depend()&lt;br&gt;
{&lt;br&gt;
need localmount&lt;br&gt;
}&lt;/p&gt;
&lt;p&gt;start()&lt;br&gt;
{&lt;br&gt;
ebegin "Restoring file contexts in /dev"&lt;br&gt;
restorecon -R /dev&lt;br&gt;
eend 0&lt;/p&gt;
&lt;p&gt;ebegin "Switching to enforcing mode"&lt;br&gt;
setenforce 1&lt;br&gt;
eend \$?&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I call it &lt;code&gt;selinux_enforce&lt;/code&gt; for a lack of imagination (and to make it
more clear, because if I'd name it "wookie" I'll be scratching my head
in a few weeks trying to figure out why I did that in the first place).&lt;/p&gt;
&lt;p&gt;With that enabled, I cannot provide a "denial-free" boot-up anymore
(you'll see many denials from the &lt;code&gt;init_t&lt;/code&gt; domain, amongst others, which
are best not hidden). That is to say, until I take some time to patch
the initramfs to handle SELinux.&lt;/p&gt;
&lt;p&gt;Oh, btw, this is for both dracut-generated as well as
genkernel-generated initramfs's. At least the technologies are
consistent there.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Hunting fuser</title><link href="http://192.168.1.71:8000/2012/03/hunting-fuser/" rel="alternate"></link><published>2012-03-12T21:54:00+01:00</published><updated>2012-03-12T21:54:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-03-12:/2012/03/hunting-fuser/</id><summary type="html">&lt;p&gt;I am able to work on Gentoo and SELinux about one hour per day. It's
more in total time, but being a bit exhausted makes me act a bit more
slowly which boils down to about one hour per day. And one hour per day
isn't bad, you're able to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am able to work on Gentoo and SELinux about one hour per day. It's
more in total time, but being a bit exhausted makes me act a bit more
slowly which boils down to about one hour per day. And one hour per day
isn't bad, you're able to do many things in that hour.&lt;/p&gt;
&lt;p&gt;The last few days, I've been hunting SELinux denials. I've set my mind
onto releasing the 2.20120215-r5 policy only when I've been able to boot
a minimalistic Gentoo installation without any visible denials, so
either dontaudit them or fix them. Of course, I only want to allow if
I'm absolutely confident that they are needed on some systems, but I
also only want to dontaudit when I understand what it is doing (and find
that it isn't something needed).&lt;/p&gt;
&lt;p&gt;Some of the denials are driving me up the walls, often having an entire
evening hunting for a single one... and this is why you haven't seen
many updates since a week or so. The one I'm hunting now, is shown in
the logs as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Mar 12 20:21:32 testsys kernel: [    6.550618] type=1400 audit(1331580090.874:4): avc:  denied  { getattr } 
  for  pid=1512 comm=&amp;quot;fuser&amp;quot; path=&amp;quot;socket:[3159]&amp;quot; dev=sockfs ino=3159 
  scontext=system_u:system_r:initrc_t tcontext=system_u:system_r:udev_t tclass=unix_stream_socket
Mar 12 20:21:32 testsys kernel: [    6.551232] type=1400 audit(1331580090.875:5): avc:  denied  { getattr }
  for  pid=1513 comm=&amp;quot;fuser&amp;quot; path=&amp;quot;socket:[3160]&amp;quot; dev=sockfs ino=3160
  scontext=system_u:system_r:initrc_t tcontext=system_u:system_r:udev_t tclass=netlink_kobject_uevent_socket
Mar 12 20:21:32 testsys kernel: [    6.562005] type=1400 audit(1331580090.885:6): avc:  denied  { getattr }
  for  pid=1530 comm=&amp;quot;fuser&amp;quot; path=&amp;quot;socket:[3705]&amp;quot; dev=sockfs ino=3705
  scontext=system_u:system_r:initrc_t tcontext=system_u:system_r:udev_t tclass=netlink_kobject_uevent_socket
... (these netlink_kobject_uevent_socket ones are repeated a few times)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I have &lt;em&gt;no idea&lt;/em&gt; who (or what) is executing fuser to find some
information. The shown PIDs are those of fuser, and of course that isn't
running anymore when the system is booted. The timeframe shown also
doesn't seem to provide much information, because it is the time that it
is logged by the system logger apparently (I once hoped I was wrong
here, but repeated tests and introducing delays and such seems to
confirm it). And because the target is on dev=sockfs, it's hardly
something I'm able to actively search for.&lt;/p&gt;
&lt;p&gt;Or at least that I know of.&lt;/p&gt;
&lt;p&gt;The source context is initrc_t, so it is started from an init script.
And the target is always udev_t, so it might be triggered by the udev
(or a udev-related) init script (as it seems to only look for these of
udev, but that might be a coincidence). But alas, I still don't know
what is calling it as I can't find a script or udev rule that calls
fuser :-( It doesn't affect the runtime behavior of my system
(everything seems to work just fine) so I might go on and dontaudit it.
But I so want to know what this is about.&lt;/p&gt;
&lt;p&gt;To be continued...&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Introducing 2.20120215 policies</title><link href="http://192.168.1.71:8000/2012/02/introducing-2-20120215-policies/" rel="alternate"></link><published>2012-02-26T18:40:00+01:00</published><updated>2012-02-26T18:40:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-02-26:/2012/02/introducing-2-20120215-policies/</id><summary type="html">&lt;p&gt;A few weeks after being
&lt;a href="http://oss.tresys.com/pipermail/refpolicy/2012-February/004953.html"&gt;released&lt;/a&gt;,
we now have the 20120215-based policies available for our users (and
also the newer userspace utilities). The packages currently reside in
the hardened-dev overlay as they will need to see sufficient testing
before we merge those to the main tree. For most users, nothing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few weeks after being
&lt;a href="http://oss.tresys.com/pipermail/refpolicy/2012-February/004953.html"&gt;released&lt;/a&gt;,
we now have the 20120215-based policies available for our users (and
also the newer userspace utilities). The packages currently reside in
the hardened-dev overlay as they will need to see sufficient testing
before we merge those to the main tree. For most users, nothing changes,
albeit there are a few changes under the hood that you might get in
contact with later...&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;selinux-base-policy&lt;/em&gt; package now depends on a new package called
&lt;em&gt;selinux-base&lt;/em&gt;. This is the "real" base policy package, and now only
includes those modules that upstream (reference policy) marks as being
base modules. The rest of the modules that we (Gentoo) originally
included in base are now built by the &lt;em&gt;selinux-base-policy&lt;/em&gt; package and
inserted in the policy store together with the base policy. This change
is done to make future development a bit more flexible, but also because
the policy build fails when we include too many packages.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;selinux-unconfined&lt;/em&gt; package loads in the unconfined module. Users
that know the difference between the &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;targeted&lt;/em&gt; policy
types: loading the unconfined module in a "strict" policy will make the
system support domains like in "targeted" mode. Currently, there is
little use in this module as we (err, I) still need to get this in a
good shape. This change is needed to support unconfined domains later
when we work with MCS or MLS. The older definitions (using targeted or
strict) remain supported though.&lt;/p&gt;
&lt;p&gt;The pesky change we had to do to
&lt;code&gt;/lib64/rcscripts/addons/lvm-st{art,op}.sh&lt;/code&gt; is not necessary anymore.
This has nothing to do with the tools, but more with an update on the
policy itself. I have to give you some reason to upgrade, don't I ;-)&lt;/p&gt;
&lt;p&gt;Now that the new policy is in, we can start using named transitions as
well as use translations so that our file contexts aren't cluttered with
all those /lib64 + /lib definitions. These changes will go in later.&lt;/p&gt;
&lt;p&gt;For those interested in helping, please give these policies thorough
testing. I had some work in "forward-porting" the patches we had that
weren't included upstream yet because of changes in the underlying
structure. I hope none are forgotten. If you do find regressions, either
ping me on IRC or file a bugreport.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>This months' stabilization done, more to come</title><link href="http://192.168.1.71:8000/2012/01/this-months-stabilization-done-more-to-come/" rel="alternate"></link><published>2012-01-29T13:33:00+01:00</published><updated>2012-01-29T13:33:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2012-01-29:/2012/01/this-months-stabilization-done-more-to-come/</id><summary type="html">&lt;p&gt;A small notification to tell you that the SELinux policies that were
pushed to the main tree 30 days (or more) ago have now been stabilized
(none of them introduced problems, although some of them have other bugs
still open which are either fixed in \~arch or will be fixed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A small notification to tell you that the SELinux policies that were
pushed to the main tree 30 days (or more) ago have now been stabilized
(none of them introduced problems, although some of them have other bugs
still open which are either fixed in \~arch or will be fixed in the
hardened-dev overlay soon). I'll be working on pushing an additional set
of changes to hardened-dev overlay today as it includes fixes for openrc
that are quite important, and might even push this to the tree faster
than usual.&lt;/p&gt;
&lt;p&gt;The reference policy is also working on a new release, so the moment it
is released we will be picking that up as well (give or take a month,
since my availability will be a bit less the next month).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo WiKi &amp; Knowledge Base</title><link href="http://192.168.1.71:8000/2011/12/gentoo-wiki-knowledge-base/" rel="alternate"></link><published>2011-12-26T20:01:00+01:00</published><updated>2011-12-26T20:01:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-12-26:/2011/12/gentoo-wiki-knowledge-base/</id><summary type="html">&lt;p&gt;I have been playing with the &lt;a href="http://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt; the
last few days and am very impressed with the work that both the wiki
teams as well as existing contributors have already done to the place.
The look and feel is very slick and editing works just as expected. One
of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been playing with the &lt;a href="http://wiki.gentoo.org"&gt;Gentoo Wiki&lt;/a&gt; the
last few days and am very impressed with the work that both the wiki
teams as well as existing contributors have already done to the place.
The look and feel is very slick and editing works just as expected. One
of the changes I made was to move &lt;a href="http://wiki.gentoo.org/wiki/SELinux"&gt;SELinux module
information&lt;/a&gt; to the wiki. This
documentation was originally intended to be published on the &lt;a href="http://hardened.gentoo.org/selinux/"&gt;Gentoo
SELinux Project&lt;/a&gt; page, but is
easily accessible and maintainable on the wiki too.&lt;/p&gt;
&lt;p&gt;So I went a step further and dug up my original &lt;a href="http://www.gentoo.org/proj/en/glep/glep-0051.html"&gt;GLEP 0051 - Gentoo
Knowledge Base&lt;/a&gt;
proposal and checked how far I could use the Gentoo WiKi for this
purpose. From the looks of it, the WiKi can offer a great deal of
leverage for this idea and although not everything is supported through
the WiKi (like natural search language and such), that might have been
overshooting a bit. So we received a &lt;a href="http://wiki.gentoo.org/wiki/Knowledge_Base:Main_Page"&gt;Gentoo WiKi Knowledge
Base&lt;/a&gt; namespace
under which the &lt;a href="http://wiki.gentoo.org/index.php?title=Special%3AAllPages&amp;amp;from=&amp;amp;to=&amp;amp;namespace=500"&gt;Knowledgebase
entries&lt;/a&gt;
can reside.&lt;/p&gt;
&lt;p&gt;Now what is the idea behind such a knowledge base? Well, first of all,
the articles below this prefix should all follow the same structure (as
explained in the &lt;a href="http://wiki.gentoo.org/wiki/Knowledge_Base:Main_Page"&gt;main
page&lt;/a&gt;) and be
sufficiently specific so that the title of the entry should leave little
room for misinterpretation. But other than that, there is no limit as to
what the Knowledge Base could hold. To that respect, the knowledge base
section then provides a (hopefully) thorough listing of common and less
common issues with a good explanation why the problem occurred and how
to resolve it.&lt;/p&gt;
&lt;p&gt;For the time being, the location doesn't hold that many
&lt;a href="http://wiki.gentoo.org/index.php?title=Special%3AAllPages&amp;amp;from=&amp;amp;to=&amp;amp;namespace=500"&gt;entries&lt;/a&gt;
yet, but I will add them as they come along. And of course, feedback is
always appreciated ;-)&lt;/p&gt;
&lt;p&gt;On a second note, I'd like to give my PoV on the wiki and its relation
with the official Gentoo documentation. Unlike what might be
circulating, I'm definitely not against the wiki for documentation, on
the contrary. Wiki's have proven to be a good resource for
documentation, and because we can never have enough documentation
writers, every method for getting more documentation is welcome. But
because of its online nature, offline documentation development (which I
frequently do) is not possible. Also, keeping translations in sync might
be a bit more challenging compared to a file-based solution with version
control (otoh, I have little experience with WiKi translations so I
might be wrong here).&lt;/p&gt;
&lt;p&gt;I strongly believe that the wiki will play a big role in Gentoo's
documentation assets. Many of the documents currently managed by the GDP
or the subprojects might be suited to be hosted on the WiKi, especially
when those documents are too specific (and as such would require a very
specific developer profile to maintain the documents). In such cases,
the maintainers of those documents should be able to pick the most
efficient method. But for very generic documents, this might not be an
easy option.&lt;/p&gt;
&lt;p&gt;At least the Gentoo documents now support CC-BY-SA 3.0, so we can
migrate documents from the wiki to the main site, and the 2.5 version
currently used the most on the main site should be forward compatible
with 3.0 (if I read the legalese text well) so we might be able to
migrate documents from the main site to the wiki too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; a3li created the "Knowledge Base" namespace on the wiki, so I
updated the links in my post. Thanks for the work on the wiki, a3li!&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Supporting fix scripts for XCCDF content and maintaining the documents</title><link href="http://192.168.1.71:8000/2011/12/supporting-fix-scripts-for-xccdf-content-and-maintaining-the-documents/" rel="alternate"></link><published>2011-12-23T16:00:00+01:00</published><updated>2011-12-23T16:00:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-12-23:/2011/12/supporting-fix-scripts-for-xccdf-content-and-maintaining-the-documents/</id><summary type="html">&lt;p&gt;One of the features supported through OVAL (and Open-SCAP) is to
generate fix scripts when a test has failed. The administrator can then
verify this script (of course) and then execute it to correct wrong
settings. So I decided to play around with this as well and enhanced the
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-guide.html"&gt;Gentoo …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the features supported through OVAL (and Open-SCAP) is to
generate fix scripts when a test has failed. The administrator can then
verify this script (of course) and then execute it to correct wrong
settings. So I decided to play around with this as well and enhanced the
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-guide.html"&gt;Gentoo Security
Benchmark&lt;/a&gt;
(&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-xccdf.txt"&gt;XCCDF
source&lt;/a&gt;)
with some fixables (like for the sysctl settings). And lo and behold:
the thing works ;-)&lt;/p&gt;
&lt;p&gt;After evaluating the XCCDF (together with the
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-oval.txt"&gt;OVAL&lt;/a&gt;
document) against my system, I had Open-SCAP generate a fix script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# oscap xccdf generate fix --result-id OSCAP-Test-Gentoo-Default xccdf-results.xml
#!/bin/bash
# OpenSCAP fix generator output for benchmark: Gentoo Security Benchmark

# XCCDF rule: rule-sysctl-ipv4-forward
echo 0 &amp;gt; /proc/sys/net/ipv4/ip_forward

# generated: 2011-12-23T14:53:03+01:00
# END OF SCRIPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now isn't that nice. But generating a fix script is one thing,
&lt;em&gt;maintaining the XCCDF and OVAL documents&lt;/em&gt; is a completely other
picture.&lt;/p&gt;
&lt;p&gt;One of the downsides that I talked about earlier already is that OVAL
has quite an extensible language (it's a large XML document). Although
this extensibility is very flexible and powerful, when you want to add
generic tests (like validating sysctl values or matching regular
expressions in files) having to write over 30 lines of XML code for a
single test is time-consuming at the least. So I quickly scripted
something to help me maintain these settings.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://dev.gentoo.org/~swift/docs/genoval.xml"&gt;Generating OVAL documents with
genoval.sh&lt;/a&gt; document
explains this script (which is retrievable from my &lt;a href="https://github.com/sjvermeu/small.coding"&gt;git
repository&lt;/a&gt;) whose primary
purpose is to transform a single line into the entire OVAL structure.
With this script, I can now just say &lt;em&gt;gentoo variable USE must contain
ssl&lt;/em&gt; and it generates both the rules in the XCCDF as the OVAL statements
in the OVAL document.&lt;/p&gt;
&lt;p&gt;Okay, it's a script, not a feature-full application, but at least it
helps me (and perhaps others as well).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>SELinux Gentoo/Hardened state 2011-12-19</title><link href="http://192.168.1.71:8000/2011/12/selinux-gentoohardened-state-2011-12-19/" rel="alternate"></link><published>2011-12-19T18:04:00+01:00</published><updated>2011-12-19T18:04:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-12-19:/2011/12/selinux-gentoohardened-state-2011-12-19/</id><summary type="html">&lt;p&gt;On december 14th, the &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt;
project had its monthly &lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_6ee74d905f217b47446ace08da32a921.xml"&gt;online
meeting&lt;/a&gt;
to discuss the current state of affairs of its projects and subprojects.
Amongst them, the updates on the SELinux-front were presented as well.&lt;/p&gt;
&lt;p&gt;Since last meeting, the follow topics passed the revue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://packages.gentoo.org/package/sec-policy/selinux-base-policy"&gt;sec-policy/selinux-base-policy&lt;/a&gt;,
    which is the "master …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;On december 14th, the &lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt;
project had its monthly &lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_6ee74d905f217b47446ace08da32a921.xml"&gt;online
meeting&lt;/a&gt;
to discuss the current state of affairs of its projects and subprojects.
Amongst them, the updates on the SELinux-front were presented as well.&lt;/p&gt;
&lt;p&gt;Since last meeting, the follow topics passed the revue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://packages.gentoo.org/package/sec-policy/selinux-base-policy"&gt;sec-policy/selinux-base-policy&lt;/a&gt;,
    which is the "master" of our SELinux policies and contains those
    SELinux modules that are somewhat indivisible (hence the name,
    "base"), is now at revision 8. I tend to describe the changes on the
    gentoo-hardened mailinglist, and this is &lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_b11ef32142076034abd0616e373361da.xml"&gt;not different for rev
    8&lt;/a&gt;.
    I haven't stabilized the rev 6 one yet although I promised too, I'll
    try to find some time to do that this evening.&lt;/li&gt;
&lt;li&gt;We had a
    &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=375475"&gt;regression&lt;/a&gt; with
    &lt;strong&gt;newrole&lt;/strong&gt; for some time. Luckily, Jory "Anarchy" Pratt found
    the issue. Drop the setuid bit from the binary, and the application
    works again as it should. This will be included in the next
    &lt;a href="http://packages.gentoo.org/package/sys-apps/policycoreutils"&gt;policycoreutils&lt;/a&gt; bump.&lt;/li&gt;
&lt;li&gt;The last available
    &lt;a href="http://packages.gentoo.org/package/app-admin/sudo"&gt;sudo&lt;/a&gt; package
    now builds with native SELinux support as well, which allows users
    to add ROLE= and TYPE= information in the &lt;code&gt;sudoers&lt;/code&gt; file. As such,
    users do not need to call &lt;strong&gt;newrole&lt;/strong&gt; when they need to transition
    to a specific role for just a single command - sudo can now take
    care of that.&lt;/li&gt;
&lt;li&gt;The older &lt;code&gt;selinux/v2refpolicy/*&lt;/code&gt; profiles have been deprecated. If
    you want to use a SELinux-enabled profile, you need to use a profile
    that ends with &lt;code&gt;/selinux&lt;/code&gt;, such as
    &lt;code&gt;default/linux/amd64/10.0/selinux&lt;/code&gt; or
    &lt;code&gt;hardened/linux/amd64/selinux&lt;/code&gt;. Of course we prefer you to use a
    hardened profile ;-)&lt;/li&gt;
&lt;li&gt;Documentation-wise,
    &lt;/p&gt;&lt;ul&gt;
&lt;li&gt;the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml"&gt;Gentoo Hardened SELinux
    Handbook&lt;/a&gt;
    has been updated to reflect the profile changes&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-bugreporting.xml"&gt;SELinux bugreporting
    guide&lt;/a&gt;
    has been put online to inform users what kind of information is
    needed for us to fix issues or denials that they might see&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml"&gt;SELinux
    FAQ&lt;/a&gt; has
    been updated with the questions &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml#nosuid"&gt;Applications do not transition
    on a nosuid
    partition&lt;/a&gt;
    and &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml#auth-run_init"&gt;Why do I always need to re-authenticate when operating init
    scripts?&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's about it. Not a too busy month but progress anyhow.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Supporting CC-BY-SA 3.0</title><link href="http://192.168.1.71:8000/2011/11/supporting-cc-by-sa-3-0/" rel="alternate"></link><published>2011-11-29T21:33:00+01:00</published><updated>2011-11-29T21:33:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-11-29:/2011/11/supporting-cc-by-sa-3-0/</id><summary type="html">&lt;p&gt;Until now, documents on the &lt;a href="http://www.gentoo.org"&gt;Gentoo website&lt;/a&gt; all
had to be licensed under the &lt;a href="https://creativecommons.org/licenses/by-sa/2.5/"&gt;Creative Commons Attribution/Share
Alike&lt;/a&gt; license, version
2.5. Why? Because at the time of the license choice, that was probably
the latest version at hand. In the XML code itself, the license tagging
was done …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Until now, documents on the &lt;a href="http://www.gentoo.org"&gt;Gentoo website&lt;/a&gt; all
had to be licensed under the &lt;a href="https://creativecommons.org/licenses/by-sa/2.5/"&gt;Creative Commons Attribution/Share
Alike&lt;/a&gt; license, version
2.5. Why? Because at the time of the license choice, that was probably
the latest version at hand. In the XML code itself, the license tagging
was done using a &lt;code&gt;&amp;lt;license /&amp;gt;&lt;/code&gt; tag. Simple and efficient. But things
change, and so do license versions.&lt;/p&gt;
&lt;p&gt;The folks over at Creative Commons have released &lt;a href="https://creativecommons.org/licenses/by-sa/3.0/"&gt;version
3.0&lt;/a&gt; somewhere in 2007.
I'm not going to cover the
&lt;a href="https://creativecommons.org/weblog/entry/7249"&gt;differences&lt;/a&gt; here, but
in general, the principle behind Gentoo's choice for the CC-BY-SA
license remains. But we didn't change our licenses and there was no real
need for it either.&lt;/p&gt;
&lt;p&gt;Recently however, the &lt;a href="http://wiki.gentoo.org"&gt;Official Gentoo Wiki&lt;/a&gt; was
announced, which uses the CC-BY-SA license as well... but the 3.0
version of it. You can't blame them for taking the latest version, but
that does made it a bit more difficult to share resources between the
two repositories (wiki versus GuideXML-ified website). The solution?
Support CC-BY-SA 3.0 for GuideXML too.&lt;/p&gt;
&lt;p&gt;A few commits in our repository made that change happen. Nothing big
though: the
&lt;a href="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/dtd/common.dtd?sortby=date&amp;amp;r1=1.4&amp;amp;view=log"&gt;DTD&lt;/a&gt;
is updated to allow for &lt;code&gt;&amp;lt;license version="3.0"/&amp;gt;&lt;/code&gt; tags, the
&lt;a href="http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo/xml/htdocs/xsl/guide.xsl?sortby=date&amp;amp;r1=1.252&amp;amp;view=log"&gt;XSL&lt;/a&gt;
is updated to support this attribute (and display the new license) and a
few other files (supporting files, like the &lt;a href="http://www.gentoo.org/doc/en/xml-guide.xml"&gt;GuideXML
Guide&lt;/a&gt;) have received the
necessary updates.&lt;/p&gt;
&lt;p&gt;The result of the change is that existing documents remain under the
current 2.5 license (we are not allowed to bump versions of licenses as
most documents are not copyrighted by Gentoo Foundation but by their
respective authors) but new documents can now use the 3.0 license.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; Sebastian Pipping mailed me to say that in the legal code of the
CC-BY-SA 2.5 license there is a clausule about "... a later version of
this license with the same License elements...", so perhaps I might have
a "take two" on this.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>SELinux Gentoo/Hardened state 2011-11-17</title><link href="http://192.168.1.71:8000/2011/11/selinux-gentoohardened-state-2011-11-17/" rel="alternate"></link><published>2011-11-17T23:29:00+01:00</published><updated>2011-11-17T23:29:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-11-17:/2011/11/selinux-gentoohardened-state-2011-11-17/</id><summary type="html">&lt;p&gt;A small write-down on the &lt;a href="http://hardened.gentoo.org/selinux"&gt;Gentoo Hardened
SELinux&lt;/a&gt; state-of-affairs, largely
triggered because there was an online meeting for the &lt;a href="http://hardened.gentoo.org"&gt;Gentoo
Hardened&lt;/a&gt; project today.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The SELinux policies offered in the &lt;code&gt;sec-policy&lt;/code&gt; category are based
    on the latest refpolicy release. The older policies have been
    removed from the Portage tree. The patches …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;A small write-down on the &lt;a href="http://hardened.gentoo.org/selinux"&gt;Gentoo Hardened
SELinux&lt;/a&gt; state-of-affairs, largely
triggered because there was an online meeting for the &lt;a href="http://hardened.gentoo.org"&gt;Gentoo
Hardened&lt;/a&gt; project today.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The SELinux policies offered in the &lt;code&gt;sec-policy&lt;/code&gt; category are based
    on the latest refpolicy release. The older policies have been
    removed from the Portage tree. The patches that we include in our
    policies are sent upstream and are getting eventually merged. This
    way we ensure that we keep the policies manageable (larger
    development audience), secure (more eyes looking at policy changes)
    and usable for other SELinux-enabled distributions.&lt;/li&gt;
&lt;li&gt;The userspace utilities to manage SELinux are also the latest ones
    available upstream; the older ones have been removed from the tree
    as well as to keep the number of ebuilds small enough.&lt;/li&gt;
&lt;li&gt;The Gentoo profiles that enable SELinux support are currently the
    &lt;code&gt;selinux/v2refpolicy&lt;/code&gt; ones and the &lt;code&gt;hardened/*/selinux&lt;/code&gt; ones. The
    former are the older profiles and were a bit more difficult
    to maintain. The latter ones are the newer profiles which have been
    running for quite some time now. Alas, we will be deprecating the
    &lt;code&gt;selinux/v2refpolicy&lt;/code&gt; profiles pretty soon now.&lt;/li&gt;
&lt;li&gt;The various SELinux-related documents as offered on our &lt;a href="http://hardened.gentoo.org/selinux"&gt;subproject
    page&lt;/a&gt; are regularly crosschecked
    to ensure that they are up-to-date with the latest
    SELinux state-of-affairs. An additional guide will be created on how
    to report SELinux policy bugs in bugzilla to ensure that we have the
    information that is needed to get a policy patch accepted upstream
    as well.&lt;/li&gt;
&lt;li&gt;On a HR-note: Matt Thode (known as "prometheanfire") has joined the
    ranks of SELinux developers in Gentoo Hardened. I've also taken over
    the position as Gentoo Hardened SELinux subproject lead from
    Chris Pebenito.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Security Benchmark with OVAL and Open-SCAP</title><link href="http://192.168.1.71:8000/2011/11/gentoo-security-benchmark-with-oval-and-open-scap/" rel="alternate"></link><published>2011-11-16T23:09:00+01:00</published><updated>2011-11-16T23:09:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-11-16:/2011/11/gentoo-security-benchmark-with-oval-and-open-scap/</id><summary type="html">&lt;p&gt;A while ago, I got referred to the &lt;a href="http://oval.mitre.org/"&gt;Open Vulnerability and Assessment
Language&lt;/a&gt;, which seems to be an open
specification (or even standard) for defining security
content/information and being able to document such things in a way that
tools can interpret it. Actually, it is a set of these …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A while ago, I got referred to the &lt;a href="http://oval.mitre.org/"&gt;Open Vulnerability and Assessment
Language&lt;/a&gt;, which seems to be an open
specification (or even standard) for defining security
content/information and being able to document such things in a way that
tools can interpret it. Actually, it is a set of these specifications.
But first:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tl;dr &lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-guide.html"&gt;Gentoo Security Benchmark
Guide&lt;/a&gt;
with &lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-report.html"&gt;example report on automated
tests&lt;/a&gt;
based on
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-xccdf.txt"&gt;XCCDF&lt;/a&gt;
and
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-oval2.txt"&gt;OVAL&lt;/a&gt;,
interpreted by &lt;a href="http://www.open-scap.org/page/Main_Page"&gt;Open-SCAP&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There; now that we have that out of our way, let's continue on the
somewhat more gory details. In this first post, I'd like to talk a bit
about XCCDF and OVAL, which are both imo overly complex but interesting
XML formats.&lt;/p&gt;
&lt;p&gt;The first one, XCCDF, is better known as the &lt;strong&gt;Extensible Configuration
Checklist Description Format&lt;/strong&gt; and is an XML format in which you
document settings (what should a system look like). By itself, that
doesn't warrant another XML format. However, the power of XCCDF is that
you can define in the document &lt;em&gt;profiles&lt;/em&gt;. Each of these profiles is
then documented with the set of rules that applies to the profile. So
you can have an XCCDF document on the configuration of BIND (the
nameserver) and have two profiles: one for a single-server setup, and
one for a multi-server (master/slave) setup.&lt;/p&gt;
&lt;p&gt;These rules also define checks that you can have a tool performed
against your configuration. These checks are documented in an OVAL XML
file (&lt;strong&gt;Open Vulnerability and Assessment Language&lt;/strong&gt;) which can be
interpreted by an OVAL-compliant tool. A very simply put statement could
be: "File /etc/ssh/sshd_config must have a line that matches
'PermitRootLogin no'".&lt;/p&gt;
&lt;p&gt;Of course, XML doesn't use simple statements. In the case of OVAL, a
specific form of normalization occurs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At the beginning, you define a &lt;em&gt;definition&lt;/em&gt; that explains what you
    want to achieve (similar to the above statement) in plain text, and
    then refer to one or more criteria that needs to be passed if this
    line applies. Most checks in a configuration guide are simple
    criteria, but with OVAL you can create criteria like "If my system
    is a Gentoo x86_64 one, and I use the hardened profile, then
    criteria A must apply, but if my system does not use a hardened
    profile, it is criteria B".&lt;/li&gt;
&lt;li&gt;The criteria refers to a &lt;em&gt;test&lt;/em&gt; that needs to be executed. This test
    can be a file expression match, partition information check, service
    state, installed software, etc. but does not allow executing
    commands that the user defines (it is not considered a safe practice
    that you execute commands that are stated in the XML file since most
    OVAL interpreters will run as root). This test is based on two
    additional aspects:
    &lt;/p&gt;&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;object&lt;/em&gt; refers to the object or resource that is checked.
    This can be a partition or a file, or a list of lines that match
    an expression in a file, etc.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;state&lt;/em&gt; refers to the state that that object or resource
    should be in (or should match).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With this OVAL language in place, you can now refer to several tests to
enhance your XCCDF document, and allow OVAL interpreters to test the
various rules on your system. For me, this was the major reason to look
into the language, since I had my hopes up to update or rewrite the
&lt;a href="http://www.gentoo.org/doc/en/security/security-handbook.xml"&gt;Gentoo Linux Security
Handbook&lt;/a&gt;
but with a way for users to validate if their system adheres to most/all
statements made in that document.&lt;/p&gt;
&lt;p&gt;As a matter of exercise, I started making such a security benchmark of
which you can find a &lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-guide.html"&gt;HTML version
online&lt;/a&gt;
(it's a preview URL, so might change in the future). And since it is
written with XCCDF and OVAL, I've also added an &lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/gentoo-xccdf-report.html"&gt;example report on
automated
tests&lt;/a&gt;
too. The sources of these documents are available as well
(&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-xccdf.txt"&gt;XCCDF&lt;/a&gt;
and
&lt;a href="http://dev.gentoo.org/~swift/docs/previews/oval/scap-gentoo-oval2.txt"&gt;OVAL&lt;/a&gt;
- download as txt but rename to XML then).&lt;/p&gt;
&lt;p&gt;For those adventurous enough to play with them: install
&lt;code&gt;app-forensics/openscap&lt;/code&gt; so that you can parse the files. To generate
the guide itself, use
&lt;code&gt;oscap xccdf generate scap-gentoo-xccdf.xml &amp;gt; guide.html&lt;/code&gt;. To run the
tests associated with it, use
&lt;code&gt;oscap xccdf eval --oval-results --profile Gentoo-Default --report report.html scap-gentoo-xccdf.xml&lt;/code&gt;.
Also take a look at the
&lt;a href="http://www.open-scap.org/page/Main_Page"&gt;Open-SCAP&lt;/a&gt; website which is a
good resource as well (and the mailinglists are low traffic but with
good response times!).&lt;/p&gt;
&lt;p&gt;So, what is the future on all this for me?&lt;/p&gt;
&lt;p&gt;First, I'm going to work a bit further on the OVAL statements, so that I
can automatically test the majority of settings that I currently have in
the benchmark/guide. Only when I'm far enough will I continue on the
content of the guide (since it is far from finished) and also see if
this isn't something that can be put on a somewhat more official
location. If not, I'll still continue developing it, but it'll remain on
my dev-page.&lt;/p&gt;
&lt;p&gt;When I'm somewhat satisfied with that, I might check if I can't have
OVAL enhanced with some Gentoo-specific objects (there are already
objects for RedHat-like and Debian-like distributions) so that we can
write tests for Gentoo settings (like USE flags, profiles, enabled GCC
specs, etc.) If we have that, then we can even write checks (XCCDF and
OVAL based) to validate if a system is how it is supposed to be
(wouldn't that be great, an automated test that tells you if your system
is properly set up according to our documents).&lt;/p&gt;
&lt;p&gt;But XCCDF and OVAL isn't the end. There are other formats available as
well, like CCE (for configuration entries), CVE/CPE (to check
vulnerability information and its target software/platform) and more. I
know RedHat is already actively using OVAL for its &lt;a href="https://www.redhat.com/security/data/oval/"&gt;security
advisories&lt;/a&gt;, and other sites
like &lt;a href="http://cisecurity.org/"&gt;Center for Internet Security&lt;/a&gt; are also
using XCCDF and OVAL to document and work with security guides. So why
would Gentoo not get on that train as well?&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>SELinux' 2011/07 releases now stable</title><link href="http://192.168.1.71:8000/2011/10/selinux-201107-releases-now-stable/" rel="alternate"></link><published>2011-10-23T15:07:00+02:00</published><updated>2011-10-23T15:07:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-10-23:/2011/10/selinux-201107-releases-now-stable/</id><summary type="html">&lt;p&gt;A few minutes ago, I stabilized both the 2.20110726 policies as well as
the SELinux userspace utilities that were stable (upstream) on 20110727.
With the change, I also updated the &lt;a href="http://hardened.gentoo.org/selinux/selinux-handbook.xml"&gt;Gentoo SELinux
Handbook&lt;/a&gt; with
the changes I presented on our
&lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_73ddd74112bef0007f361f3598140a21.xml"&gt;gentoo-hardened&lt;/a&gt;
mailinglist. After some time, I'll remove the now …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few minutes ago, I stabilized both the 2.20110726 policies as well as
the SELinux userspace utilities that were stable (upstream) on 20110727.
With the change, I also updated the &lt;a href="http://hardened.gentoo.org/selinux/selinux-handbook.xml"&gt;Gentoo SELinux
Handbook&lt;/a&gt; with
the changes I presented on our
&lt;a href="http://archives.gentoo.org/gentoo-hardened/msg_73ddd74112bef0007f361f3598140a21.xml"&gt;gentoo-hardened&lt;/a&gt;
mailinglist. After some time, I'll remove the now obsoleted older
policies and userspace utilities to keep the tree in a sane state.&lt;/p&gt;
&lt;p&gt;There are a few policy packages whose stabilized version isn't the
latest (cfr earlier post), those are due within the proper designated
period (about 1 month).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened SELinux policies, rev 5</title><link href="http://192.168.1.71:8000/2011/10/gentoo-hardened-selinux-policies-rev-5/" rel="alternate"></link><published>2011-10-13T18:30:00+02:00</published><updated>2011-10-13T18:30:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-10-13:/2011/10/gentoo-hardened-selinux-policies-rev-5/</id><summary type="html">&lt;p&gt;I've pushed out &lt;code&gt;selinux-base-policy&lt;/code&gt; version 2.20110726-r5 to the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=summary"&gt;hardened-dev&lt;/a&gt;
overlay. It does not hold huge changes, most of them are rewrites or
updates on pre-existing patches (on the SELinux policies) to make them
conform the refpolicy naming conventions and other guidelines. It
includes preliminary support for the &lt;a href="http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html"&gt;XDG
Specification …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've pushed out &lt;code&gt;selinux-base-policy&lt;/code&gt; version 2.20110726-r5 to the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=summary"&gt;hardened-dev&lt;/a&gt;
overlay. It does not hold huge changes, most of them are rewrites or
updates on pre-existing patches (on the SELinux policies) to make them
conform the refpolicy naming conventions and other guidelines. It
includes preliminary support for the &lt;a href="http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html"&gt;XDG
Specification&lt;/a&gt;
although changes there are still going to occur (as the policy is still
under development). Other updates are primarily on the policies for user
applications (pan, mozilla, skype), portage and asterisk.&lt;/p&gt;
&lt;p&gt;In related news, the &lt;a href="http://hardened.gentoo.org/selinux-faq.xml"&gt;Gentoo Hardened SELinux
FAQ&lt;/a&gt; is updated with two
entries:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml#recoverportage"&gt;Portage fails to label files because "setfiles" does not work
    anymore&lt;/a&gt;,
    and&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml#nosuid"&gt;Applications do not transition on a nosuid-mounted
    partition&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Gentoo"></category></entry><entry><title>Upgrading GCC, revisited</title><link href="http://192.168.1.71:8000/2011/10/upgrading-gcc-revisited/" rel="alternate"></link><published>2011-10-13T18:23:00+02:00</published><updated>2011-10-13T18:23:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-10-13:/2011/10/upgrading-gcc-revisited/</id><summary type="html">&lt;p&gt;Gentoo has, since long, had a GCC Upgrading guide. A long time ago,
upgrading GCC required quite a lot of side activities and was often
considered a risky upgrade. But times change, and so do the GCC upgrade
cycles. Improved compatibility as well as a better understood impact
made GCC …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gentoo has, since long, had a GCC Upgrading guide. A long time ago,
upgrading GCC required quite a lot of side activities and was often
considered a risky upgrade. But times change, and so do the GCC upgrade
cycles. Improved compatibility as well as a better understood impact
made GCC upgrades a lot less painful. Sadly, our documentation didn't
reflect that as much - the last update on the GCC Upgrade guide was from
2008.&lt;/p&gt;
&lt;p&gt;Today, after some &lt;a href="http://archives.gentoo.org/gentoo-dev/msg_62dbadfe0175cdf96a7751f69d2f5af7.xml"&gt;clarifications from
gentoo-dev&lt;/a&gt;,
I've &lt;a href="http://www.gentoo.org/doc/en/gcc-upgrading.xml"&gt;updated the GCC Upgrading
Guide&lt;/a&gt; to reflect the
improved situation. I'm hoping this will help clear out the uncertainty
surrounding GCC upgrades. As always, comments and feedback are always
welcome.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Quickly setup a Gentoo system</title><link href="http://192.168.1.71:8000/2011/09/quickly-setup-a-gentoo-system/" rel="alternate"></link><published>2011-09-24T15:34:00+02:00</published><updated>2011-09-24T15:34:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-09-24:/2011/09/quickly-setup-a-gentoo-system/</id><summary type="html">&lt;p&gt;In order to verify if the installation instructions in the Gentoo
Handbook are still valid, and to allow me to quickly seed new Gentoo
installations in a virtual environment, I wrote a &lt;em&gt;very ugly&lt;/em&gt; (really)
script to automatically "stage" a Gentoo Linux installation in a KVM
guest. This is &lt;strong&gt;not …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;In order to verify if the installation instructions in the Gentoo
Handbook are still valid, and to allow me to quickly seed new Gentoo
installations in a virtual environment, I wrote a &lt;em&gt;very ugly&lt;/em&gt; (really)
script to automatically "stage" a Gentoo Linux installation in a KVM
guest. This is &lt;strong&gt;not&lt;/strong&gt; my intention to make this an "unattended"
installation script, it is merely one of the many scripts out there to
help some poor developer in working a bit more agile.&lt;/p&gt;
&lt;p&gt;I decided to &lt;a href="http://dev.gentoo.org/~swift/docs/gensetup-guide.xml"&gt;document
gensetup&lt;/a&gt; as a
first step (cfr my earlier &lt;a href="http://blog.siphos.be/2011/09/catching-up/"&gt;Catching
up&lt;/a&gt; post) in my quest to
document how to setup a virtual Gentoo Hardened (with SELinux) virtual
architecture. The &lt;strong&gt;gensetup&lt;/strong&gt; tool is just to provide a (semi)automated
way to install Gentoo according to the instructions in the Gentoo
Handbook. Later, I'll add documentation for the &lt;code&gt;setup_*.sh&lt;/code&gt; scripts
that I use to upgrade such a base installation to a specific
server/service.&lt;/p&gt;
&lt;p&gt;You want a probably better working installation script, check out
&lt;a href="http://www.agaffney.org/quickstart.php"&gt;Andrew Gaffney's Quickstart for
Gentoo&lt;/a&gt;. And if you know of
other such scripts, I would be glad to hear from them, if not just to
keep track of the various similar projects out there.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt; The quickstart application does not seem to be maintained
anymore. My bad. However, suggestions are made in the comments for more
up-to-date systems ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Power management guide updated</title><link href="http://192.168.1.71:8000/2011/09/power-management-guide-updated/" rel="alternate"></link><published>2011-09-23T21:57:00+02:00</published><updated>2011-09-23T21:57:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-09-23:/2011/09/power-management-guide-updated/</id><summary type="html">&lt;p&gt;The &lt;a href="http://www.gentoo.org/doc/en/power-management-guide.xml"&gt;Gentoo Power Management
Guide&lt;/a&gt; is now
updated. It is a full rewrite, focusing currently on two main toolsets:
&lt;a href="http://samwel.tk/laptop_mode/"&gt;Laptop Mode Tools&lt;/a&gt; and
&lt;a href="http://www.linux.it/~malattia/wiki/index.php/Cpufreqd"&gt;cpufreqd&lt;/a&gt;. I was
pleasantly surprised by the number of features that the laptop mode
tools package provided.&lt;/p&gt;
&lt;p&gt;Of course, this does not mean that the guide is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="http://www.gentoo.org/doc/en/power-management-guide.xml"&gt;Gentoo Power Management
Guide&lt;/a&gt; is now
updated. It is a full rewrite, focusing currently on two main toolsets:
&lt;a href="http://samwel.tk/laptop_mode/"&gt;Laptop Mode Tools&lt;/a&gt; and
&lt;a href="http://www.linux.it/~malattia/wiki/index.php/Cpufreqd"&gt;cpufreqd&lt;/a&gt;. I was
pleasantly surprised by the number of features that the laptop mode
tools package provided.&lt;/p&gt;
&lt;p&gt;Of course, this does not mean that the guide is now finished.
Documentation never is, so do keep on suggesting improvements (and
pointing to bugs) in &lt;a href="https://bugs.gentoo.org"&gt;Gentoo's bugzilla&lt;/a&gt;.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Catching up</title><link href="http://192.168.1.71:8000/2011/09/catching-up/" rel="alternate"></link><published>2011-09-18T16:51:00+02:00</published><updated>2011-09-18T16:51:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-09-18:/2011/09/catching-up/</id><summary type="html">&lt;p&gt;As
&lt;a href="http://archives.gentoo.org/gentoo-doc/msg_f6d85b4b80e2e147fa09cf669b936b46.xml"&gt;mentioned&lt;/a&gt;
on the gentoo-doc mailinglist, all documentation bugs (that we know of)
related to openrc have been fixed. It was already a week like so, but
the last dependency on our "tracker" bug was an open one (asking if more
needs to be done or not) from which we …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As
&lt;a href="http://archives.gentoo.org/gentoo-doc/msg_f6d85b4b80e2e147fa09cf669b936b46.xml"&gt;mentioned&lt;/a&gt;
on the gentoo-doc mailinglist, all documentation bugs (that we know of)
related to openrc have been fixed. It was already a week like so, but
the last dependency on our "tracker" bug was an open one (asking if more
needs to be done or not) from which we haven't received an answer in
over a month. So I guess we're there.&lt;/p&gt;
&lt;p&gt;Now, the OpenRC transition wasn't an easy one documentation-wise. Since
there is no full backwards compatibility, all changes would need to be
done in an atomic way, but due to resource constraints, the
documentation couldn't catch up on the changes in due time. Luckily,
that's over now and we can hopefully start by improving our
documentation once again.&lt;/p&gt;
&lt;p&gt;For &lt;a href="http://hardened.gentoo.org/selinux"&gt;SELinux&lt;/a&gt; too, OpenRC hasn't
been a gift. The latest &lt;code&gt;selinux-base-policy&lt;/code&gt; now in the Portage tree
(20110726-r4) still includes some fixes to get OpenRC support fully
working. However, I'm fairly confident that we will be able to tackle
other bugs (if they arise) quickly now, since the basic policy
definitions (like support for &lt;code&gt;rc_exec_t&lt;/code&gt;) are now in place.&lt;/p&gt;
&lt;p&gt;With the major changes done, let's look at the future. For
documentation, I'm now working on a new &lt;a href="http://dev.gentoo.org/~swift/docs/previews/power-management-guide.xml"&gt;Power Management
Guide&lt;/a&gt;
whereas for SELinux, I'll be focusing on the remaining bugs as well as
documentation updates (the &lt;a href="http://hardened.gentoo.org/selinux/selinux-handbook.xml"&gt;SELinux
Handbook&lt;/a&gt; will
have some major updates in the hope it becomes more useful and
future-proof). Also, for GDP, I'm going to make a suggestion towards the
&lt;a href="http://www.gentoo.org/proj/en/gdp/doc/doc-policy.xml"&gt;Gentoo Documentation
Policy&lt;/a&gt;, taking
into account that the GDP resources are not as high as at the time the
policy was written. Finally, I'm going to update my &lt;a href="https://github.com/sjvermeu/small.coding/tree/HEAD/gensetup"&gt;installation
scripts&lt;/a&gt;
that I use to seed the virtual servers so that I can enhance the SELinux
policy testing.&lt;/p&gt;
&lt;p&gt;I consider this post to be a checklist - after all, now that I promised
that I would do that, I guess I can't excuse myself from that anymore do
I ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Now using refpolicy 2.20110726</title><link href="http://192.168.1.71:8000/2011/09/now-using-refpolicy-2-20110726/" rel="alternate"></link><published>2011-09-04T20:38:00+02:00</published><updated>2011-09-04T20:38:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-09-04:/2011/09/now-using-refpolicy-2-20110726/</id><summary type="html">&lt;p&gt;A few days ago, I committed the SELinux policy modules that are based on
the 2.20110726 set released upstream. For those that are using Gentoo
Hardened with SELinux, you'll find them if you use the \~arch set for
the &lt;code&gt;sec-policy&lt;/code&gt; category.&lt;/p&gt;
&lt;p&gt;When I talk about upstream, it usually is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago, I committed the SELinux policy modules that are based on
the 2.20110726 set released upstream. For those that are using Gentoo
Hardened with SELinux, you'll find them if you use the \~arch set for
the &lt;code&gt;sec-policy&lt;/code&gt; category.&lt;/p&gt;
&lt;p&gt;When I talk about upstream, it usually is the &lt;a href="http://oss.tresys.com/projects/refpolicy"&gt;reference
policy&lt;/a&gt; as maintained by
&lt;a href="http://www.tresys.com/"&gt;Tresys&lt;/a&gt;. This project, often abbreviated to
&lt;em&gt;refpolicy&lt;/em&gt;, tries to maintain a set of SELinux policies that are useful
for the majority of Linux distributions. In fact, most (if not all)
Linux distributions that support SELinux base their policies on the
refpolicy.&lt;/p&gt;
&lt;p&gt;Now maintaining a reference policy for SELinux is not that easy, even
with the contributions of many distributions and developers. Since the
policy is used for many distributions (including &lt;a href="https://www.redhat.com/rhel/server/features/benefits.html"&gt;RedHat Enterprise
Linux&lt;/a&gt;) it is
vital that presented changes are only accepted if truly necessary (and
do not present additional security risks). That means that patches
should be well documented and easy to read. Patches that lack a proper
motivation and that are not trivial are not accepted.&lt;/p&gt;
&lt;p&gt;When distributions want to push updates on the policy to the refpolicy,
they need to send the patches to the &lt;a href="http://oss.tresys.com/pipermail/refpolicy/"&gt;refpolicy
mailinglist&lt;/a&gt;. There they are
picked up and analyzed and eventually added to the release.&lt;/p&gt;
&lt;p&gt;For &lt;a href="http://hardened.gentoo.org/selinux"&gt;Gentoo Hardened's SELinux
project&lt;/a&gt;, getting (the majority of)
our own patches in the reference policy is important, mainly because we
currently lack the manpower to maintain a huge patch set ourselves.
Every time a new release is made by the reference policy, we need to
re-apply (and redevelop) our own patches. For a small set of patches,
this isn't a lot of work, but the more changes you include, the more
time-consuming this "patch forwarding" becomes. Of course, by quickly
pushing out our patches we also get the confirmation (or rejection) of
the patch, allowing us to be certain that we are on the right track.
After all, it is a &lt;em&gt;security policy&lt;/em&gt; that we are talking of.&lt;/p&gt;
&lt;p&gt;Now, the reference policy is just one of "our upstreams". A second
important project - also governed by the Tresys organization - is what
is called the &lt;a href="http://userspace.selinuxproject.org/trac"&gt;SELinux
Userspace&lt;/a&gt;. This project
maintains the tools necessary to build the SELinux policy from readable
text for humans to interpretable binary blobs for the Linux kernel. It
maintains the tools that help us modify the policies' runtime behavior
(using conditionals), manage file contexts and more. As this tool
interacts intimately with the SELinux internals, development of these
tools is discussed on the &lt;a href="http://www.nsa.gov/research/selinux/list.shtml"&gt;SELinux
mailinglist&lt;/a&gt; offered by
the NSA.&lt;/p&gt;
&lt;p&gt;It is the SELinux userspace project that provides tools like
&lt;strong&gt;semanage&lt;/strong&gt;, &lt;strong&gt;semodule&lt;/strong&gt;, &lt;strong&gt;restorecon&lt;/strong&gt;, &lt;strong&gt;chcon&lt;/strong&gt;, etc.&lt;/p&gt;
&lt;p&gt;So next time you hear me talk about upstream, you know what it is.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Use parted for large partitions</title><link href="http://192.168.1.71:8000/2011/08/use-parted-for-large-partitions/" rel="alternate"></link><published>2011-08-24T23:46:00+02:00</published><updated>2011-08-24T23:46:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-08-24:/2011/08/use-parted-for-large-partitions/</id><summary type="html">&lt;p&gt;A few bugs that were sitting in Gentoo's bugzilla for the documentation
were related to large partitions (2 TB and higher). Previously, this
wasn't as much as an issue since the number of users that have 2+ TB
partitions are fairly slim. But of course time flies, hardware becomes
cheaper …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few bugs that were sitting in Gentoo's bugzilla for the documentation
were related to large partitions (2 TB and higher). Previously, this
wasn't as much as an issue since the number of users that have 2+ TB
partitions are fairly slim. But of course time flies, hardware becomes
cheaper and I have large partitions myself now too. So we had to update
the docs.&lt;/p&gt;
&lt;p&gt;Since yesterday or so, the Gentoo Handbook now provides instructions on
&lt;a href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&amp;amp;chap=4#parted"&gt;using
parted&lt;/a&gt;
for partitioning the disk (not for all architectures yet since I can't
validate if it works on those as well). The use of the &lt;strong&gt;parted&lt;/strong&gt;
command, which is in the minimal LiveCDs for some time now, allows users
to create GPT partition labels (instead of the old-style msdos ones).
This partition system, which is supported by other operating systems as
well, does not stop at 4 primary partitions, and supports partitions of
a size I can currently only dream of (somewhere in the exabytes if I am
not mistaken).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Easy documentation updates thanks to the many contributions</title><link href="http://192.168.1.71:8000/2011/08/easy-documentation-updates-thanks-to-the-many-contributions/" rel="alternate"></link><published>2011-08-22T23:01:00+02:00</published><updated>2011-08-22T23:01:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-08-22:/2011/08/easy-documentation-updates-thanks-to-the-many-contributions/</id><summary type="html">&lt;p&gt;As mentioned previously, I took a stab at the &lt;a href="http://www.gentoo.org/doc/en/ldap-howto.xml"&gt;Gentoo Guide to OpenLDAP
Authentication&lt;/a&gt;, updating
its configuration settings as well as give an introduction to its
replication mechanism. Although I am no OpenLDAP guru at all, I set up a
similar architecture for testing some SELinux policy changes. This test …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As mentioned previously, I took a stab at the &lt;a href="http://www.gentoo.org/doc/en/ldap-howto.xml"&gt;Gentoo Guide to OpenLDAP
Authentication&lt;/a&gt;, updating
its configuration settings as well as give an introduction to its
replication mechanism. Although I am no OpenLDAP guru at all, I set up a
similar architecture for testing some SELinux policy changes. This test
environment grew (okay, it's all KVM guests, so the only thing that grew
was my resource consumption) and is currently entailing over 24 systems,
ranging from BIND (in master/slave) to Apache/Nginx setups, reverse
proxies to database clusters and what not.&lt;/p&gt;
&lt;p&gt;I'm hoping that I can manage the scripts I use to create those images
(perform unattended installations of all these softwares as well as
configuration aspects) and eventually provide some more documents for
Gentoo on these matters. But until then, I'll focus more on fixing and
helping the publication of documentation (a small list of changes
contributed by various people are in the &lt;a href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml"&gt;Gentoo
Handbook&lt;/a&gt;
which finally mentions ext4, has seen a whole slew of OpenRC fixes and
updated kernel configuration information, or the &lt;a href="http://www.gentoo.org/doc/en/guide-to-mutt.xml"&gt;Gentoo Guide to
Mutt&lt;/a&gt; which has been
rewritten from scratch). If you notice any errors or needs for
corrections on Gentoo documentation, don't hesitate to &lt;a href="http://bugs.gentoo.org"&gt;file a
bugreport&lt;/a&gt; or drop by on IRC's #gentoo-doc
channel.&lt;/p&gt;
&lt;p&gt;Speaking of documentation, the &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml"&gt;SELinux
Handbook&lt;/a&gt;
has seen a few updates as well, and I have also started pushing some
module-specific information (for instance on
&lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/modules/portage.xml"&gt;Portage&lt;/a&gt;).
This might help some users with their quest to get a particular software
title to work on their system with the SELinux policies in place.&lt;/p&gt;
&lt;p&gt;Next to the documentation, you'll also find the SELinux policy modules
based on the 2.20110726 version of the reference policy in the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git;a=summary"&gt;hardened-dev&lt;/a&gt;
overlay. The base policy is currently in revision 2 with revision 3 on
the way (asterisk, mutt and mozilla fixes). It now uses a cleaner
patching process, something that is also part of the updated
&lt;a href="http://devmanual.gentoo.org/eclass-reference/selinux-policy-2.eclass/index.html"&gt;selinux-policy-2.eclass&lt;/a&gt;.
I'm also hoping that I can introduce delivery of the SELinux policy
interface documentation (a nicely formatted set of HTML pages showing
which kind of interfaces - calls or privilege "bundles" if you like -
are available), of course based on the availability of USE="doc".&lt;/p&gt;
&lt;p&gt;Once this has been accomplished, I'll see that the new policy modules
are migrated from the hardened-dev overlay to the main tree. Also, the
majority of changes made to the policy are since revision 2 of the base
policy in a more manageable format, allowing for faster pushing of the
changes to the upstream reference policy.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Ready, set, commit!</title><link href="http://192.168.1.71:8000/2011/08/ready-set-commit/" rel="alternate"></link><published>2011-08-12T22:35:00+02:00</published><updated>2011-08-12T22:35:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-08-12:/2011/08/ready-set-commit/</id><summary type="html">&lt;p&gt;Yesterday, I have entered the realms of Gentoo Development again. But as
it was getting late then, I had to wait before the first commits
happened. So this evening, things were done. The first couple of
documentation bugs (mostly related to OpenRC) have been committed to the
Gentoo CVS repository …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday, I have entered the realms of Gentoo Development again. But as
it was getting late then, I had to wait before the first commits
happened. So this evening, things were done. The first couple of
documentation bugs (mostly related to OpenRC) have been committed to the
Gentoo CVS repository and I've also committed my first change on the
gentoo-x86 CVS repository (a small change for the SELinux eclass, needed
for the upcoming storm of packages.&lt;/p&gt;
&lt;p&gt;So what does that mean for Gentoo and Gentoo Hardened? Well, that means
that I'll be taking on bugs myself now. You can ping me for
documentation changes as well as SELinux policy changes. Within the next
few hours, a little over 200 packages will be sent to the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git"&gt;hardened-development&lt;/a&gt;
overlay, containing the &lt;em&gt;SELinux policy modules based on the upstream
2.20110726 release&lt;/em&gt;. These will linger there for a while, since I had
some troubles getting them into the shape they are now - so some
additional testing doesn't hurt.&lt;/p&gt;
&lt;p&gt;During the testing, most of the patches applied will also be submitted
upstream for verification and inclusion. Simultaneously, a second set of
patches will be prepared to squeeze out the remaining issues that are
either left, or that have been reported since the push (I am expecting
quite a few still, but luckily many users on #gentoo-hardened are
helping out in testing SELinux).&lt;/p&gt;
&lt;p&gt;While we are on the SELinux policy development, I'll also be handling a
few other documentation bugs. I'm hoping to take a stab at Gentoo's
&lt;a href="http://www.gentoo.org/doc/en/ldap-howto.xml"&gt;OpenLDAP HOWTO&lt;/a&gt; since I've
been running a similar setup here for some time (including SELinux
support of course ;-)&lt;/p&gt;
&lt;p&gt;Speaking about documentation, Anthony G. "blueness" Basile has pushed
some documentation updates that I made in the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-docs.git"&gt;hardened-docs&lt;/a&gt;
repository to the main site. That means that users can now see how
&lt;em&gt;Gentoo Hardened supports MCS&lt;/em&gt; (and even talks about MLS for the brave
ones out there). And since we now support MCS and have the latest
userspace utilities in our repository, we can finally see if we can
support SELinux sandboxing, a functionality that is already available in
Fedora/RedHat but not fully supported through the upstream channels yet.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>emerge-webrsync and gpg verification</title><link href="http://192.168.1.71:8000/2011/07/emerge-webrsync-and-gpg-verification/" rel="alternate"></link><published>2011-07-22T14:33:00+02:00</published><updated>2011-07-22T14:33:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-07-22:/2011/07/emerge-webrsync-and-gpg-verification/</id><summary type="html">&lt;p&gt;Gentoo has been working on its
&lt;a href="http://www.gentoo.org/proj/en/glep/glep-0057.html"&gt;security&lt;/a&gt; from very
early on. One of the (many) features it supports is to allow users to
validate the state of the portage tree. Ebuild signing (where developers
sign the Manifest file with their key) is one of the layers offered by
Gentoo, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gentoo has been working on its
&lt;a href="http://www.gentoo.org/proj/en/glep/glep-0057.html"&gt;security&lt;/a&gt; from very
early on. One of the (many) features it supports is to allow users to
validate the state of the portage tree. Ebuild signing (where developers
sign the Manifest file with their key) is one of the layers offered by
Gentoo, but another one is full tree signing.&lt;/p&gt;
&lt;p&gt;When you use &lt;strong&gt;emerge-webrsync&lt;/strong&gt; instead of &lt;strong&gt;emerge --sync&lt;/strong&gt;, an
archive containing a consistent state of the portage tree is downloaded
and unpacked on your system. If you however set
&lt;code&gt;FEATURES="webrsync-gpg"&lt;/code&gt; then this tool will check the GPG signature
attached to the file with the public key used by Gentoo's infrastructure
(0x239C75C4). If the archive does not contain a valid signature, then it
is not used on the system.&lt;/p&gt;
&lt;p&gt;If you want to use this, here are the steps to do so.&lt;/p&gt;
&lt;p&gt;First, set up the location where you keep the key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~# mkdir -p /etc/portage/gpg
~# gpg --homedir /etc/portage/gpg --keyserver subkeys.pgp.net --recv-keys 0x239C75C4
~# gpg --homedir /etc/portage/gpg --edit-key 0x239C75C4 trust
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, edit &lt;code&gt;/etc/make.conf&lt;/code&gt; and set the following parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;FEATURES=&amp;quot;webrsync-gpg&amp;quot;
PORTAGE_GPG_DIR=&amp;quot;/etc/portage/gpg&amp;quot;
# Disable &amp;#39;emerge --sync&amp;#39; so emerge-webrsync has to be used
SYNC=&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With that done, you're all set. Just run &lt;strong&gt;emerge-webrsync&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Happy Gentooing!&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Preliminary SELinux MCS support in Gentoo Hardened</title><link href="http://192.168.1.71:8000/2011/07/preliminary-selinux-mcs-support-in-gentoo-hardened/" rel="alternate"></link><published>2011-07-21T22:04:00+02:00</published><updated>2011-07-21T22:04:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-07-21:/2011/07/preliminary-selinux-mcs-support-in-gentoo-hardened/</id><summary type="html">&lt;p&gt;Users tracking the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git"&gt;hardened-dev&lt;/a&gt;
overlay for SELinux packages will notice yet another update on the
&lt;code&gt;selinux-base-policy&lt;/code&gt; package. This time however, the change is &lt;a href="http://thread.gmane.org/gmane.linux.gentoo.hardened/4939"&gt;a
little more&lt;/a&gt;
than just a policy update. With this new revision, preliminary support
for &lt;em&gt;Multi-Category Security&lt;/em&gt; (aka MCS) is added.&lt;/p&gt;
&lt;p&gt;MCS is an update on the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Users tracking the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git"&gt;hardened-dev&lt;/a&gt;
overlay for SELinux packages will notice yet another update on the
&lt;code&gt;selinux-base-policy&lt;/code&gt; package. This time however, the change is &lt;a href="http://thread.gmane.org/gmane.linux.gentoo.hardened/4939"&gt;a
little more&lt;/a&gt;
than just a policy update. With this new revision, preliminary support
for &lt;em&gt;Multi-Category Security&lt;/em&gt; (aka MCS) is added.&lt;/p&gt;
&lt;p&gt;MCS is an update on the SELinux policy where domains and resources can
be given a "category". This is especially useful on what is called
multi-tenant systems, where multiple processes (but of the same
application and hence the same domain definition) are running, servicing
requests of different clients (or even customers). With MCS, these
different processes, although using the same domain definitions, can
still be isolated. The use of categories is well accepted for
virtualization hosts (where virtual guests should be run isolated from
each other) and web servers, but other uses can be found easily as well.&lt;/p&gt;
&lt;p&gt;Next to MCS, the update also supports MLS or &lt;em&gt;Multi-Level Security&lt;/em&gt;.
Like MCS, this supports multiple categories, but it also supports
multiple sensitivity levels. On an MLS system, the security
administrator can control how information of a certain sensitivity label
"flows" through the system. Now, the MLS support within Gentoo Hardened
is still very experimental so I don't recommend it yet, unless you are
willing to help us get it in a workable shape.&lt;/p&gt;
&lt;p&gt;In order to use MCS, you need to use the &lt;code&gt;POLICY_TYPES&lt;/code&gt; variable in
/etc/make.conf (which allows Portage to build the policy type(s) you
want) and the &lt;code&gt;SELINUXTYPE&lt;/code&gt; variable in /etc/selinux/config. Whereas
this previously was limited to "strict" or "targeted", they now support
"mls" and "mcs" as well. Of course, this is
&lt;a href="http://goo.gl/DlHJD"&gt;documented&lt;/a&gt; in the Gentoo Hardened SELinux
handbook (currently in the hardened-doc overlay).&lt;/p&gt;
&lt;p&gt;Now, this is still &lt;em&gt;preliminary&lt;/em&gt; support for MCS. A small fix needs to
happen on our eclass and it definitely needs lots of testing before it
can be considered for production use. Also, the majority of development
attention will continue in the "strict" policy type although MCS testing
and support will grow.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>On the new SELinux profiles</title><link href="http://192.168.1.71:8000/2011/07/on-the-new-selinux-profiles/" rel="alternate"></link><published>2011-07-14T19:31:00+02:00</published><updated>2011-07-14T19:31:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-07-14:/2011/07/on-the-new-selinux-profiles/</id><summary type="html">&lt;p&gt;Ever since Anthony put in the &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=365483"&gt;new SELinux
profiles&lt;/a&gt; - which was
long due - they have seen quite a few tests and the necessary,
evolutionary updates. No changes that broke things, no oddities that
would give a WTF to whomever is using it. The latest updates were to
remove some obsolete …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since Anthony put in the &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=365483"&gt;new SELinux
profiles&lt;/a&gt; - which was
long due - they have seen quite a few tests and the necessary,
evolutionary updates. No changes that broke things, no oddities that
would give a WTF to whomever is using it. The latest updates were to
remove some obsolete masks so that our visibility in the &lt;a href="http://qa-reports.gentoo.org/"&gt;Gentoo QA
Reports&lt;/a&gt; is down again.&lt;/p&gt;
&lt;p&gt;However, we are well aware that these profiles are still in the
dev(elopment) phase but would like to stabilize these soon. For this to
happen, we need SELinux users to give the new profiles a go. Become
&lt;code&gt;sysadm_r&lt;/code&gt; &amp;amp; root and switch your profile to whichever SELinux profile
suits you the most (with the new profiles, we support SELinux on
multilib and no-multilib and across various settings).&lt;/p&gt;
&lt;p&gt;All my local servers run with "hardened/linux/amd64/no-multilib/selinux"
whereas my main workstation uses "hardened/linux/amd64/selinux" (since I
still have some need for the multilib setup). We did some tests on
non-hardened profiles too as well as on the x86 architecture with no
problems whatsoever. So although we can't guarantee anything, I'm pretty
convinced that the profiles will work for you too!&lt;/p&gt;
&lt;p&gt;So by all means, see if you can switch from the v2refpolicy/ profiles
and give us your feedback. You're always welcome for a chat on
&lt;code&gt;#gentoo-hardened&lt;/code&gt; (irc.freenode.net) or on our mailinglists.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Gentoo Hardened SELinux state</title><link href="http://192.168.1.71:8000/2011/07/gentoo-hardened-selinux-state/" rel="alternate"></link><published>2011-07-09T16:39:00+02:00</published><updated>2011-07-09T16:39:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-07-09:/2011/07/gentoo-hardened-selinux-state/</id><summary type="html">&lt;p&gt;Since last post, we've been working on the further stabilization and bug
fixing of the SELinux policies within Gentoo Hardened. You might have
noticed that we started working on the QA of the packages, like I
promised in the last post. The binaries within &lt;code&gt;selinux-base-policy&lt;/code&gt; are
now published somewhere on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since last post, we've been working on the further stabilization and bug
fixing of the SELinux policies within Gentoo Hardened. You might have
noticed that we started working on the QA of the packages, like I
promised in the last post. The binaries within &lt;code&gt;selinux-base-policy&lt;/code&gt; are
now published somewhere on blueness' &lt;a href="http://dev.gentoo.org/~blueness/patchbundle-selinux-base-policy/"&gt;developer
page&lt;/a&gt;
since he's proxy'ing all my commits until recruiters get the chance to
pick up my &lt;a href="https://bugs.gentoo.org/show_bug.cgi?id=176886"&gt;recruitment
bug&lt;/a&gt;. Other patches that
are coming up will be published likewise as well if they get too big to
be within the main Portage tree.&lt;/p&gt;
&lt;p&gt;Next to the binaries, I'm currently checking if the SELinux policy
packages can become &lt;a href="http://devmanual.gentoo.org/ebuild-writing/eapi/index.html"&gt;EAPI-4
compliant&lt;/a&gt;
(they're currently still using EAPI-0). Same for the SELinux-specific
packages, like policycoreutils, libsemanage, libselinux etc.&lt;/p&gt;
&lt;p&gt;During the last few days, I've tried to take a few stabs at supporting
Python 2 and Python 3 simultaneously. It seems to work for
policycoreutils and libsemanage (necessary fixes are in the
&lt;a href="http://git.overlays.gentoo.org/gitweb/?p=proj/hardened-dev.git"&gt;gentoo-hardened
overlay&lt;/a&gt;)
but any attempt to fix libselinux seems to give me hard walls. So for
now, we're still stuck with Python 2 support when using Portage (note
that you can still use Python 3 for all other things, but Portage
requires Python 2 as it calls libselinux). This is currently still
accomplished through a proper &lt;code&gt;use.mask&lt;/code&gt; and &lt;code&gt;use.force&lt;/code&gt; setting against
Portage.&lt;/p&gt;
&lt;p&gt;Of course, the policies themselves are not silent either. I've updated
the &lt;code&gt;selinux-base-policy&lt;/code&gt; package so that Portage can now support
NFS-mounted Portage trees and made quite a few openrc-related fixes as
well (against the policy, not against openrc ;-)&lt;/p&gt;
&lt;p&gt;I promised to take a stab at MCS in the near future, and that's still
the plan. Hopefully in the coming few weeks ;-)&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>What's next after stabilization?</title><link href="http://192.168.1.71:8000/2011/06/whats-next-after-stabilization/" rel="alternate"></link><published>2011-06-13T20:46:00+02:00</published><updated>2011-06-13T20:46:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-06-13:/2011/06/whats-next-after-stabilization/</id><summary type="html">&lt;p&gt;The last few weeks have shown quite a few interesting improvements on
Gentoo Hardened's SELinux state. We now have improved (simplified)
Gentoo profile support, supporting SELinux on no-multilib (an often
requested feature, now finally in), we stabilized the 2.20101213
policies that are in the tree and are cleaning up …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The last few weeks have shown quite a few interesting improvements on
Gentoo Hardened's SELinux state. We now have improved (simplified)
Gentoo profile support, supporting SELinux on no-multilib (an often
requested feature, now finally in), we stabilized the 2.20101213
policies that are in the tree and are cleaning up the old ones. The
documentation is continuously updated
(&lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/selinux-handbook.xml"&gt;handbook&lt;/a&gt;
and &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux-faq.xml"&gt;FAQ&lt;/a&gt;) and
we are getting a nice stream of users helping out and reporting stuff on
SELinux.&lt;/p&gt;
&lt;p&gt;So, besides the further stabilization and bug fixing, what else is on
the horizon?&lt;/p&gt;
&lt;p&gt;Well, our first concern now will be to make the ebuilds more... correct.
Some of them still violate a few QA rules and this needs to be fixed. If
possible, we'll also start converting our ebuilds to a more recent EAPI.&lt;/p&gt;
&lt;p&gt;Then, we will take a first stab at MCS within Gentoo Hardened. Our
primary concern here is support for the virtualization technologies
which, if SELinux-aware, are often using MCS to shield off running
guests from each other.&lt;/p&gt;
&lt;p&gt;So interesting times are ahead. And of course, while we're at it, we'll
continue improving policies and submitting our own patches upstream.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>SELinux Gentoo profile updates</title><link href="http://192.168.1.71:8000/2011/05/selinux-gentoo-profile-updates/" rel="alternate"></link><published>2011-05-03T23:17:00+02:00</published><updated>2011-05-03T23:17:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-05-03:/2011/05/selinux-gentoo-profile-updates/</id><summary type="html">&lt;p&gt;The SELinux support within Gentoo Hardened is continuing to go forward.
Anthony G. Basile has been working on the new SELinux Gentoo profiles
which were in dire need of updates. With the rework, we'll also support
the AMD64 no-multilib environment properly. With the new profiles we'll
also make &lt;em&gt;USE="open_perms …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The SELinux support within Gentoo Hardened is continuing to go forward.
Anthony G. Basile has been working on the new SELinux Gentoo profiles
which were in dire need of updates. With the rework, we'll also support
the AMD64 no-multilib environment properly. With the new profiles we'll
also make &lt;em&gt;USE="open_perms"&lt;/em&gt; enabled by default. This will enable the
"open" permission within the SELinux policies. And of course we'll
remove that &lt;em&gt;FEATURES="loadpolicy"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Not in git yet, but close, are further updates on the policy ebuilds.
Revision 14 of our &lt;code&gt;selinux-base-policy&lt;/code&gt; package will fail when the base
policy couldn't be loaded properly. This will ensure that a successful
installation means that the policies are loaded successfully as well. If
we wouldn't do this, then users might assume that the policies are
constantly being updated while in reality their system has always been
working with older policies. I am also going to, based on the &lt;a href="http://qa-reports.gentoo.org"&gt;QA
reports&lt;/a&gt;, update the &lt;code&gt;sec-policy/*&lt;/code&gt;
packages so they are not mentioned in those reports anymore.&lt;/p&gt;
&lt;p&gt;In other related news, the &lt;a href="http://goo.gl/uaaf4"&gt;Gentoo Hardened SELinux
FAQ&lt;/a&gt; will get updates on UBAC, cron issues and a
few errors (cosmetic or not) that you might have when working with
Gentoo Hardened SELinux. I'm also constantly updating the &lt;a href="http://goo.gl/DlHJD"&gt;Gentoo
Hardened SELinux Handbook (PDF)&lt;/a&gt; with the latest
information and developments.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Restoring configuration files on Gentoo</title><link href="http://192.168.1.71:8000/2011/03/restoring-configuration-files-on-gentoo/" rel="alternate"></link><published>2011-03-19T16:32:00+01:00</published><updated>2011-03-19T16:32:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-03-19:/2011/03/restoring-configuration-files-on-gentoo/</id><summary type="html">&lt;p&gt;If you work with Gentoo, you're probably aware of tools like
&lt;strong&gt;etc-update&lt;/strong&gt; and &lt;strong&gt;dispatch-conf&lt;/strong&gt;. If you use &lt;strong&gt;dispatch-conf&lt;/strong&gt;, you
might know that it supports &lt;strong&gt;rcs&lt;/strong&gt; for version control of the changes
it makes. But if you have enabled it, you might be wondering how to
actually restore configuration files with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you work with Gentoo, you're probably aware of tools like
&lt;strong&gt;etc-update&lt;/strong&gt; and &lt;strong&gt;dispatch-conf&lt;/strong&gt;. If you use &lt;strong&gt;dispatch-conf&lt;/strong&gt;, you
might know that it supports &lt;strong&gt;rcs&lt;/strong&gt; for version control of the changes
it makes. But if you have enabled it, you might be wondering how to
actually restore configuration files with it.&lt;/p&gt;
&lt;p&gt;Well, &lt;strong&gt;dispatch-conf&lt;/strong&gt; stores its version control information in
&lt;code&gt;/etc/config-archive&lt;/code&gt;. To restore a configuration file to a previous
version, first find out what versions there are in the version control
system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ rlog -zLT /etc/config-archive/etc/protocols,v
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output of the &lt;strong&gt;rlog&lt;/strong&gt; command should allow you to find the revision
you are interested in. The -zLT option displays date/time in the current
timezone (instead of UTC). Once you have found the revision you are
looking for, restore the file by redirecting the output of the &lt;strong&gt;co&lt;/strong&gt;
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ co -p -r1.1.1 /etc/config-archive/etc/protocols,v &amp;gt; /etc/protocols
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Gentoo"></category></entry><entry><title>Updates on the Gentoo Hardened SELinux state</title><link href="http://192.168.1.71:8000/2011/03/updates-on-the-gentoo-hardened-selinux-state/" rel="alternate"></link><published>2011-03-02T23:09:00+01:00</published><updated>2011-03-02T23:09:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-03-02:/2011/03/updates-on-the-gentoo-hardened-selinux-state/</id><summary type="html">&lt;p&gt;For those following the progress of SELinux support in Gentoo
Hardened...&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;hardened-development&lt;/em&gt; overlay, the &lt;code&gt;selinux-base-policy&lt;/code&gt; package
has been updated, hopefully fixing a nasty issue with support for the
targeted policy (up to today, I only tested strict policies so I missed
that). It also fixes an issue with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For those following the progress of SELinux support in Gentoo
Hardened...&lt;/p&gt;
&lt;p&gt;In the &lt;em&gt;hardened-development&lt;/em&gt; overlay, the &lt;code&gt;selinux-base-policy&lt;/code&gt; package
has been updated, hopefully fixing a nasty issue with support for the
targeted policy (up to today, I only tested strict policies so I missed
that). It also fixes an issue with dhcpcd not functioning properly. If
you use SELinux and don't have the &lt;em&gt;hardened-development&lt;/em&gt; overlay yet,
please use &lt;strong&gt;layman -a hardened-development&lt;/strong&gt;, synchronize (&lt;strong&gt;layman
-S&lt;/strong&gt;) and update your system to get the latest base policy. Also, please
report bugs on &lt;a href="https://bugs.gentoo.org"&gt;Gentoo Bugzilla&lt;/a&gt; (and perhaps
immediately add &lt;em&gt;selinux@gentoo.org&lt;/em&gt; to the Cc-list.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://goo.gl/DlHJD"&gt;Gentoo Hardened SELinux Handbook&lt;/a&gt;, still in
draft, has gotten a few updates. It now documents the use of the
&lt;strong&gt;gentoo_try_dontaudit&lt;/strong&gt; boolean which the Gentoo Hardened SELinux
developers use to hide potential cosmetic denials. If they are truly
cosmetic, they will be reported upstream later to be included in the
reference policy. If they are not, then users can simple toggle the
boolean (&lt;strong&gt;setsebool gentoo_try_dontaudit off&lt;/strong&gt;) to see the denials
that the developers hid.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://goo.gl/2U0Zr"&gt;Gentoo Hardened SELinux Policy&lt;/a&gt; now includes
the naming convention on the SELinux policy packages with a very short
explanation why this particular convention was chosen. The discussion on
it can be found on the
&lt;a href="http://news.gmane.org/gmane.linux.gentoo.hardened"&gt;gentoo-hardened&lt;/a&gt;
mailing list and the last &lt;a href="http://article.gmane.org/gmane.linux.gentoo.hardened/4765"&gt;online
meeting&lt;/a&gt;.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>"Gentoo in production?" Oh no, not again...</title><link href="http://192.168.1.71:8000/2011/01/gentoo-in-production-oh-no-not-again/" rel="alternate"></link><published>2011-01-21T21:59:00+01:00</published><updated>2011-01-21T21:59:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2011-01-21:/2011/01/gentoo-in-production-oh-no-not-again/</id><summary type="html">&lt;p&gt;I think it is that time of the year again, where people get some crazy
ideas. Again I discussed the what must be the gazillion-th time I've
been asked "Do you think Gentoo is ripe for use in production?".
Honestly, I always tell myself to ignore those discussions but I've …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I think it is that time of the year again, where people get some crazy
ideas. Again I discussed the what must be the gazillion-th time I've
been asked "Do you think Gentoo is ripe for use in production?".
Honestly, I always tell myself to ignore those discussions but I've
never managed to actually do that - ignore, that is. So to give me some
leverage the gazillion-th plus one time I get that same question, let me
vent my opinion about the subject right here and allow me to hurdle the
permalink to whomever tries to start another heated discussion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your question is wrong&lt;/strong&gt;. It is never about a technology being "ripe
enough" or "stable enough". What you need to ask yourself (or get
acquainted with) is what you, your organization or your company expects
from a technology to be introduced in your (organization/company)
infrastructure. This includes, but is not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What kind of &lt;em&gt;bugfixing&lt;/em&gt; and &lt;em&gt;security fixing&lt;/em&gt; support do you want
    for the technology?&lt;/li&gt;
&lt;li&gt;What kind of &lt;em&gt;knowledge support&lt;/em&gt; do you want for the technology?&lt;/li&gt;
&lt;li&gt;How important is &lt;em&gt;certification&lt;/em&gt; of (other) technologies with
    respect to the technology or operating system?&lt;/li&gt;
&lt;li&gt;How far do you implement an operating systems' &lt;em&gt;release cycle&lt;/em&gt;?&lt;/li&gt;
&lt;li&gt;What level of experience do you expect from your &lt;em&gt;internal support
    team&lt;/em&gt; (or yourself)?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see, the questions are not about technology itself or pretty
features. It is about how you work with that technology. And one
shouldn't look at these questions as having a single phrase as answer.
To properly answer the first question alone, you'll need to take a look
at delivery times (how fast do you want a bug to be fixed), follow-up
(how fast does the technology issue security announcements, do they
follow CVE closely, ...), responsibilities, eventual legal or
contractual obligations you might need to cover your ___, the ability
of the provider to reproduce issues etc.&lt;/p&gt;
&lt;p&gt;Internal experience is also not to be underestimated. How quick do you
(organization/company) want to be able to resolve problems? How
experienced are you with analyzing logs? How well are you able to
integrate a technology within your existing architecture? What auditing
does you(r organization/company) require and do you know how to get that
from the technology?&lt;/p&gt;
&lt;p&gt;I mean, come on, you're talking about "production". That's not the same
as saying "I've installed it for my parents".&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Why I have backups</title><link href="http://192.168.1.71:8000/2010/12/why-i-have-backups/" rel="alternate"></link><published>2010-12-30T20:06:00+01:00</published><updated>2010-12-30T20:06:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2010-12-30:/2010/12/why-i-have-backups/</id><summary type="html">&lt;p&gt;You often read stories about people who have data loss and did not keep
any (recent) backups, and are now fully equipped with a state-of-the-art
backup mechanism. So no - no such failure story here but an example why
backups are important.&lt;/p&gt;
&lt;p&gt;Yesterday I had a vicious RAID/LVM failure. Due …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You often read stories about people who have data loss and did not keep
any (recent) backups, and are now fully equipped with a state-of-the-art
backup mechanism. So no - no such failure story here but an example why
backups are important.&lt;/p&gt;
&lt;p&gt;Yesterday I had a vicious RAID/LVM failure. Due to my expeditions in the
world of SELinux, for some odd reason when I booted with SELinux
enforcing on, my RAID-1 where an LVM volume group (with &lt;code&gt;/usr&lt;/code&gt;, &lt;code&gt;/var&lt;/code&gt;,
&lt;code&gt;/opt&lt;/code&gt; and &lt;code&gt;/home&lt;/code&gt;) was hosted (coincidentally the only RAID-1 with 1.2
metadata version, the others are at 0.90) suddenly decided to split
itself into two (!) degraded RAID-1 systems: &lt;code&gt;/dev/md126&lt;/code&gt; and
&lt;code&gt;/dev/md127&lt;/code&gt;. During detection, LVM found two devices (the two RAID
metadevices) but with the same meta data on it (same physical volume
signature), so randomly picked one as its physical volume.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Found duplicate PV Lgrl5nNfenRUg9bIwM20q1hfMrWylyyL: using /dev/md126 not /dev/md127&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Result: after a few reboots (no, I didn't notice it at first - why would
I, everything seemed to work well so I didn't look at the dmesg output)
I started noticing that changes I made were suddenly gone (for instance,
ebuild updates that I made) which almost immediately triggers for me a
"&lt;em&gt;remount read-only, check logs and take emergency backup&lt;/em&gt;"-adrenaline
surge. And then I noticed that there were I/O errors in my logs,
together with the previously mentioned error message. So I quickly made
an emergency backup of my most critical file system locations (&lt;code&gt;/home&lt;/code&gt;
as well as &lt;code&gt;/etc&lt;/code&gt; and some files in &lt;code&gt;var&lt;/code&gt;) and then tried to fix the
problem (without having to reinstall everything).&lt;/p&gt;
&lt;p&gt;The first thing I did - and that might have been the trigger for real
pandemonium - was to try and found out which RAID (md126 or md127) is
being used. The &lt;strong&gt;vgdisplay&lt;/strong&gt; and other commands showed me that only
&lt;code&gt;md127&lt;/code&gt; was used at that time. Also, &lt;code&gt;/proc/mdstats&lt;/code&gt; showed that &lt;code&gt;md126&lt;/code&gt;
was in a &lt;em&gt;auto read-only&lt;/em&gt; state, meaning it wasn't touched since my
system booted. So I decided to drop &lt;code&gt;md126&lt;/code&gt; and add its underlying
partitions to the &lt;code&gt;md127&lt;/code&gt; RAID device. Once added, I would expect that
the degraded array would start syncing, but no: the moment the partition
was added, the RAID was shown to be fully operational.&lt;/p&gt;
&lt;p&gt;So I rebooted my system, only to find out it couldn't mount &lt;code&gt;md127&lt;/code&gt;.
File system checks, duplicate inodes, deleted blocks, the whole shebang.
Even running multiple &lt;strong&gt;fsck -y&lt;/strong&gt; commands didn't help. The volume group
was totally corrupted and my system almost totally gone. At that time,
it was around 1am and knowing I wouldn't be able to sleep before my
system is back operational - and knowing that I cannot sleep long as my
daughter will wake up at her usual hour - I decided to remove the array,
recreate it and pull back my original backup (not the one I just took as
it might already have corrupted files). As I take daily backups (they
are made at 6 o'clock or during first boot, whatever comes first) I
quickly had most of my &lt;code&gt;/home&lt;/code&gt; recovered (the backup doesn't take
caches, git/svn/cvs snapshots etc. into account). A quick delta check
between the newly restored &lt;code&gt;/home&lt;/code&gt; and the backup I took yielded a few
files which I have changed since, so those were recovered as well. But
it also showed lost changes, lost files and just corrupted files so I'm
glad I have my original backups.&lt;/p&gt;
&lt;p&gt;I don't take backups of my &lt;code&gt;/usr&lt;/code&gt; as it is only a system-rebuild away.
As &lt;code&gt;/etc&lt;/code&gt; wasn't corrupted, I recovered my &lt;code&gt;/var&lt;/code&gt;, threw in a Gentoo
stage snapshot (but not the full tarball as that would overwrite clean
files) and ran a &lt;strong&gt;emerge -pe world --keep-going&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;When I woke up, my system was almost fully recovered with only a few
failed installs - which were identified and fixed in the next hour.&lt;/p&gt;
&lt;p&gt;Knowing that my backup system is rudimentary (an &lt;strong&gt;rsync&lt;/strong&gt; command which
uses hardlinks for incremental updates towards a second system plus a
secure file upload to a remote system for really important files) I was
quite happy to have only lost a few changes which I neglected to
commit/push. So, what did I learn?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep taking backups (and perhaps start using binpkg for fast
    recovery),&lt;/li&gt;
&lt;li&gt;Use 0.90 raid metadata version,&lt;/li&gt;
&lt;li&gt;Commit often, and&lt;/li&gt;
&lt;li&gt;Install a log checking tool that warns me the moment something weird
    might be occurring&lt;/li&gt;
&lt;/ul&gt;</content><category term="Gentoo"></category></entry><entry><title>Switching to hardened</title><link href="http://192.168.1.71:8000/2010/09/switching-to-hardened/" rel="alternate"></link><published>2010-09-12T13:41:00+02:00</published><updated>2010-09-12T13:41:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2010-09-12:/2010/09/switching-to-hardened/</id><summary type="html">&lt;p&gt;Yesterday (and this night) I successfully converted my system to a
&lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; system. In my case, this
currently means that
&lt;a href="http://www.gentoo.org/proj/en/hardened/pax-quickstart.xml"&gt;PaX&lt;/a&gt; has
been enabled and I am currently running the system (which is an x86_64
laptop) with &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/"&gt;SELinux&lt;/a&gt;
in permissive mode (so it won't enforce the policies yet, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday (and this night) I successfully converted my system to a
&lt;a href="http://hardened.gentoo.org"&gt;Gentoo Hardened&lt;/a&gt; system. In my case, this
currently means that
&lt;a href="http://www.gentoo.org/proj/en/hardened/pax-quickstart.xml"&gt;PaX&lt;/a&gt; has
been enabled and I am currently running the system (which is an x86_64
laptop) with &lt;a href="http://www.gentoo.org/proj/en/hardened/selinux/"&gt;SELinux&lt;/a&gt;
in permissive mode (so it won't enforce the policies yet, but report
violations so I can see in my logs if enforcement is possible or not).
The permissive mode will be on for quite some time I would assume, as
getting SELinux active on the system involved quite a few \~amd64
packages and I'm not too fond of using that branch (I'm more of a
stability guy).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Listing files of (not) installed software</title><link href="http://192.168.1.71:8000/2010/06/listing-files-of-not-installed-software/" rel="alternate"></link><published>2010-06-05T10:54:00+02:00</published><updated>2010-06-05T10:54:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2010-06-05:/2010/06/listing-files-of-not-installed-software/</id><summary type="html">&lt;p&gt;Everyone that has been using Gentoo for a while now knows about tools
such as &lt;strong&gt;qlist&lt;/strong&gt; that show you the list of files installed by an
(installed) package, or &lt;strong&gt;qfile&lt;/strong&gt; that allows you to find which package
provided a particular file on your system.&lt;/p&gt;
&lt;p&gt;One thing lacking is to be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Everyone that has been using Gentoo for a while now knows about tools
such as &lt;strong&gt;qlist&lt;/strong&gt; that show you the list of files installed by an
(installed) package, or &lt;strong&gt;qfile&lt;/strong&gt; that allows you to find which package
provided a particular file on your system.&lt;/p&gt;
&lt;p&gt;One thing lacking is to be able to find out which package &lt;em&gt;would&lt;/em&gt;
provide a file. Unlike the previous tools, this tool cannot rely on the
information found on your system as the package isn't installed yet.&lt;/p&gt;
&lt;p&gt;There have been projects in the past that attempted to provide such
functionality, almost always through an online queryable database. Many
haven't survived, due to too high expectations or little server
infrastructure resources. But it seems like
&lt;a href="http://www.portagefilelist.de"&gt;PortageFileList&lt;/a&gt; is to stay for a while.&lt;/p&gt;
&lt;p&gt;The project not only offers an online interface for querying
information, it also provides a package (&lt;code&gt;app-portage/pfl&lt;/code&gt;) that allows
you to query their infrastructure from the command line. The package
provides a tool called &lt;strong&gt;e-file&lt;/strong&gt; which supports SQL-like syntax for the
queries.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~$ e-file '%bin/xdm'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The above command will then display, using the well-known emerge/Portage
output, which package provides the file (as well as which file was
matched by the query).&lt;/p&gt;
&lt;p&gt;Definitely a nice tool to have around. Thanks guys of
&lt;a href="http://www.portagefilelist.de"&gt;PortageFileList&lt;/a&gt;!&lt;/p&gt;</content><category term="Gentoo"></category><category term="gentoo"></category></entry><entry><title>License support in Gentoo</title><link href="http://192.168.1.71:8000/2010/02/license-support-in-gentoo/" rel="alternate"></link><published>2010-02-16T00:10:00+01:00</published><updated>2010-02-16T00:10:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2010-02-16:/2010/02/license-support-in-gentoo/</id><summary type="html">&lt;p&gt;It's a bit sad that Gentoo didn't promote this more, but Gentoo users
now have support for license-based masking.&lt;/p&gt;
&lt;p&gt;What does this mean? Well, previously, Gentoo already supported various
masking reasons (like stable versus staging - the x86 versus \~x86 saga,
package.mask'ing - for security reasons or critical bugs, ...). Now, a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's a bit sad that Gentoo didn't promote this more, but Gentoo users
now have support for license-based masking.&lt;/p&gt;
&lt;p&gt;What does this mean? Well, previously, Gentoo already supported various
masking reasons (like stable versus staging - the x86 versus \~x86 saga,
package.mask'ing - for security reasons or critical bugs, ...). Now, a
new feature is added: license masking.&lt;/p&gt;
&lt;p&gt;By default, Portage accepts all non-EULA licenses. If a package uses a
EULA license, you'll get a failure message stating that the license is
'masked'.&lt;/p&gt;
&lt;p&gt;Now, what good does this do for users? Well, you can now ask Portage
only to accept certain licenses (like &lt;code&gt;@FSF-APPROVED&lt;/code&gt;, which is a list
of all FSF-approved licenses) and deny the installation of others. Nice,
isn't it?&lt;/p&gt;
&lt;p&gt;I've added information regarding package license states (and the global
as well as per-package unmasking support through
/etc/portage/package.license) to the &lt;a href="http://swift.siphos.be/linux_sea"&gt;Linux
Sea&lt;/a&gt; document.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Added quota information</title><link href="http://192.168.1.71:8000/2009/09/added-quota-information/" rel="alternate"></link><published>2009-09-01T23:19:00+02:00</published><updated>2009-09-01T23:19:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2009-09-01:/2009/09/added-quota-information/</id><summary type="html">&lt;p&gt;I've added quota support information to the &lt;a href="http://swift.siphos.be/linux_sea/"&gt;Linux
Sea&lt;/a&gt; book as well as information
about the eclean command for cleaning distfiles and packages. The part
on building a Linux kernel has been moved into its own
&lt;a href="http://swift.siphos.be/linux_sea/ch07.html"&gt;chapter&lt;/a&gt;, the chapter on
&lt;a href="http://swift.siphos.be/linux_sea/ch08.html"&gt;hardware support&lt;/a&gt; now has a
bit more information about dealing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've added quota support information to the &lt;a href="http://swift.siphos.be/linux_sea/"&gt;Linux
Sea&lt;/a&gt; book as well as information
about the eclean command for cleaning distfiles and packages. The part
on building a Linux kernel has been moved into its own
&lt;a href="http://swift.siphos.be/linux_sea/ch07.html"&gt;chapter&lt;/a&gt;, the chapter on
&lt;a href="http://swift.siphos.be/linux_sea/ch08.html"&gt;hardware support&lt;/a&gt; now has a
bit more information about dealing with sound cards (ALSA support) and
will contain information about sound servers in the near future. This
chapter will also be used to configure the various other hardware things
as they come by (printers, scanners, ...).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Draft PDF for Linux Sea</title><link href="http://192.168.1.71:8000/2009/08/draft-pdf-for-linux-sea/" rel="alternate"></link><published>2009-08-10T22:27:00+02:00</published><updated>2009-08-10T22:27:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2009-08-10:/2009/08/draft-pdf-for-linux-sea/</id><content type="html">&lt;p&gt;I've added a draft &lt;a href="http://swift.siphos.be/linux_sea/linux_sea.pdf"&gt;PDF&lt;/a&gt;
version of my Linux Sea document. If you don't mind the A4 papersize and
the bad typesetting of the text boxes (I still have lots of overflows to
correct) it is quite usable.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Linux Sea is progressing slowly but surely</title><link href="http://192.168.1.71:8000/2009/02/linux-sea-is-progressing-slowly-but-surely/" rel="alternate"></link><published>2009-02-10T23:33:00+01:00</published><updated>2009-02-10T23:33:00+01:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2009-02-10:/2009/02/linux-sea-is-progressing-slowly-but-surely/</id><summary type="html">&lt;p&gt;My everlasting document, &lt;a href="http://swift.siphos.be/linux_sea"&gt;Linux Sea&lt;/a&gt;,
is progressing slowely but surely. I've started a few new chapters and
also initiated a chapter on &lt;a href="http://swift.siphos.be/linux_sea/ch15.html"&gt;Installing
Gentoo&lt;/a&gt; (which is more a
shortlist of tasks with pointers to earlier chapters).&lt;/p&gt;
&lt;p&gt;I also took a different CSS (docbook.css file used by the FreeBSD
handbook …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My everlasting document, &lt;a href="http://swift.siphos.be/linux_sea"&gt;Linux Sea&lt;/a&gt;,
is progressing slowely but surely. I've started a few new chapters and
also initiated a chapter on &lt;a href="http://swift.siphos.be/linux_sea/ch15.html"&gt;Installing
Gentoo&lt;/a&gt; (which is more a
shortlist of tasks with pointers to earlier chapters).&lt;/p&gt;
&lt;p&gt;I also took a different CSS (docbook.css file used by the FreeBSD
handbook) as it looks a lot better.&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Adding exercises and resources</title><link href="http://192.168.1.71:8000/2008/09/adding-exercises-and-resources/" rel="alternate"></link><published>2008-09-15T22:59:00+02:00</published><updated>2008-09-15T22:59:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2008-09-15:/2008/09/adding-exercises-and-resources/</id><summary type="html">&lt;p&gt;As stated earlier, I'm now focusing on the existing content of my
(work-in-progress) ebook called Linux Sea
(&lt;a href="http://dev.gentoo.org/~swift/linux_sea.pdf"&gt;PDF&lt;/a&gt;,
&lt;a href="http://dev.gentoo.org/~swift/linux_sea/"&gt;HTML&lt;/a&gt;). I'm going to add more
text where appropriate, add exercises to each chapter as well as
references to online resources.&lt;/p&gt;
&lt;p&gt;When that's finished, I'll probably be writing a chapter on installing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As stated earlier, I'm now focusing on the existing content of my
(work-in-progress) ebook called Linux Sea
(&lt;a href="http://dev.gentoo.org/~swift/linux_sea.pdf"&gt;PDF&lt;/a&gt;,
&lt;a href="http://dev.gentoo.org/~swift/linux_sea/"&gt;HTML&lt;/a&gt;). I'm going to add more
text where appropriate, add exercises to each chapter as well as
references to online resources.&lt;/p&gt;
&lt;p&gt;When that's finished, I'll probably be writing a chapter on installing
Gentoo Linux as that's a major end-user topic that isn't discussed yet
(but luckily, there's still the &lt;a href="http://www.gentoo.org/doc/en/handbook/"&gt;Gentoo
Handbook&lt;/a&gt;).&lt;/p&gt;</content><category term="Gentoo"></category></entry><entry><title>Linux Sea - Updates on graphical environment chapter</title><link href="http://192.168.1.71:8000/2008/08/linux-sea-updates-on-graphical-environment-chapter/" rel="alternate"></link><published>2008-08-21T22:08:00+02:00</published><updated>2008-08-21T22:08:00+02:00</updated><author><name>Sven Vermeulen</name></author><id>tag:192.168.1.71,2008-08-21:/2008/08/linux-sea-updates-on-graphical-environment-chapter/</id><summary type="html">&lt;p&gt;I've updated the chapter on &lt;a href="http://dev.gentoo.org/~swift/linux_sea/c2990.htm"&gt;graphical
environments&lt;/a&gt; a bit to
reflect how applications, window managers, X server and widget toolkits
work together. Hopefully it isn't a big lie that I wrote there ;-)&lt;/p&gt;
&lt;p&gt;I'll probably be doing a bit of clean ups the coming days before I start
out with more …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've updated the chapter on &lt;a href="http://dev.gentoo.org/~swift/linux_sea/c2990.htm"&gt;graphical
environments&lt;/a&gt; a bit to
reflect how applications, window managers, X server and widget toolkits
work together. Hopefully it isn't a big lie that I wrote there ;-)&lt;/p&gt;
&lt;p&gt;I'll probably be doing a bit of clean ups the coming days before I start
out with more chapters...&lt;/p&gt;</content><category term="Gentoo"></category></entry></feed>