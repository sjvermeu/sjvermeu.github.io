<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - Architecture</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Mon, 08 Nov 2021 20:00:00 +0100</lastBuildDate><item><title>Hybrid cloud can be very complex</title><link>https://blog.siphos.be/2021/11/hybrid-cloud-can-be-very-complex/</link><description>&lt;p&gt;I am not an advocate for hybrid cloud architectures. Or at least, not the
definition for hybrid cloud that assumes one (cloud or on premise) environment
is just an extension of another (cloud or on premise) environment. While such
architectures seem to be simple and fruitful - you can easily add some capacity
in the other environment to handle burst load - they are a complex beast to
tame.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hybrid cloud complexity starts with the definition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The first thing that I've already learned is not to use "hybrid cloud" without
defining what I mean. And if somebody else uses it (or a research article), I
will frantically try to get a definition on what the person or article implies
with the term.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azure.microsoft.com/en-us/overview/what-is-hybrid-cloud-computing/"&gt;Microsoft&lt;/a&gt;
for instance defines hybrid cloud as "a computing environment that combines an
on-premises datacenter with a public cloud, allowing data and applications to
be shared between them."&lt;/p&gt;
&lt;p&gt;This definition isn't unambiguous. What does Microsoft mean with "sharing"? If
I expose an application and/or its data through APIs that are shielded and
independently managed in each environment, and allow for interaction between
those APIs, does that still entail a hybrid cloud architecture? Because if that
is the case, then I want to know what other cloud interaction architectures
Microsoft thinks exist besides hybrid cloud.&lt;/p&gt;
&lt;p&gt;I do think that the intention of Microsoft's definition is that the cloud
hosting environments are considered as "similar enough" to the on premise
environment, and managed in the same way (some cloud specifics
notwithstanding), as inspired by their claim that hybrid cloud allow
"businesses [to] use the cloud to instantly scale capacity up or down to handle
excess capacity" and that organizations using hybrid cloud architectures "are
able to use many of the same security mreasures that they use in their existing
on-premises infrastructure".&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gartner.com/en/information-technology/glossary/hybrid-cloud-computing"&gt;Gartner&lt;/a&gt;
defines hybrid cloud computing as "policy-based and coordinated service
provisioning, use and management across a mixture of internal and external
cloud services." That doesn't narrow things down, and in &lt;a href="https://www.gartner.com/document/3956442"&gt;(paywalled) research
articles&lt;/a&gt;, Gartner does express that
"hybrid cloud is a vague term that does not allow enough granularity for
implementation planning by cloud and infrastructure professionals".&lt;/p&gt;
&lt;p&gt;&lt;a href="https://go.forrester.com/blogs/13-08-02-cloud_management_in_a_hybrid_cloud_world/"&gt;Forrester&lt;/a&gt;
follows a definition that is very generic, as "a cloud service connected to any
other corporate resource" makes it a hybrid cloud service. Regardless of how it
is infrastructurally or application-wise integrated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ibm.com/cloud/learn/hybrid-cloud"&gt;IBM&lt;/a&gt; declares hybrid cloud as
"integrates public cloud services, private cloud services and on-premises
infrastructure and provides orchestration, management and application
portability across all three. The result is a single, unified and flexible
distributed computing environment [...]"&lt;/p&gt;
&lt;p&gt;This definition does seem to imply an architecture that considers all hosting
environments as infrastructurally equal (as they see the sum of all
environments as a single, unified environment).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Cloud_computing#Hybrid_cloud"&gt;Wikipedia&lt;/a&gt;
mentions that hybrid cloud "is a composition of a public cloud and a private
environment [...] that remain distinct entities but are bound together,
offering the benefits of multiple deployment models." Such a definition leaves
the implementation details open, as it boils down to any architecture where you
mix such hosting environments.&lt;/p&gt;
&lt;p&gt;For me, a &lt;strong&gt;hybrid cloud on infrastructure level&lt;/strong&gt; implies that the different
environments are similarly or equally managed, using the same processes,
principles and most often even tooling, and that application teams have little
impact on where their application (or application components) are hosted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The promise of hybrid cloud towards business&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When business decision makers hear (or are confronted with) hybrid cloud, they
are often told that it a perfect way to deal with capacity management. Whereas
a pure on-premise deployment model requires you to purchase and deploy enough
capacity to deal with your maximum workload (and even more, if you need to
consider disaster recovery situations), a hybrid cloud could simply "add more
resources as needed, without requiring the application to be refactored for
cloud-native or cloud hosting".&lt;/p&gt;
&lt;p&gt;Let's make this more tangible with an example: a simple ticket sales service,
which consists out of a website (frontend) and an API (which is backend-alike).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ticket sales service overview" src="https://blog.siphos.be/images/202111/hybridcloud-ticketsales-overview.png"/&gt;&lt;/p&gt;
&lt;p&gt;The company that manages this ticket sales application is currently fully
on-premise, with a simple deployment model where the front and backend are
hosted on a web application hosting cluster (which could be a Kubernetes
cluster), and the backend also uses a database.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ticket sales high level infrastructure" src="https://blog.siphos.be/images/202111/hybridcloud-ticketsales-hlinfra.png"/&gt;&lt;/p&gt;
&lt;p&gt;Ticket sales are seasonally bound, and often ticket sales platforms are
services offered to the specific events. Suppose a major event wants to sell
its tickets through this ticket sale application, and you are afraid that the
website part will not be able to deal with the load, then you could use a
hybrid cloud setup to enable bursting on the front-end side.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ticket sales high level bursting" src="https://blog.siphos.be/images/202111/hybridcloud-ticketsales-burstfrontend.png"/&gt;&lt;/p&gt;
&lt;p&gt;Of course, this is just one of many target architectures that might solve the
capacity challenge, and there is no reason to believe the API itself wouldn't
be overloaded as well. But let's stick to this simple example.&lt;/p&gt;
&lt;p&gt;From a business perspective, this all sounds very fun and promising. There
seems to be no initial investment needed, and the capacity of the cloud is
limitless, not?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network investments needed for such hybrid cloud&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, as always, the devil is in the details. If we were to pursue this
architecture, we need to have the public cloud and the on premise environment
properly connected. You don't want to use regular Internet access, because the
intention is to see these environments as a single, unified environment, and
you don't open up your internal systems directly to the Internet either do you?&lt;/p&gt;
&lt;p&gt;So you need to architect the public cloud usage to be as private as possible,
and then connect that environment with your on premise network, preferably
through a high speed private link. Sure, you can use VPN over internet, but
with a private link you have more guarantees on the latency for instance, and
for many cloud environments such private link interactions are also bringing
benefits for data ingress/egress (cheaper for you). They also generally have
better SLAs (although larger environments will have very high internet-related
SLAs) and do not require the same security protection measures (like anti-DDoS
protection).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ticket sales network connectivity" src="https://blog.siphos.be/images/202111/hybridcloud-ticketsales-connectivity.png"/&gt;&lt;/p&gt;
&lt;p&gt;In the design, we assume that the end users still first go through your on
premise environment, as the perimeter protections you have in place for
instance still need to apply. Perimeter protections are not just simple
firewall capabilities. It includes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;anti-DDoS measures&lt;/li&gt;
&lt;li&gt;context gathering for, and applying coarse-grained access controls&lt;/li&gt;
&lt;li&gt;intrusion detection and prevention&lt;/li&gt;
&lt;li&gt;anti-malware protection&lt;/li&gt;
&lt;li&gt;application attack prevention&lt;/li&gt;
&lt;li&gt;network traffic filtering&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A perimeter is meant to act as a first line of defense. However, when
integrating networks from external sites, you still need some protection
measures applied (shown as external site protection in the diagram), as you are
handing off some ownership to other parties and thus want to have some
safeguards in place.&lt;/p&gt;
&lt;p&gt;Because we still have all traffic through the perimeter, burst loads can still
jeopardize the service offering itself. If the perimeter, internet line, or the
load balancer that spreads the load across the frontends is saturated, then
your service will go down. The hybrid cloud setup used in this example wont
help out here.&lt;/p&gt;
&lt;p&gt;Second, the high speed private link will need to be able to deal with not only
the load of the user to the frontend (and back), but also between the frontend
and backend. And if you were to support bursting the backend application to the
public cloud as well, then it needs to deal with the load between this
application and the database.&lt;/p&gt;
&lt;p&gt;The link is also often not something you set up yourself between you and the
public cloud. You will need intermediate parties to support this, as often this
first requires you to have private links to certain larger networks, and then
have this larger network set up a private link to the point of presence where
you want to 'attach' to that public cloud environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Management complexity rises with hybrid cloud&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The investments do not stop just at the network connectivity. You will need to
look into managing the web application (such as deployment and releases),
servers (bootstrapping, updating, maintaining), and other network areas.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hybrid cloud management complexity" src="https://blog.siphos.be/images/202111/hybridcloud-ticketsales-management.png"/&gt;&lt;/p&gt;
&lt;p&gt;Let's start with the web application management. Your existing management
systems will now need to deal with the public cloud as well. Your application
needs to be deployed on multiple clusters, and you will need to reconfigure the
load balancers in front to know where these clusters are. Unlike the
pre-installed environments on premise, public cloud is more dynamic (you want
to use it for bursting after all), so the target IP addresses might change (or
you set up fixed IP addresses, but that costs money even when you don't use
them).&lt;/p&gt;
&lt;p&gt;You will need to deal with deployments that can succeed left and fail right, or
vice-versa. While this is not impossible to deal with, the current way of
working might not support that yet because, you know, you never had to deal
with it.&lt;/p&gt;
&lt;p&gt;What about tracking performance and user experience? Your application
management suite might not know about public cloud setups yet, and once
included, it might find that there is latency impact. But can you just use this
APM suite in the public cloud? Perhaps your company has a site license which
does not include other locations. Or it requires per-node licenses, and require
each node to be assigned a license for 30 days at least. In case of burst
situations, you might only have these systems up for a few hours, and with the
next action, these will be new nodes with new licenses.&lt;/p&gt;
&lt;p&gt;Also on the server management level you might find many obstacles. Your on
premise system might use a certain hypervisor integration (e.g. using VMware
vCenter API) which you don't have in the public cloud. So you need to adapt the
management system anyway, which means you need to develop your management
systems to create a hybrid cloud, rather than reap the benefits of hybrid cloud
directly.&lt;/p&gt;
&lt;p&gt;Your servers might use many control systems that have the same licensing issues
as mentioned earlier. Or they are latency-bound, causing either reachability
issues, or requiring you to adapt the infrastructure architecture of these
management systems to be aware of the public cloud.&lt;/p&gt;
&lt;p&gt;Also on network management level it isn't just about connectivity. Your
firewall management might not see the public cloud firewalls automatically (or
doesn't support it), or your current network design doesn't allow for the
bursting of network environments (subnets) in a sufficient dynamic manner.&lt;/p&gt;
&lt;p&gt;The more you consider this hybrid cloud situation, the more you find out that
you will need to revisit all management, support and control systems for this
setup. And you know what is hard to do in an IT environment? Reassessing &lt;em&gt;all&lt;/em&gt;
management, support and control systems. You are effectively redesigning your
entire IT environment, and that is exactly what the promise of "hybrid cloud"
wanted to take away. Or at least, the promise that is done to certain decision
makers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vendors know that it is complex (and are happy because of it)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most of the IT vendors that are related to the management, support and control
of your infrastructure, will say that management in hybrid cloud is hard: &lt;a href="https://www.redhat.com/en/blog/operating-hybrid-architecture-and-managing-complexity"&gt;Red
Hat&lt;/a&gt;
for instance mentions in its container-related article that "Saying that
Kubernetes makes it possible to build a cross-environment management layer
doesn't mean it's easy". &lt;a href="https://blogs.arubanetworks.com/solutions/easing-the-complexity-of-hybrid-cloud/"&gt;Aruba
Networks&lt;/a&gt;
(part of PHE) mentions that "the major drawback is complex management of these
platforms". Consulting firms concur as well, with for instance David Linthicum,
Chief Cloud Strategy Officer of Deloitte Consulting, mentioning in &lt;a href="https://techbeacon.com/enterprise-it/4-things-you-need-know-about-managing-complex-hybrid-clouds"&gt;4 things
you need to know about managing complex hybrid
clouds&lt;/a&gt;
that "hybrid clouds are usually complex, hard to build, and hard to manage".&lt;/p&gt;
&lt;p&gt;Of course, IT vendors will be happy to tell you that it is hard (and for once I
concur), because they will then follow up with how their shiny tool supports
hybrid cloud much better than your existing ones. IT vendors know that an
infrastructural hybrid cloud means a redesign of (many parts of) your IT
architecture, so there is big money involved.&lt;/p&gt;
&lt;p&gt;Hence, it is important that hybrid cloud endeavours are assessed completely,
and that your business decision makers hold off with the decision until the
full scope of this exercise is known (or at least, you have a decent ballpark
estimate on the impact, not just financially, but also time-to-market). &lt;/p&gt;
&lt;p&gt;So, what are all the areas you need to consider? That's difficult to state, but
hopefully the list below can help you out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How are your servers bootstrapped (initial deployment)? Can this interact
  with the cloud APIs to do the same in the cloud, or will you need to adapt
  your processes?&lt;/li&gt;
&lt;li&gt;Once your server is bootstrapped, how do you add software, libraries and
  other artefacts to it?&lt;/li&gt;
&lt;li&gt;What security services do you need on your systems? Anti-malware? Behavior
  analytics? Intrusion detection and prevention? Privileged access management
  utilities? &lt;/li&gt;
&lt;li&gt;How do your engineers and administrators follow-up on the systems? Monitoring
  approaches? Application performance management? Trace capabilities? Logging?&lt;/li&gt;
&lt;li&gt;Are there any control systems in place that manage the infrastructure? Are
  these control systems latency-sensitive?&lt;/li&gt;
&lt;li&gt;How do you deal with applicative releases? If you have CI/CD infrastructure
  in place, how would it deal with a burst environment? Does it have any
  dynamical detection capabilities?&lt;/li&gt;
&lt;li&gt;Can your support systems deal with more ephemeral infrastructure (capacity that
  is added for a few hours and then removed again)?&lt;/li&gt;
&lt;li&gt;Can your processes deal with ephemeral infrastructure?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Perhaps your current environment is already capable of dealing with such hybrid
clouds. While the situations I am confronted with at work support my view that
we need to apply a different 'hybrid' approach than the 'seamless
infrastructure' one (I like to see the environments progress more
independently, gradually move towards a &lt;a href="https://www.nist.gov/publications/zero-trust-architecture"&gt;zero
trust&lt;/a&gt; model), I do
believe that such hybrid cloud setups can work in certain situations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusions and feedback&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you do come across an intention declaration to move to a hybrid cloud (which
follows the infrastructural 'seamless' setup as implied in this post), make
sure you inform the stakeholders of the consequences. Show that a majority of
management, support and control systels are not designed nor capable of dealing
with this bursting out-of-the-box, and that this will require a significant IT
investment which might not be visible to the decision maker currently.&lt;/p&gt;
&lt;p&gt;If you have the time and resources, try to already build up the arguments for
it by focusing on your management, support and control systems, validating how
ready they would be, and what types of investments would be needed. Compare
this with a setup where the infrastructure side of the hybrid cloud still uses
separate environments, and where you manage each environment using the
strengths of that environment.&lt;/p&gt;
&lt;p&gt;Feedback? Comments? Don't hesitate to &lt;a href="mailto:sven.vermeulen@siphos.be"&gt;drop me an
email&lt;/a&gt;, or join the &lt;a href="https://twitter.com/infrainsight/status/TODO"&gt;discussion on
Twitter&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 08 Nov 2021 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-11-08:/2021/11/hybrid-cloud-can-be-very-complex/</guid><category>Architecture</category><category>hybrid</category><category>cloud</category></item><item><title>Transparent encryption is not a silver bullet</title><link>https://blog.siphos.be/2021/10/transparent-encryption-is-not-a-silver-bullet/</link><description>&lt;p&gt;Transparent encryption is relatively easy to implement, but without
understanding what it actually means or why you are implementing it, you will
probably make the assumption that this will prevent the data from being
accessed by unauthorized users. Nothing can be further from the truth.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 19 Oct 2021 08:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-10-19:/2021/10/transparent-encryption-is-not-a-silver-bullet/</guid><category>Architecture</category><category>encryption</category><category>transparent</category><category>luks</category><category>dm-crypt</category></item><item><title>Evaluating the zero trust hype</title><link>https://blog.siphos.be/2021/10/evaluating-the-zero-trust-hype/</link><description>&lt;p&gt;Security vendors are touting the benefits of "zero trust" as the new way to
approach security and security-conscious architecturing. But while there are
principles within the zero trust mindset that came up in the last dozen years,
most of the content in zero trust discussions is tied to age-old security
propositions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 05 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-10-05:/2021/10/evaluating-the-zero-trust-hype/</guid><category>Architecture</category><category>zero trust</category><category>security</category><category>enterprise</category><category>network security</category></item><item><title>Scale is a cloud threat</title><link>https://blog.siphos.be/2021/09/scale-is-a-cloud-threat/</link><description>&lt;p&gt;Not that long ago, a vulnerability was found in &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/"&gt;Microsoft Azure Cosmos
DB&lt;/a&gt;, a NoSQL SaaS database
within the Microsoft Azure cloud. The vulnerability, which is dubbed
&lt;a href="https://chaosdb.wiz.io/"&gt;ChaosDB&lt;/a&gt; by the &lt;a href="https://twitter.com/wiz_io"&gt;Wiz Research
Team&lt;/a&gt;, uses a vulnerability or misconfiguration in
the &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/cosmosdb-jupyter-notebooks"&gt;Jupyter Notebook
feature&lt;/a&gt;
within Cosmos DB. This vulnerability allowed an attacker to gain access to
other's Cosmos DB credentials. Not long thereafter, a second vulnerability
dubbed
&lt;a href="https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure"&gt;OMIGOD&lt;/a&gt;
showed that cloud security is not as simple as some vendors like you to believe.&lt;/p&gt;
&lt;p&gt;These vulnerabilities are a good example of how scale is a cloud threat. Companies
that do not have enough experience with public cloud might not assume this in
their threat models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 28 Sep 2021 17:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-28:/2021/09/scale-is-a-cloud-threat/</guid><category>Architecture</category><category>cloud</category><category>vulnerability</category></item><item><title>Naming conventions</title><link>https://blog.siphos.be/2021/09/naming-conventions/</link><description>&lt;p&gt;Naming conventions. Picking the right naming convention is easy if you are all
by yourself, but hard when you need to agree upon the conventions in a larger
group. Everybody has an opinion on naming conventions, and once you decide
on it, you do expect everybody to follow through on it.&lt;/p&gt;
&lt;p&gt;Let's consider why naming conventions are (not) important and consider a few
examples to help in creating a good naming convention yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 15 Sep 2021 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-15:/2021/09/naming-conventions/</guid><category>Architecture</category><category>naming</category></item><item><title>Location view of infrastructure</title><link>https://blog.siphos.be/2021/09/location-view-of-infrastructure/</link><description>&lt;p&gt;In this last post on the infrastructure domain, I cover the fifth and final
viewpoint that is important for an infrastructure domain representation, and
that is the &lt;em&gt;location view&lt;/em&gt;. As mentioned in previous posts, the viewpoints I
think are most representative of the infrastructure domain are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/09/process-view-of-infrastructure/"&gt;process view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;service view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;component view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;location view&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like with the component view, the location view is a layered approach. While I
initially wanted to call it the network view, "location" might be a broader
term that matches the content better. Still, it's not a perfect name, but the
name is less important than the content, not?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 07 Sep 2021 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-07:/2021/09/location-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>location</category><category>network</category><category>virtualization</category><category>protocol</category></item><item><title>Process view of infrastructure</title><link>https://blog.siphos.be/2021/09/process-view-of-infrastructure/</link><description>&lt;p&gt;In my &lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;previous post&lt;/a&gt;,
I started with the five different views that would support a good view of
what infrastructure would be. I believe these views (component, location,
process, service, and zoning) cover the breadth of the domain. The post also
described the component view a bit more and linked to previous posts I made (one
for &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;services&lt;/a&gt;, another for
&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The one I want to tackle here is the most elaborate one, also the most
enterprise-ish, and one that always is a balance on how much time and
effort to put into it (as an architect), as well as hoping that the processes
are sufficiently standardized in a flexible manner so that you don't need
to cover everything again and again in each project.&lt;/p&gt;
&lt;p&gt;So, let's talk about processes...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 01 Sep 2021 11:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-01:/2021/09/process-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>process</category></item><item><title>Component view of infrastructure</title><link>https://blog.siphos.be/2021/08/component-view-of-infrastructure/</link><description>&lt;p&gt;IT architects try to use views and viewpoints to convey the target architecture
to the various stakeholders. Each stakeholder has their own interests in the
architecture and wants to see their requirements fulfilled. A core
role of the architect is to understand these requirements and make sure the
requirements are met, and to balance all the different requirements.&lt;/p&gt;
&lt;p&gt;Architecture languages or meta-models often put significant focus on these
views. Archimate has a large annex on &lt;a href="https://pubs.opengroup.org/architecture/archimate3-doc/apdxc.html#_Toc10045495"&gt;Example
Viewpoints&lt;/a&gt;
just for this purpose. However, unless the organization is widely accustomed to
enterprise architecture views, it is unlikely that the views themselves are the
final product: being able to translate those views into pretty slides and
presentations is still an important task for architects when they need to
present their findings to non-architecture roles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 27 Aug 2021 21:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-08-27:/2021/08/component-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>component</category><category>viewpoint</category></item><item><title>Disaster recovery in the public cloud</title><link>https://blog.siphos.be/2021/07/disaster-recovery-in-the-public-cloud/</link><description>&lt;p&gt;The public cloud is a different beast than an on-premise environment, and that
also reflects itself on how we (should) look at the processes that are
actively steering infrastructure designs and architecture. One of these
is the business continuity, severe incident handling, and the
hopefully-never-to-occur disaster recovery. When building up procedures
for handling disasters (&lt;a href="https://en.wikipedia.org/wiki/Disaster_recovery"&gt;DRP = Disaster Recovery Procedure or Disaster 
Recover Planning&lt;/a&gt;),
it is important to keep in mind what these are about.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 30 Jul 2021 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-30:/2021/07/disaster-recovery-in-the-public-cloud/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>DRP</category></item><item><title>What is the infrastructure domain?</title><link>https://blog.siphos.be/2021/07/what-is-the-infrastructure-domain/</link><description>&lt;p&gt;In my job as domain architect for "infrastructure", I often come across
stakeholders that have no common understanding of what infrastructure means in
an enterprise architecture. Since then, I am trying to figure out a way to
easily explain it - to find a common, generic view on what infrastructure
entails. If successful, I could use this common view to provide context on the
many, many IT projects that are going around.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 19 Jul 2021 15:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-19:/2021/07/what-is-the-infrastructure-domain/</guid><category>Architecture</category><category>architecture</category><category>pattern</category></item><item><title>Organizing service documentation</title><link>https://blog.siphos.be/2021/07/organizing-service-documentation/</link><description>&lt;p&gt;As I mentioned in &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;An IT services overview&lt;/a&gt;
I try to keep track of the architecture and designs of the IT services and
solutions in a way that I feel helps me keep in touch with all the various
services and solutions out there. Similar to how system administrators try to
find a balance while working on documentation (which is often considered a
chore) and using a structure that is sufficiently simple and standard for the
organization to benefit from, architects should try to keep track of
architecturally relevant information as well.&lt;/p&gt;
&lt;p&gt;So in this post, I'm going to explain a bit more on how I approach documenting
service and solution insights for architectural relevance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 08 Jul 2021 09:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-08:/2021/07/organizing-service-documentation/</guid><category>Architecture</category><category>architecture</category><category>documentation</category><category>structure</category><category>wiki</category></item><item><title>Not sure if TOSCA will grow further</title><link>https://blog.siphos.be/2021/06/not-sure-if-TOSCA-will-grow-further/</link><description>&lt;p&gt;TOSCA is an OASIS open standard, and is an abbreviation for &lt;em&gt;Topology and
Orchestration Specification for Cloud Applications&lt;/em&gt;. It provides a
domain-specific language to describe how an application should be deployed
in the cloud (the topology), which and how many resources it needs, as well
as tasks to run when certain events occur (the orchestration). When I
initially came across this standard, I was (and still am) interested
in how far this goes. The promise of declaring an application (and even
bundling the necessary application artefacts) within a single asset and
then using this asset to deploy on whatever cloud is very appealing to
an architect. Especially in organizations that have a multi-cloud
strategy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 30 Jun 2021 14:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-30:/2021/06/not-sure-if-TOSCA-will-grow-further/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>TOSCA</category><category>OASIS</category><category>topology</category><category>orchestration</category><category>infrastructure</category><category>IaC</category><category>NFV</category></item><item><title>Integrating or customizing SaaS within your own cloud environment</title><link>https://blog.siphos.be/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</link><description>&lt;p&gt;Software as a Service (SaaS) solutions are often a quick way to get new
capabilities into an organization’s portfolio. Smaller SaaS solutions are
simple, web-based solutions which barely integrate with the organization’s
other solutions, besides the identity and access management (which is often
handled by federated authentication).&lt;/p&gt;
&lt;p&gt;More complex or intermediate solutions require more integration focus, and
a whole new market of Integration Platform as a Service (iPaaS) solutions
came up to facilitate cross-cloud integrations. But even without the iPaaS
offerings, integrations are often a mandatory part to leverage the benefits
of the newly activated SaaS solution.&lt;/p&gt;
&lt;p&gt;In this post I want to bring some thoughts on the integrations that might be
needed to support customizing a SaaS solution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 23 Jun 2021 15:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-23:/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>SaaS</category><category>integration</category><category>customization</category></item><item><title>An IT services overview</title><link>https://blog.siphos.be/2021/06/an-it-services-overview/</link><description>&lt;p&gt;My current role within the company I work for is “domain architect”, part
of the enterprise architects teams. The domain I am accountable for is 
“infrastructure”, which can be seen as a very broad one. Now, I’ve been
maintaining an overview of our IT services before I reached that role, 
mainly from an elaborate interest in the subject, as well as to optimize
my efficiency further.&lt;/p&gt;
&lt;p&gt;Becoming a domain architect allows me to use the insights I’ve since
gathered to try and give appropriate advice, but also now requires me to
maintain a domain architecture. This structure is going to be the starting
point of it, although it is not the true all and end all of what I would
consider a domain architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 14 Jun 2021 17:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-14:/2021/06/an-it-services-overview/</guid><category>Architecture</category><category>architecture</category><category>overview</category><category>service</category><category>landscape</category><category>catalog</category><category>capability</category></item><item><title>Virtualization vs abstraction</title><link>https://blog.siphos.be/2021/06/virtualization-vs-abstraction/</link><description>&lt;p&gt;When an organization has an extensively large, and heterogeneous
infrastructure, infrastructure architects will attempt to make itless
complex and chaotic by introducing and maintaining a certain degree of
standardization. While many might consider standardization as a
rationalization (standardizing on a single database technology, single
vendor for hardware, etc.), rationalization is only one of the many ways
in which standards can simplify such a degree of complexity.&lt;/p&gt;
&lt;p&gt;In this post, I'd like to point out two other, very common ways to
standardize the IT environment, without really considering a
rationalization: abstraction and virtualization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 03 Jun 2021 10:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-03:/2021/06/virtualization-vs-abstraction/</guid><category>Architecture</category><category>architecture</category><category>virtualization</category><category>abstraction</category></item><item><title>Abstracting infrastructure complexity</title><link>https://blog.siphos.be/2020/12/abstracting-infrastructure-complexity/</link><description>&lt;p&gt;IT is complex. Some even consider it to be more magic than reality. And with
the ongoing evolutions and inventions, the complexity is not really going
away. Sure, some IT areas are becoming easier to understand, but that is often
offset with new areas being explored.&lt;/p&gt;
&lt;p&gt;Companies and organizations that have a sizeable IT footprint generally see an
increase in their infrastructure, regardless of how many rationalization
initiatives that are started. Personally, I find it challenging, in a fun
way, to keep up with the onslaught of new technologies and services that are
onboarded in the infrastructure landscape that I'm responsible for.&lt;/p&gt;
&lt;p&gt;But just understanding a technology isn't enough to deal with its position in
the larger environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 25 Dec 2020 23:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2020-12-25:/2020/12/abstracting-infrastructure-complexity/</guid><category>Architecture</category><category>infrastructure</category><category>archimate</category></item><item><title>Working on infra strategy</title><link>https://blog.siphos.be/2020/10/working-on-infra-strategy/</link><description>&lt;p&gt;After a long hiatus, I'm ready to take up blogging again on my public blog.
With my day job becoming more intensive and my side-job taking the remainder
of the time, I've since quit my work on the Gentoo project. I am in process
of releasing a new edition of the SELinux System Administration book, so I'll
probably discuss that more later.&lt;/p&gt;
&lt;p&gt;Today, I want to write about a task I had to do this year as brand new domain
architect for infrastructure.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 04 Oct 2020 13:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2020-10-04:/2020/10/working-on-infra-strategy/</guid><category>Architecture</category></item><item><title>Project prioritization</title><link>https://blog.siphos.be/2017/07/project-prioritization/</link><description>&lt;p&gt;&lt;sub&gt;This is a long read, skip to “Prioritizing the projects and changes” for the
approach details...&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;Organizations and companies generally have an IT workload (dare I say,
backlog?) which needs to be properly assessed, prioritized and taken up.
Sometimes, the IT team(s) get an amount of budget and HR resources to "do their
thing", while others need to continuously ask for approval to launch a new
project or instantiate a change.&lt;/p&gt;
&lt;p&gt;Sizeable organizations even require engineering and development effort on IT
projects which are not readily available: specialized teams exist, but they are
governance-wise assigned to projects. And as everyone thinks their project is
the top-most priority one, many will be disappointed when they hear there are
no resources available for their pet project.&lt;/p&gt;
&lt;p&gt;So... how should organizations prioritize such projects?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 18 Jul 2017 20:40:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2017-07-18:/2017/07/project-prioritization/</guid><category>Architecture</category><category>pmo</category><category>strategy</category><category>SAFe</category><category>prioritization</category><category>project</category></item><item><title>Structuring infrastructural deployments</title><link>https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/</link><description>&lt;p&gt;Many organizations struggle with the all-time increase in IP address
allocation and the accompanying need for segmentation. In the past, governing
the segments within the organization means keeping close control over the
service deployments, firewall rules, etc.&lt;/p&gt;
&lt;p&gt;Lately, the idea of micro-segmentation, supported through software-defined
networking solutions, seems to defy the need for a segmentation governance.
However, I think that that is a very short-sighted sales proposition. Even
with micro-segmentation, or even pure point-to-point / peer2peer communication
flow control, you'll still be needing a high level overview of the services
within your scope.&lt;/p&gt;
&lt;p&gt;In this blog post, I'll give some insights in how we are approaching this in
the company I work for. In short, it starts with requirements gathering,
creating labels to assign to deployments, creating groups based on one or two
labels in a layered approach, and finally fixating the resulting schema and
start mapping guidance documents (policies) toward the presented architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 07 Jun 2017 20:40:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2017-06-07:/2017/06/structuring-infrastructural-deployments/</guid><category>Architecture</category><category>segmentation</category><category>zoning</category><category>deployments</category><category>landscape</category></item><item><title>Switching focus at work</title><link>https://blog.siphos.be/2015/09/switching-focus-at-work/</link><description>&lt;p&gt;Since 2010, I was at work responsible for the infrastructure architecture of 
a couple of technological domains, namely databases and scheduling/workload 
automation. It brought me in contact with many vendors, many technologies
and most importantly, many teams within the organization. The focus domain
was challenging, as I had to deal with the strategy on how the organization,
which is a financial institution, will deal with databases and scheduling in
the long term.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 20 Sep 2015 13:29:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-09-20:/2015/09/switching-focus-at-work/</guid><category>Architecture</category><category>work</category><category>hadoop</category><category>docker</category></item><item><title>Making the case for multi-instance support</title><link>https://blog.siphos.be/2015/08/making-the-case-for-multi-instance-support/</link><description>&lt;p&gt;With the high attention that technologies such as &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;,
&lt;a href="https://coreos.com/blog/rocket/"&gt;Rocket&lt;/a&gt; and the like get (I recommend to look at 
&lt;a href="https://github.com/p8952/bocker"&gt;Bocker&lt;/a&gt; by Peter Wilmott as well ;-), I
still find it important that technologies are well capable of supporting a
multi-instance environment.&lt;/p&gt;
&lt;p&gt;Being able to run multiple instances makes for great consolidation. The system
can be optimized for the technology, access to the system limited to the admins
of said technology while still providing isolation between instances. For some
technologies, running on commodity hardware just doesn't cut it (not all 
software is written for such hardware platforms) and consolidation allows for
reducing (hardware/licensing) costs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sat, 22 Aug 2015 12:45:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-08-22:/2015/08/making-the-case-for-multi-instance-support/</guid><category>Architecture</category></item></channel></rss>