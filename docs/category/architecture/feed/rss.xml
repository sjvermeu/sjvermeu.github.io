<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Simplicity is a form of art... - Architecture</title><link>https://blog.siphos.be/</link><description></description><lastBuildDate>Sun, 25 Sep 2022 13:00:00 +0200</lastBuildDate><item><title>Sustainability in IT</title><link>https://blog.siphos.be/2022/09/sustainability-in-IT/</link><description>&lt;p&gt;For one of the projects I'm currently involved in, we want to have a better
view on sustainability within IT and see what we (IT) can contribute in light
of the sustainability strategy of the company. For IT infrastructure, one would
think that selecting more power-efficient infrastructure is the way to go, as
well as selecting products whose manufacturing process takes special attention
to sustainability. &lt;/p&gt;
&lt;p&gt;There are other areas to consider as well, though. Reusability of IT
infrastructure and optimal resource consumption are at least two other
attention points that deserve plenty of attention. But let's start at the
manufacturing process...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Certifications for products and companies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eco certifications are a good start in the selection process. By selecting
products with the right certification, companies can initiate their sustainable
IT strategy with a good start. Such certifications look at the product and
manufacturing, and see if they use proper materials, create products that
can have extended lifetimes in the circular (reuse) economy, ensure the
manufacturing processes use renewable energy and do not have harmful 
emissions, safeguard clean water, etc.&lt;/p&gt;
&lt;p&gt;In the preliminary phase I am right now, I do not know yet which 
certifications make most sense to pursue and request. Sustainability is
becoming big business, so plenty of certifications exist as well. From a
cursory search, I'd reckon that the following certifications are worth more
time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ecovadis.com/"&gt;EcoVadis&lt;/a&gt; provides business sustainability ratings
  that not only cover the ecological aspect, but also social and ethical
  performance.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.iso.org/iso-14001-environmental-management.html"&gt;ISO 14001&lt;/a&gt;
  covers environmental management, looking at organizations' processes and
  systematic improvements contributing to sustainability.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.carbonneutral.com/"&gt;Carbon Neutral&lt;/a&gt; focus on transparency
  in measurements and disclosure of emissions, and how the company is
  progressing in their strategy to reduce the impact on the environment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tcocertified.com/"&gt;TCO Certified&lt;/a&gt; attempts to address all
  stages of a manufacturing process, from material selection over social 
  responsibility and hazardous substances up to electronic waste and 
  circular economy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.energystar.gov/"&gt;Energy Star&lt;/a&gt; focuses on energy efficiency,
  and tries to use standardized methods for scoring appliances (including
  computers and servers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Power efficiency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A second obvious part is on power efficiency. Especially in data center
environments, which is the area that I'm interested in, power efficiency
also influences the data center's capability of providing sufficient
cooling to the servers and appliances. Roughly speaking, a 500 Watt
server generates twice as much heat as a 250 Watt server. Now, that's
oversimplifying, but for calculating heat dissipation in a data center,
the maximum power of infrastructure is generally used for the calculations.&lt;/p&gt;
&lt;p&gt;Now, we could start looking for servers with lower power consumption. But
a 250 Watt server is most likely going to be less powerful (computing-wise)
than a 500 Watt server. Hence, power efficiency should be considered in
line with the purpose of the server, and thus also the workloads that it
would have to process.&lt;/p&gt;
&lt;p&gt;We can use benchmarks, like &lt;a href="https://www.spec.org/cpu2017/"&gt;SPEC's CPU 2017&lt;/a&gt;
or &lt;a href="https://www.spec.org/benchmarks.html"&gt;SPEC's Cloud IaaS 2018&lt;/a&gt; benchmarks,
to compare the performance of systems. Knowing the server's performance
for given workloads and the power consumption, allows architects to optimize
the infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Heat management (and more) in the data center&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A large consumer of power in a data center environment are the environmental
controls, with the cooling systems taking a big chunk out of the total
power consumption. Optimizing the heat management in the data center has a
significant impact on the power consumption. Such optimizations are not solely
about reducing the electricity bill, but also about reusing the latent heat
for other purposes. For instance, data center heat can be used to heat up
nearby buildings.&lt;/p&gt;
&lt;p&gt;A working group of the European Commission, the European Energy Efficiency
Platform (E3P), publishes an annual set of best practices in the &lt;a href="https://e3p.jrc.ec.europa.eu/publications/2022-best-practice-guidelines-eu-code-conduct-data-centre-energy-efficiency"&gt;EU Code
of Conduct on Data Center Energy Efficiency&lt;/a&gt;
which covers areas such as airflow design patterns, operating temperature
and humidity ranges, power management features in servers and appliances, 
infrastructure design aspects (like virtualization and appropriate, but no
over-engineered redundancy), etc.&lt;/p&gt;
&lt;p&gt;This practice goes much beyond the heat management alone (and is worth
a complete read), covering the complete data center offering. Combining
these practices with other areas of data center design (such as redundancy
levels, covered by data center tiering) allows for companies that are looking
at new data centers to overhaul their infrastructure and be much better
prepared for sustainable IT.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Circular ecosystem&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Another part that often comes up in sustainability measures is how reusable
the infrastructure components are after their "first life". Infrastructure
systems, which frequently renew after 4 to 5 years of activity, can be resold
rather than destroyed. The same can be said for individual components.&lt;/p&gt;
&lt;p&gt;Companies that deal with sensitive data regularly employ "Do Not Return" clauses
in the purchases of storage devices. Disks are not returned if they are
faulty, or just swapped for higher density disks. Instead, they are routinely
destroyed to make sure no data leakage occurs.&lt;/p&gt;
&lt;p&gt;Instead of destroying otherwise perfect disks (or disks that still have
reusable components) companies could either opt for degaussing (which still
renders the disk unusable, but has better recyclability than destroyed
disks) or data wiping (generally through certified methods that guarantee
the data cannot be retrieved).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extended lifecycle&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Systems are often working perfectly beyond their 4 to 5 year lifespans.
Still, these systems are process-wise automatically renewed to get more
efficient and powerful systems in place. But that might not always be necessary
- beyond even the circular ecosystem remarks above (where such systems could be
resold), these systems can even get extended lifecycle within the company.&lt;/p&gt;
&lt;p&gt;If there is no need for a more powerful system, and the efficiency of
the system is still high (or the efficiency can be improved through
minor updates), companies can seek out ways to prolong the use of the
systems. In previous projects, I advised that big data nodes can
perfectly remain inside the cluster after their regular lifetime, as the
platform software (Hadoop) can easily cope with failures if those would
occur.&lt;/p&gt;
&lt;p&gt;Systems can also be used to host non-production environments or support
lab environments. Or they can be refurbished to ensure maximal efficiency
while still being used in production. Microsoft for instance has a program
called &lt;a href="https://customers.microsoft.com/en-us/story/1431789627332547010-microsoft-circular-centers"&gt;Microsoft Circular Centers&lt;/a&gt;
which aims at a zero-waste sustainability within the data center, through
reuse, repurpose and recycling.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Right-sizing the infrastructure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Right-sizing is to select and design infrastructure to deal with the
workload, but not more. Having a set of systems at full capacity is
better than having twice as many systems at half capacity, as this leads
to power inefficiencies.&lt;/p&gt;
&lt;p&gt;To accomplish right-sizing isn't as easy as selecting the right server
for a particular workload. Workload is distributed, and systems are
virtualized. Virtualization allows for much better right-sizing as you
can distribute workload more optimally.&lt;/p&gt;
&lt;p&gt;Companies with large amounts of systems can more efficiently distribute
workload across their systems, making it easier to have a good consumption
pattern. Smaller companies will notice that they need to design for
the burst and maximum usage, whereas the average usage is far, far below
that threshold. &lt;/p&gt;
&lt;p&gt;Using cloud resources can help to deal with bursts and higher demand, while
still having resources on-premise to deal with the regular workload. Such
hybrid designs, however, can be complex, so make sure to address this with
the right profiles (yes, I'm making a stand for architects here ;-)&lt;/p&gt;
&lt;p&gt;Standardizing your infrastructure also makes this easier to accomplish.
If the vast majority of servers are of the same architecture, and you
standardize on as few operating systems, programming languages and what
not, you can more easily distribute workload than when these systems
have different architectures and purposes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Automated workload and power management&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Large environments will regularly have servers and infrastructure that is not
continuously used at near full capacity. Workloads are frequently following a
certain curve, such as higher demand during the day and lower at night.
Larger platforms use this curve to schedule appropriate workload (like
running heavy batch workload at night while keeping the systems available
for operational workload during the day) so that the resources are more
optimally used.&lt;/p&gt;
&lt;p&gt;By addressing workload management and aligning power management, companies
can improve their power usage by reducing active systems when there are less
resource needs. This can be done gradually, such as putting CPUs in lower
power modes (CPU power takes roughly 30% of a system's total power usage),
but can expand to complete hosts being put in idle state.&lt;/p&gt;
&lt;p&gt;We can even make designs where servers are shut down when unused. While
this is frequently frowned upon, citing possible impact on hardware
failures as well as reduced reactivity to sudden workload demand, proper
shutdown techniques do offer significant power savings (as per a
research article titled &lt;a href="https://www.researchgate.net/publication/323356951_Quantifying_the_Impact_of_Shutdown_Techniques_for_Energy-Efficient_Data_Centers"&gt;Quantifying the Impact of Shutdown Techniques
for Energy-Efficient Data Centers&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sustainability within IT focuses on several improvements and requirements.
Certification helps in finding and addressing these, but this is not
critical in any company's strategy. Companies can address sustainability
easily without certification, but with proper attention and design.&lt;/p&gt;
&lt;p&gt;Feedback? Comments? Don't hesitate to &lt;a href="mailto:sven.vermeulen@siphos.be"&gt;drop me an
email&lt;/a&gt;, or join the &lt;a href="https://twitter.com/infrainsight/status/1573941352844464128"&gt;discussion on
Twitter&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 25 Sep 2022 13:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-09-25:/2022/09/sustainability-in-IT/</guid><category>Architecture</category><category>sustainability</category></item><item><title>Getting lost in the frameworks</title><link>https://blog.siphos.be/2022/08/getting-lost-in-the-frameworks/</link><description>&lt;p&gt;The IT world is littered with frameworks, best practices, reference
architectures and more. In an ever-lasting attempt to standardize IT,
we often get lost in too many standards or specifications. For consultants,
this is a gold-mine, as they jump in to support companies - for a fee, 
naturally - in adopting one or more of these frameworks or specifications.&lt;/p&gt;
&lt;p&gt;While having references and specifications isn't a bad thing, there are
always pros and cons.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 26 Aug 2022 13:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-08-26:/2022/08/getting-lost-in-the-frameworks/</guid><category>Architecture</category><category>framework</category><category>CMMI</category><category>ISO</category></item><item><title>Containers are the new IaaS</title><link>https://blog.siphos.be/2022/05/containers-are-the-new-iaas/</link><description>&lt;p&gt;At work, as with many other companies, we're actively investing in new
platforms, including container platforms and public cloud. We use Kubernetes
based container platforms both on-premise and in the cloud, but are also very
adamant that the container platforms should only be used for application
workload that is correctly designed for cloud-native deployments: we do not
want to see vendors packaging full operating systems in a container and
then shouting they are now container-ready.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sat, 21 May 2022 13:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-05-21:/2022/05/containers-are-the-new-iaas/</guid><category>Architecture</category><category>kubernetes</category><category>container</category><category>iaas</category><category>infrastructure</category><category>virtual-machine</category></item><item><title>Defining what an IT asset is</title><link>https://blog.siphos.be/2022/02/defining-what-an-it-asset-is/</link><description>&lt;p&gt;One of the main IT processes that a company should strive to have in place
is a decent IT asset management system. It facilitates knowing what assets
you own, where they are, who the owner is, and provides a foundation for
numerous other IT processes.&lt;/p&gt;
&lt;p&gt;However, when asking "what is an IT asset", it gets kind off fuzzy...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 13 Feb 2022 13:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-02-13:/2022/02/defining-what-an-it-asset-is/</guid><category>Architecture</category><category>asset-management</category><category>cobit</category><category>itil</category></item><item><title>An IT conceptual data model</title><link>https://blog.siphos.be/2022/01/an-it-conceptual-data-model/</link><description>&lt;p&gt;This time a much shorter post, as I've been asked to share this information
recently and found that it, by itself, is already useful enough to publish. It
is a conceptual data model for IT services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 17 Jan 2022 10:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-01-17:/2022/01/an-it-conceptual-data-model/</guid><category>Architecture</category><category>cdm</category><category>asset-management</category><category>configuration-management</category></item><item><title>Ownership and responsibilities for infrastructure services</title><link>https://blog.siphos.be/2022/01/ownership-and-responsibilities-for-infrastructure-services/</link><description>&lt;p&gt;In a perfect world, using infrastructure or technology services would be
seamless, without impact, without risks. It would auto-update, tailor to
the user needs, detect when new features are necessary, adapt, etc. But
while this is undoubtedly what vendors are saying their product delivers,
the truth is way, waaaay different.&lt;/p&gt;
&lt;p&gt;Managing infrastructure services implies that the company or organization
needs to organize itself to deal with all aspects of supporting a service.
What are these aspects? Well, let's go through those that are top-of-mind
for me...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 13 Jan 2022 09:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2022-01-13:/2022/01/ownership-and-responsibilities-for-infrastructure-services/</guid><category>Architecture</category><category>RACI</category><category>responsibilities</category></item><item><title>The pleasures of having DTAP</title><link>https://blog.siphos.be/2021/12/the-pleasures-of-having-DTAP/</link><description>&lt;p&gt;No, not Diphtheria, Tetanus, and Pertussis (vaccine), but &lt;em&gt;Development,
Test, Acceptance, and Production (DTAP)&lt;/em&gt;: different environments that,
together with a well-working release management process, provide a way to
get higher quality and reduced risks in production. DTAP is an important
cornerstone for a larger infrastructure architecture as it provides
environments that are tailored to the needs of many stakeholders.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 30 Dec 2021 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-12-30:/2021/12/the-pleasures-of-having-DTAP/</guid><category>Architecture</category><category>DTAP</category><category>environments</category><category>zoning</category><category>development</category><category>test</category><category>acceptance</category><category>production</category></item><item><title>Creating an enterprise open source policy</title><link>https://blog.siphos.be/2021/11/creating-an-enterprise-open-source-policy/</link><description>&lt;p&gt;Nowadays it is impossible to ignore, or even prevent open source from being
active within the enterprise world. Even if a company only wants to use
commercially backed solutions, many - if not most - of these are built with, and
are using open source software.&lt;/p&gt;
&lt;p&gt;However, open source is more than just a code sourcing possibility. By having a
good statement within the company on how it wants to deal with open source, what
it wants to support, etc. engineers and developers can have a better
understanding of what they can do to support their business further.&lt;/p&gt;
&lt;p&gt;In many cases, companies will draft up an &lt;em&gt;open source policy&lt;/em&gt;, and in this post
I want to share some practices I've learned on how to draft such a policy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sat, 20 Nov 2021 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-11-20:/2021/11/creating-an-enterprise-open-source-policy/</guid><category>Architecture</category><category>opensource</category><category>enterprise</category><category>legal</category><category>compliance</category></item><item><title>Hybrid cloud can be very complex</title><link>https://blog.siphos.be/2021/11/hybrid-cloud-can-be-very-complex/</link><description>&lt;p&gt;I am not an advocate for hybrid cloud architectures. Or at least, not the
definition for hybrid cloud that assumes one (cloud or on premise) environment
is just an extension of another (cloud or on premise) environment. While such
architectures seem to be simple and fruitful - you can easily add some capacity
in the other environment to handle burst load - they are a complex beast to
tame.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 08 Nov 2021 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-11-08:/2021/11/hybrid-cloud-can-be-very-complex/</guid><category>Architecture</category><category>hybrid</category><category>cloud</category></item><item><title>Transparent encryption is not a silver bullet</title><link>https://blog.siphos.be/2021/10/transparent-encryption-is-not-a-silver-bullet/</link><description>&lt;p&gt;Transparent encryption is relatively easy to implement, but without
understanding what it actually means or why you are implementing it, you will
probably make the assumption that this will prevent the data from being
accessed by unauthorized users. Nothing can be further from the truth.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 19 Oct 2021 08:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-10-19:/2021/10/transparent-encryption-is-not-a-silver-bullet/</guid><category>Architecture</category><category>encryption</category><category>transparent</category><category>luks</category><category>dm-crypt</category></item><item><title>Evaluating the zero trust hype</title><link>https://blog.siphos.be/2021/10/evaluating-the-zero-trust-hype/</link><description>&lt;p&gt;Security vendors are touting the benefits of "zero trust" as the new way to
approach security and security-conscious architecturing. But while there are
principles within the zero trust mindset that came up in the last dozen years,
most of the content in zero trust discussions is tied to age-old security
propositions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 05 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-10-05:/2021/10/evaluating-the-zero-trust-hype/</guid><category>Architecture</category><category>zero-trust</category><category>security</category><category>enterprise</category><category>network-security</category></item><item><title>Scale is a cloud threat</title><link>https://blog.siphos.be/2021/09/scale-is-a-cloud-threat/</link><description>&lt;p&gt;Not that long ago, a vulnerability was found in &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/"&gt;Microsoft Azure Cosmos
DB&lt;/a&gt;, a NoSQL SaaS database
within the Microsoft Azure cloud. The vulnerability, which is dubbed
&lt;a href="https://chaosdb.wiz.io/"&gt;ChaosDB&lt;/a&gt; by the &lt;a href="https://twitter.com/wiz_io"&gt;Wiz Research
Team&lt;/a&gt;, uses a vulnerability or misconfiguration in
the &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/cosmosdb-jupyter-notebooks"&gt;Jupyter Notebook
feature&lt;/a&gt;
within Cosmos DB. This vulnerability allowed an attacker to gain access to
other's Cosmos DB credentials. Not long thereafter, a second vulnerability
dubbed
&lt;a href="https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure"&gt;OMIGOD&lt;/a&gt;
showed that cloud security is not as simple as some vendors like you to believe.&lt;/p&gt;
&lt;p&gt;These vulnerabilities are a good example of how scale is a cloud threat. Companies
that do not have enough experience with public cloud might not assume this in
their threat models.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 28 Sep 2021 17:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-28:/2021/09/scale-is-a-cloud-threat/</guid><category>Architecture</category><category>cloud</category><category>vulnerability</category></item><item><title>Naming conventions</title><link>https://blog.siphos.be/2021/09/naming-conventions/</link><description>&lt;p&gt;Naming conventions. Picking the right naming convention is easy if you are all
by yourself, but hard when you need to agree upon the conventions in a larger
group. Everybody has an opinion on naming conventions, and once you decide
on it, you do expect everybody to follow through on it.&lt;/p&gt;
&lt;p&gt;Let's consider why naming conventions are (not) important and consider a few
examples to help in creating a good naming convention yourself.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 15 Sep 2021 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-15:/2021/09/naming-conventions/</guid><category>Architecture</category><category>naming</category></item><item><title>Location view of infrastructure</title><link>https://blog.siphos.be/2021/09/location-view-of-infrastructure/</link><description>&lt;p&gt;In this last post on the infrastructure domain, I cover the fifth and final
viewpoint that is important for an infrastructure domain representation, and
that is the &lt;em&gt;location view&lt;/em&gt;. As mentioned in previous posts, the viewpoints I
think are most representative of the infrastructure domain are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/09/process-view-of-infrastructure/"&gt;process view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;service view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;component view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;location view&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like with the component view, the location view is a layered approach. While I
initially wanted to call it the network view, "location" might be a broader
term that matches the content better. Still, it's not a perfect name, but the
name is less important than the content, not?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 07 Sep 2021 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-07:/2021/09/location-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>location</category><category>network</category><category>virtualization</category><category>protocol</category></item><item><title>Process view of infrastructure</title><link>https://blog.siphos.be/2021/09/process-view-of-infrastructure/</link><description>&lt;p&gt;In my &lt;a href="https://blog.siphos.be/2021/08/component-view-of-infrastructure/"&gt;previous post&lt;/a&gt;,
I started with the five different views that would support a good view of
what infrastructure would be. I believe these views (component, location,
process, service, and zoning) cover the breadth of the domain. The post also
described the component view a bit more and linked to previous posts I made (one
for &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;services&lt;/a&gt;, another for
&lt;a href="https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/"&gt;zoning&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The one I want to tackle here is the most elaborate one, also the most
enterprise-ish, and one that always is a balance on how much time and
effort to put into it (as an architect), as well as hoping that the processes
are sufficiently standardized in a flexible manner so that you don't need
to cover everything again and again in each project.&lt;/p&gt;
&lt;p&gt;So, let's talk about processes...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 01 Sep 2021 11:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-09-01:/2021/09/process-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>process</category></item><item><title>Component view of infrastructure</title><link>https://blog.siphos.be/2021/08/component-view-of-infrastructure/</link><description>&lt;p&gt;IT architects try to use views and viewpoints to convey the target architecture
to the various stakeholders. Each stakeholder has their own interests in the
architecture and wants to see their requirements fulfilled. A core
role of the architect is to understand these requirements and make sure the
requirements are met, and to balance all the different requirements.&lt;/p&gt;
&lt;p&gt;Architecture languages or meta-models often put significant focus on these
views. Archimate has a large annex on &lt;a href="https://pubs.opengroup.org/architecture/archimate3-doc/apdxc.html#_Toc10045495"&gt;Example
Viewpoints&lt;/a&gt;
just for this purpose. However, unless the organization is widely accustomed to
enterprise architecture views, it is unlikely that the views themselves are the
final product: being able to translate those views into pretty slides and
presentations is still an important task for architects when they need to
present their findings to non-architecture roles.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 27 Aug 2021 21:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-08-27:/2021/08/component-view-of-infrastructure/</guid><category>Architecture</category><category>architecture</category><category>component</category><category>viewpoint</category></item><item><title>Disaster recovery in the public cloud</title><link>https://blog.siphos.be/2021/07/disaster-recovery-in-the-public-cloud/</link><description>&lt;p&gt;The public cloud is a different beast than an on-premise environment, and that
also reflects itself on how we (should) look at the processes that are
actively steering infrastructure designs and architecture. One of these
is the business continuity, severe incident handling, and the
hopefully-never-to-occur disaster recovery. When building up procedures
for handling disasters (&lt;a href="https://en.wikipedia.org/wiki/Disaster_recovery"&gt;DRP = Disaster Recovery Procedure or Disaster 
Recover Planning&lt;/a&gt;),
it is important to keep in mind what these are about.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 30 Jul 2021 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-30:/2021/07/disaster-recovery-in-the-public-cloud/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>DRP</category></item><item><title>What is the infrastructure domain?</title><link>https://blog.siphos.be/2021/07/what-is-the-infrastructure-domain/</link><description>&lt;p&gt;In my job as domain architect for "infrastructure", I often come across
stakeholders that have no common understanding of what infrastructure means in
an enterprise architecture. Since then, I am trying to figure out a way to
easily explain it - to find a common, generic view on what infrastructure
entails. If successful, I could use this common view to provide context on the
many, many IT projects that are going around.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 19 Jul 2021 15:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-19:/2021/07/what-is-the-infrastructure-domain/</guid><category>Architecture</category><category>architecture</category><category>pattern</category></item><item><title>Organizing service documentation</title><link>https://blog.siphos.be/2021/07/organizing-service-documentation/</link><description>&lt;p&gt;As I mentioned in &lt;a href="https://blog.siphos.be/2021/06/an-it-services-overview/"&gt;An IT services overview&lt;/a&gt;
I try to keep track of the architecture and designs of the IT services and
solutions in a way that I feel helps me keep in touch with all the various
services and solutions out there. Similar to how system administrators try to
find a balance while working on documentation (which is often considered a
chore) and using a structure that is sufficiently simple and standard for the
organization to benefit from, architects should try to keep track of
architecturally relevant information as well.&lt;/p&gt;
&lt;p&gt;So in this post, I'm going to explain a bit more on how I approach documenting
service and solution insights for architectural relevance.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 08 Jul 2021 09:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-07-08:/2021/07/organizing-service-documentation/</guid><category>Architecture</category><category>architecture</category><category>documentation</category><category>structure</category><category>wiki</category></item><item><title>Not sure if TOSCA will grow further</title><link>https://blog.siphos.be/2021/06/not-sure-if-TOSCA-will-grow-further/</link><description>&lt;p&gt;TOSCA is an OASIS open standard, and is an abbreviation for &lt;em&gt;Topology and
Orchestration Specification for Cloud Applications&lt;/em&gt;. It provides a
domain-specific language to describe how an application should be deployed
in the cloud (the topology), which and how many resources it needs, as well
as tasks to run when certain events occur (the orchestration). When I
initially came across this standard, I was (and still am) interested
in how far this goes. The promise of declaring an application (and even
bundling the necessary application artefacts) within a single asset and
then using this asset to deploy on whatever cloud is very appealing to
an architect. Especially in organizations that have a multi-cloud
strategy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 30 Jun 2021 14:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-30:/2021/06/not-sure-if-TOSCA-will-grow-further/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>TOSCA</category><category>OASIS</category><category>topology</category><category>orchestration</category><category>infrastructure</category><category>IaC</category><category>NFV</category></item><item><title>Integrating or customizing SaaS within your own cloud environment</title><link>https://blog.siphos.be/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</link><description>&lt;p&gt;Software as a Service (SaaS) solutions are often a quick way to get new
capabilities into an organization’s portfolio. Smaller SaaS solutions are
simple, web-based solutions which barely integrate with the organization’s
other solutions, besides the identity and access management (which is often
handled by federated authentication).&lt;/p&gt;
&lt;p&gt;More complex or intermediate solutions require more integration focus, and
a whole new market of Integration Platform as a Service (iPaaS) solutions
came up to facilitate cross-cloud integrations. But even without the iPaaS
offerings, integrations are often a mandatory part to leverage the benefits
of the newly activated SaaS solution.&lt;/p&gt;
&lt;p&gt;In this post I want to bring some thoughts on the integrations that might be
needed to support customizing a SaaS solution.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 23 Jun 2021 15:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-23:/2021/06/integrating-or-customizing-SaaS-within-your-own-cloud-environment/</guid><category>Architecture</category><category>architecture</category><category>cloud</category><category>SaaS</category><category>integration</category><category>customization</category></item><item><title>An IT services overview</title><link>https://blog.siphos.be/2021/06/an-it-services-overview/</link><description>&lt;p&gt;My current role within the company I work for is “domain architect”, part
of the enterprise architects teams. The domain I am accountable for is 
“infrastructure”, which can be seen as a very broad one. Now, I’ve been
maintaining an overview of our IT services before I reached that role, 
mainly from an elaborate interest in the subject, as well as to optimize
my efficiency further.&lt;/p&gt;
&lt;p&gt;Becoming a domain architect allows me to use the insights I’ve since
gathered to try and give appropriate advice, but also now requires me to
maintain a domain architecture. This structure is going to be the starting
point of it, although it is not the true all and end all of what I would
consider a domain architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Mon, 14 Jun 2021 17:30:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-14:/2021/06/an-it-services-overview/</guid><category>Architecture</category><category>architecture</category><category>overview</category><category>service</category><category>landscape</category><category>catalog</category><category>capability</category></item><item><title>Virtualization vs abstraction</title><link>https://blog.siphos.be/2021/06/virtualization-vs-abstraction/</link><description>&lt;p&gt;When an organization has an extensively large, and heterogeneous
infrastructure, infrastructure architects will attempt to make itless
complex and chaotic by introducing and maintaining a certain degree of
standardization. While many might consider standardization as a
rationalization (standardizing on a single database technology, single
vendor for hardware, etc.), rationalization is only one of the many ways
in which standards can simplify such a degree of complexity.&lt;/p&gt;
&lt;p&gt;In this post, I'd like to point out two other, very common ways to
standardize the IT environment, without really considering a
rationalization: abstraction and virtualization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Thu, 03 Jun 2021 10:10:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2021-06-03:/2021/06/virtualization-vs-abstraction/</guid><category>Architecture</category><category>architecture</category><category>virtualization</category><category>abstraction</category></item><item><title>Abstracting infrastructure complexity</title><link>https://blog.siphos.be/2020/12/abstracting-infrastructure-complexity/</link><description>&lt;p&gt;IT is complex. Some even consider it to be more magic than reality. And with
the ongoing evolutions and inventions, the complexity is not really going
away. Sure, some IT areas are becoming easier to understand, but that is often
offset with new areas being explored.&lt;/p&gt;
&lt;p&gt;Companies and organizations that have a sizeable IT footprint generally see an
increase in their infrastructure, regardless of how many rationalization
initiatives that are started. Personally, I find it challenging, in a fun
way, to keep up with the onslaught of new technologies and services that are
onboarded in the infrastructure landscape that I'm responsible for.&lt;/p&gt;
&lt;p&gt;But just understanding a technology isn't enough to deal with its position in
the larger environment.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Fri, 25 Dec 2020 23:00:00 +0100</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2020-12-25:/2020/12/abstracting-infrastructure-complexity/</guid><category>Architecture</category><category>infrastructure</category><category>archimate</category></item><item><title>Working on infra strategy</title><link>https://blog.siphos.be/2020/10/working-on-infra-strategy/</link><description>&lt;p&gt;After a long hiatus, I'm ready to take up blogging again on my public blog.
With my day job becoming more intensive and my side-job taking the remainder
of the time, I've since quit my work on the Gentoo project. I am in process
of releasing a new edition of the SELinux System Administration book, so I'll
probably discuss that more later.&lt;/p&gt;
&lt;p&gt;Today, I want to write about a task I had to do this year as brand new domain
architect for infrastructure.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 04 Oct 2020 13:20:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2020-10-04:/2020/10/working-on-infra-strategy/</guid><category>Architecture</category></item><item><title>Project prioritization</title><link>https://blog.siphos.be/2017/07/project-prioritization/</link><description>&lt;p&gt;&lt;sub&gt;This is a long read, skip to “Prioritizing the projects and changes” for the
approach details...&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;Organizations and companies generally have an IT workload (dare I say,
backlog?) which needs to be properly assessed, prioritized and taken up.
Sometimes, the IT team(s) get an amount of budget and HR resources to "do their
thing", while others need to continuously ask for approval to launch a new
project or instantiate a change.&lt;/p&gt;
&lt;p&gt;Sizeable organizations even require engineering and development effort on IT
projects which are not readily available: specialized teams exist, but they are
governance-wise assigned to projects. And as everyone thinks their project is
the top-most priority one, many will be disappointed when they hear there are
no resources available for their pet project.&lt;/p&gt;
&lt;p&gt;So... how should organizations prioritize such projects?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Tue, 18 Jul 2017 20:40:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2017-07-18:/2017/07/project-prioritization/</guid><category>Architecture</category><category>pmo</category><category>strategy</category><category>SAFe</category><category>prioritization</category><category>project</category></item><item><title>Structuring infrastructural deployments</title><link>https://blog.siphos.be/2017/06/structuring-infrastructural-deployments/</link><description>&lt;p&gt;Many organizations struggle with the all-time increase in IP address
allocation and the accompanying need for segmentation. In the past, governing
the segments within the organization means keeping close control over the
service deployments, firewall rules, etc.&lt;/p&gt;
&lt;p&gt;Lately, the idea of micro-segmentation, supported through software-defined
networking solutions, seems to defy the need for a segmentation governance.
However, I think that that is a very short-sighted sales proposition. Even
with micro-segmentation, or even pure point-to-point / peer2peer communication
flow control, you'll still be needing a high level overview of the services
within your scope.&lt;/p&gt;
&lt;p&gt;In this blog post, I'll give some insights in how we are approaching this in
the company I work for. In short, it starts with requirements gathering,
creating labels to assign to deployments, creating groups based on one or two
labels in a layered approach, and finally fixating the resulting schema and
start mapping guidance documents (policies) toward the presented architecture.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Wed, 07 Jun 2017 20:40:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2017-06-07:/2017/06/structuring-infrastructural-deployments/</guid><category>Architecture</category><category>segmentation</category><category>zoning</category><category>deployments</category><category>landscape</category></item><item><title>Switching focus at work</title><link>https://blog.siphos.be/2015/09/switching-focus-at-work/</link><description>&lt;p&gt;Since 2010, I was at work responsible for the infrastructure architecture of 
a couple of technological domains, namely databases and scheduling/workload 
automation. It brought me in contact with many vendors, many technologies
and most importantly, many teams within the organization. The focus domain
was challenging, as I had to deal with the strategy on how the organization,
which is a financial institution, will deal with databases and scheduling in
the long term.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sun, 20 Sep 2015 13:29:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-09-20:/2015/09/switching-focus-at-work/</guid><category>Architecture</category><category>work</category><category>hadoop</category><category>docker</category></item><item><title>Making the case for multi-instance support</title><link>https://blog.siphos.be/2015/08/making-the-case-for-multi-instance-support/</link><description>&lt;p&gt;With the high attention that technologies such as &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;,
&lt;a href="https://coreos.com/blog/rocket/"&gt;Rocket&lt;/a&gt; and the like get (I recommend to look at 
&lt;a href="https://github.com/p8952/bocker"&gt;Bocker&lt;/a&gt; by Peter Wilmott as well ;-), I
still find it important that technologies are well capable of supporting a
multi-instance environment.&lt;/p&gt;
&lt;p&gt;Being able to run multiple instances makes for great consolidation. The system
can be optimized for the technology, access to the system limited to the admins
of said technology while still providing isolation between instances. For some
technologies, running on commodity hardware just doesn't cut it (not all 
software is written for such hardware platforms) and consolidation allows for
reducing (hardware/licensing) costs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sven Vermeulen</dc:creator><pubDate>Sat, 22 Aug 2015 12:45:00 +0200</pubDate><guid isPermaLink="false">tag:blog.siphos.be,2015-08-22:/2015/08/making-the-case-for-multi-instance-support/</guid><category>Architecture</category></item></channel></rss>